(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{114:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return a})),r.d(n,"metadata",(function(){return s})),r.d(n,"toc",(function(){return u})),r.d(n,"default",(function(){return m}));var t=r(3),o=r(7),i=(r(0),r(407)),c=["components"],a={id:"rich-communication-service",title:"Rich Communication Service",description:"Rich Communication Service",sidebar_label:"Rich Communication Service",featured:!0,rank:2},s={unversionedId:"glossary/rich-communication-service",id:"glossary/rich-communication-service",isDocsHomePage:!1,title:"Rich Communication Service",description:"Rich Communication Service",source:"@site/docs/glossary/rich-communication-service.md",slug:"/glossary/rich-communication-service",permalink:"/docs/glossary/rich-communication-service",version:"current",sidebar_label:"Rich Communication Service",sidebar:"glossary",previous:{title:"Chat",permalink:"/docs/glossary/chat"},next:{title:"Bot-to-bot Communication Using Natural Language",permalink:"/docs/glossary/bot-to-bot-communication-using-natural-language"}},u=[],l={toc:u};function m(e){var n=e.components,r=Object(o.a)(e,c);return Object(i.b)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Rich Communication Services is a communication protocol between mobile-telephone carriers and between phone and carrier, aiming at replacing SMS messages with a text-message system that is richer. Some examples are Google Business Messages, RCS Messaging"))}m.isMDXComponent=!0},407:function(e,n,r){"use strict";r.d(n,"a",(function(){return m})),r.d(n,"b",(function(){return b}));var t=r(0),o=r.n(t);function i(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function c(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?c(Object(r),!0).forEach((function(n){i(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},i=Object.keys(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)r=i[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=o.a.createContext({}),l=function(e){var n=o.a.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},m=function(e){var n=l(e.components);return o.a.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=l(r),f=t,b=m["".concat(c,".").concat(f)]||m[f]||p[f]||i;return r?o.a.createElement(b,a(a({ref:n},u),{},{components:r})):o.a.createElement(b,a({ref:n},u))}));function b(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,c=new Array(i);c[0]=f;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:t,c[1]=a;for(var u=2;u<i;u++)c[u]=r[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);