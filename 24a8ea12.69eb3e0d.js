(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return u})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(3),o=n(7),a=(n(0),n(411)),c=n(415),s=n(416),i={title:"group_by",type:"processor",status:"stable",categories:["Composition"]},u={unversionedId:"components/processors/group_by",id:"components/processors/group_by",isDocsHomePage:!1,title:"group_by",description:"\x3c!--",source:"@site/docs/components/processors/group_by.md",slug:"/components/processors/group_by",permalink:"/docs/components/processors/group_by",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/processors/group_by.md",version:"current",sidebar:"docs",previous:{title:"grok",permalink:"/docs/components/processors/grok"},next:{title:"group_by_value",permalink:"/docs/components/processors/group_by_value"}},p=[{value:"Fields",id:"fields",children:[{value:"<code>[].check</code>",id:"check",children:[]},{value:"<code>[].processors</code>",id:"processors",children:[]}]},{value:"Examples",id:"examples",children:[]}],l={toc:p};function b(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Splits a ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/batching/"}),"batch of messages")," into N batches, where each resulting batch contains a group of messages determined by a ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Config fields, showing default values\ngroup_by: []\n")),Object(a.b)("p",null,"Once the groups are established a list of processors are applied to their respective grouped batch, which can be used to label the batch as per their grouping. Messages that do not pass the check of any specified group are placed in their own group."),Object(a.b)("p",null,"The functionality of this processor depends on being applied across messages\nthat are batched. You can find out more about batching ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"in this doc"),"."),Object(a.b)("h2",{id:"fields"},"Fields"),Object(a.b)("h3",{id:"check"},Object(a.b)("inlineCode",{parentName:"h3"},"[].check")),Object(a.b)("p",null,"A ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message belongs to a given group."),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"string"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "foo"\n\ncheck: this.contents.urls.contains("https://benthos.dev/")\n\ncheck: "true"\n')),Object(a.b)("h3",{id:"processors"},Object(a.b)("inlineCode",{parentName:"h3"},"[].processors")),Object(a.b)("p",null,"A list of ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/components/processors/about/"}),"processors")," to execute on the newly formed group."),Object(a.b)("p",null,"Type: ",Object(a.b)("inlineCode",{parentName:"p"},"array"),Object(a.b)("br",{parentName:"p"}),"\n","Default: ",Object(a.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(a.b)("h2",{id:"examples"},"Examples"),Object(a.b)(c.a,{defaultValue:"Grouped Processing",values:[{label:"Grouped Processing",value:"Grouped Processing"}],mdxType:"Tabs"},Object(a.b)(s.a,{value:"Grouped Processing",mdxType:"TabItem"},Object(a.b)("p",null,"Imagine we have a batch of messages that we wish to split into a group of foos and everything else, which should be sent to different output destinations based on those groupings. We also need to send the foos as a tar gzip archive. For this purpose we can use the ",Object(a.b)("inlineCode",{parentName:"p"},"group_by")," processor with a ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/components/outputs/switch"}),Object(a.b)("inlineCode",{parentName:"a"},"switch"))," output:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - group_by:\n      - check: content().contains("this is a foo")\n        processors:\n          - archive:\n              format: tar\n          - compress:\n              algorithm: gzip\n          - bloblang: \'meta grouping = "foo"\'\n\noutput:\n  switch:\n    cases:\n      - check: meta("grouping") == "foo"\n        output:\n          gcp_pubsub:\n            project: foo_prod\n            topic: only_the_foos\n      - output:\n          gcp_pubsub:\n            project: somewhere_else\n            topic: no_foos_here\n')))))}b.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return f}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),l=p(n),d=r,f=l["".concat(c,".").concat(d)]||l[d]||b[d]||a;return n?o.a.createElement(f,s(s({ref:t},u),{},{components:n})):o.a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,c[1]=s;for(var u=2;u<a;u++)c[u]=n[u];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function r(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(o&&(o+=" "),o+=t);return o}},413:function(e,t,n){"use strict";var r=n(0),o=n(414);t.a=function(){var e=Object(r.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var r=n(0),o=Object(r.createContext)(void 0);t.a=o},415:function(e,t,n){"use strict";var r=n(0),o=n.n(r),a=n(413),c=n(412),s=n(56),i=n.n(s),u=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,s=e.defaultValue,l=e.values,b=e.groupId,d=e.className,f=Object(a.a)(),m=f.tabGroupChoices,h=f.setTabGroupChoices,g=Object(r.useState)(s),O=g[0],y=g[1],j=r.Children.toArray(e.children);if(null!=b){var v=m[b];null!=v&&v!==O&&l.some((function(e){return e.value===v}))&&y(v)}var w=function(e){y(e),null!=b&&h(b,e)},N=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},d)},l.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(c.a)("tabs__item",i.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case u:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return w(t)},onClick:function(){w(t)}},n)}))),t?Object(r.cloneElement)(j.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},j.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},416:function(e,t,n){"use strict";var r=n(3),o=n(0),a=n.n(o);t.a=function(e){var t=e.children,n=e.hidden,o=e.className;return a.a.createElement("div",Object(r.a)({role:"tabpanel"},{hidden:n,className:o}),t)}}}]);