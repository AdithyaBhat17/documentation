(window.webpackJsonp=window.webpackJsonp||[]).push([[282],{359:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),c=n(7),r=(n(0),n(411)),o=n(415),i=n(416),l={title:"memory",type:"buffer",status:"stable"},b={unversionedId:"components/buffers/memory",id:"components/buffers/memory",isDocsHomePage:!1,title:"memory",description:"\x3c!--",source:"@site/docs/components/buffers/memory.md",slug:"/components/buffers/memory",permalink:"/docs/components/buffers/memory",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/buffers/memory.md",version:"current",sidebar:"docs",previous:{title:"Buffers",permalink:"/docs/components/buffers/about"},next:{title:"none",permalink:"/docs/components/buffers/none"}},s=[{value:"Batching",id:"batching",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>limit</code>",id:"limit",children:[]},{value:"<code>batch_policy</code>",id:"batch_policy",children:[]},{value:"<code>batch_policy.enabled</code>",id:"batch_policyenabled",children:[]},{value:"<code>batch_policy.count</code>",id:"batch_policycount",children:[]},{value:"<code>batch_policy.byte_size</code>",id:"batch_policybyte_size",children:[]},{value:"<code>batch_policy.period</code>",id:"batch_policyperiod",children:[]},{value:"<code>batch_policy.check</code>",id:"batch_policycheck",children:[]},{value:"<code>batch_policy.processors</code>",id:"batch_policyprocessors",children:[]}]}],p={toc:s};function u(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Stores consumed messages in memory and acknowledges them at the input level.\nDuring shutdown Benthos will make a best attempt at flushing all remaining\nmessages before exiting cleanly."),Object(r.b)(o.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"common",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\nbuffer:\n  memory:\n    limit: 524288000\n    batch_policy:\n      enabled: false\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'))),Object(r.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\nbuffer:\n  memory:\n    limit: 524288000\n    batch_policy:\n      enabled: false\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n')))),Object(r.b)("p",null,"This buffer is appropriate when consuming messages from inputs that do not\ngracefully handle back pressure and where delivery guarantees aren't critical."),Object(r.b)("p",null,"This buffer has a configurable limit, where consumption will be stopped with\nback pressure upstream if the total size of messages in the buffer reaches this\namount. Since this calculation is only an estimate, and the real size of\nmessages in RAM is always higher, it is recommended to set the limit\nsignificantly below the amount of RAM available."),Object(r.b)("h3",{id:"batching"},"Batching"),Object(r.b)("p",null,"It is possible to batch up messages sent from this buffer using a\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching#batch-policy"}),"batch policy"),"."),Object(r.b)("h2",{id:"fields"},"Fields"),Object(r.b)("h3",{id:"limit"},Object(r.b)("inlineCode",{parentName:"h3"},"limit")),Object(r.b)("p",null,"The maximum buffer size (in bytes) to allow before applying backpressure upstream."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"524288000"),"  "),Object(r.b)("h3",{id:"batch_policy"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy")),Object(r.b)("p",null,"Optionally configure a policy to flush buffered messages in batches."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(r.b)("h3",{id:"batch_policyenabled"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.enabled")),Object(r.b)("p",null,"Whether to batch messages as they are flushed."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"bool"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(r.b)("h3",{id:"batch_policycount"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.count")),Object(r.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(r.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(r.b)("h3",{id:"batch_policybyte_size"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.byte_size")),Object(r.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(r.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(r.b)("h3",{id:"batch_policyperiod"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.period")),Object(r.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"string"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(r.b)("h3",{id:"batch_policycheck"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.check")),Object(r.b)("p",null,"A ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"string"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(r.b)("h3",{id:"batch_policyprocessors"},Object(r.b)("inlineCode",{parentName:"h3"},"batch_policy.processors")),Object(r.b)("p",null,"A list of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")))}u.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),c=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var b=c.a.createContext({}),s=function(e){var t=c.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return c.a.createElement(b.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},m=c.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,d=p["".concat(o,".").concat(m)]||p[m]||u[m]||r;return n?c.a.createElement(d,i(i({ref:t},b),{},{components:n})):c.a.createElement(d,i({ref:t},b))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var b=2;b<r;b++)o[b]=n[b];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,c="";if("string"==typeof e||"number"==typeof e)c+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(c&&(c+=" "),c+=n);else for(t in e)e[t]&&(c&&(c+=" "),c+=t);return c}t.a=function(){for(var e,t,n=0,c="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(c&&(c+=" "),c+=t);return c}},413:function(e,t,n){"use strict";var a=n(0),c=n(414);t.a=function(){var e=Object(a.useContext)(c.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),c=Object(a.createContext)(void 0);t.a=c},415:function(e,t,n){"use strict";var a=n(0),c=n.n(a),r=n(413),o=n(412),i=n(56),l=n.n(i),b=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,p=e.values,u=e.groupId,m=e.className,d=Object(r.a)(),f=d.tabGroupChoices,h=d.setTabGroupChoices,y=Object(a.useState)(i),O=y[0],j=y[1],g=a.Children.toArray(e.children);if(null!=u){var v=f[u];null!=v&&v!==O&&p.some((function(e){return e.value===v}))&&j(v)}var N=function(e){j(e),null!=u&&h(u,e)},w=[];return c.a.createElement("div",null,c.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return c.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(o.a)("tabs__item",l.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(g.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):c.a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},416:function(e,t,n){"use strict";var a=n(3),c=n(0),r=n.n(c);t.a=function(e){var t=e.children,n=e.hidden,c=e.className;return r.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:c}),t)}}}]);