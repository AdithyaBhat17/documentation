(window.webpackJsonp=window.webpackJsonp||[]).push([[312],{389:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(411)),i={title:"Streams Mode",sidebar_label:"About",description:"Find out about Benthos Streams mode"},s={unversionedId:"guides/streams_mode/about",id:"guides/streams_mode/about",isDocsHomePage:!1,title:"Streams Mode",description:"Find out about Benthos Streams mode",source:"@site/docs/guides/streams_mode/about.md",slug:"/guides/streams_mode/about",permalink:"/docs/guides/streams_mode/about",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/guides/streams_mode/about.md",version:"current",sidebar_label:"About",sidebar:"docs",previous:{title:"Lambda",permalink:"/docs/guides/serverless/lambda"},next:{title:"Streams Via Config Files",permalink:"/docs/guides/streams_mode/using_config_files"}},c=[{value:"Resources",id:"resources",children:[]},{value:"Metrics",id:"metrics",children:[]}],l={toc:c};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A Benthos stream consists of four components; an input, an optional buffer,\nprocessor pipelines and an output. Under normal use a Benthos instance is a\nsingle stream, and these components are configured within the service config\nfile."),Object(o.b)("p",null,"Alternatively, Benthos can be run in ",Object(o.b)("inlineCode",{parentName:"p"},"streams")," mode, where a single running\nBenthos instance is able to run multiple entirely isolated streams. Adding\nstreams in this mode can be done in two ways:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/guides/streams_mode/using_config_files"}),"Static configuration files")," allows you to maintain a directory\nof static stream configuration files that will be traversed by Benthos.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"An ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/guides/streams_mode/using_rest_api"}),"HTTP REST API")," allows you to dynamically create, read the\nstatus of, update, and delete streams at runtime."))),Object(o.b)("p",null,"These two methods can be used in combination, i.e. it's possible to update and\ndelete streams that were created with static files."),Object(o.b)("h2",{id:"resources"},"Resources"),Object(o.b)("p",null,"The ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/resources"}),Object(o.b)("inlineCode",{parentName:"a"},"resource"))," section of a Benthos config defines named resources (",Object(o.b)("inlineCode",{parentName:"p"},"caches"),", ",Object(o.b)("inlineCode",{parentName:"p"},"rate_limits"),", etc) that can be referenced throughout a stream configuration. When running in streams mode these resources are also shared across streams."),Object(o.b)("p",null,"An individual stream config should not define any resources. Instead, they should be defined in a service-wide config:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"resources:\n  caches:\n    foo:\n      memory:\n        ttl: 3600\n")),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"benthos -c ./config.yaml streams\n")),Object(o.b)("p",null,"This means it is not currently possible to modify resources dynamically. If this\nis blocking you from using streams mode then consider\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/Jeffail/benthos/issues"}),"raising a ticket"),"."),Object(o.b)("h2",{id:"metrics"},"Metrics"),Object(o.b)("p",null,"Metrics from all streams are aggregated and exposed via the method specified in\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/components/metrics/about"}),"the config")," of the Benthos instance running in ",Object(o.b)("inlineCode",{parentName:"p"},"streams")," mode, with\ntheir metrics prefixed by their respective stream name."),Object(o.b)("p",null,"For example, a Benthos instance running in streams mode with the configured\nprefix ",Object(o.b)("inlineCode",{parentName:"p"},"benthos")," running a stream named ",Object(o.b)("inlineCode",{parentName:"p"},"foo")," would have metrics from ",Object(o.b)("inlineCode",{parentName:"p"},"foo"),"\nregistered with the prefix ",Object(o.b)("inlineCode",{parentName:"p"},"benthos.foo"),"."),Object(o.b)("p",null,"This can cause problems if your streams are short lived and uniquely named as\nthe number of metrics registered will continue to climb indefinitely. In order\nto avoid this you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"path_mapping")," field to filter metric names."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'# Only register metrics for the stream `foo`. Others will be ignored.\nmetrics:\n  prometheus:\n    prefix: benthos\n    path_mapping: if !this.has_prefix("foo") { deleted() }\n')),Object(o.b)("p",null,"Or use it to rename prefixes in order to reduce the cardinality of names:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'# Rename all stream metric prefixes of the form `foo_<uuid_v4>` to just `foo`.\nmetrics:\n  statsd:\n    prefix: benthos\n    address: localhost:8125\n    flush_period: 100m\n    path_mapping: this.re_replace("foo_[0-9\\\\-a-zA-Z]+\\\\.(.*)","foo.$1")\n')))}u.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return p}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=u(n),b=r,p=m["".concat(i,".").concat(b)]||m[b]||d[b]||o;return n?a.a.createElement(p,s(s({ref:t},l),{},{components:n})):a.a.createElement(p,s({ref:t},l))}));function p(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);