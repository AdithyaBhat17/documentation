(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{203:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(3),o=n(7),a=(n(0),n(386)),s=["components"],i={title:"Nodes Overview",sidebar_label:"Overview"},c={unversionedId:"platform_concepts/studio/steps/steps",id:"platform_concepts/studio/steps/steps",isDocsHomePage:!1,title:"Nodes Overview",description:"Nodes are the building blocks of a Flow/Journeys.",source:"@site/docs/platform_concepts/studio/steps/steps.md",slug:"/platform_concepts/studio/steps/steps",permalink:"/docs/platform_concepts/studio/steps/steps",version:"current",sidebar_label:"Overview",sidebar:"platform_concepts",previous:{title:"Let's start with Journeys",permalink:"/docs/platform_concepts/studio/journeys"},next:{title:"Prompts and Messages",permalink:"/docs/platform_concepts/studio/steps/prompts-and-messages"}},l=[{value:"1. Types",id:"1-types",children:[]},{value:"2. Add Nodes",id:"2-add-nodes",children:[{value:"2.1 Build a Flow",id:"21-build-a-flow",children:[]}]}],p={toc:l};function b(e){var t=e.components,n=Object(o.a)(e,s);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Nodes are the building blocks of a ",Object(a.b)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/studio/journeys"},"Flow/Journeys"),".  "),Object(a.b)("h2",{id:"1-types"},"1. Types"),Object(a.b)("p",null,"Nodes are classified into the following types: "),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Prompts"),": Prompts can be used when the bot expects a user response to the posed question. Click here to learn more. ")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Messages"),": Messages can be used when the bot has to display information to the user without expecting any response. Click here to learn more. ")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Action"),": Actions are non-interactive nodes that can be used to perform a specific task. Click here to learn more. ")),Object(a.b)("li",{parentName:"ol"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Logic"),": Logic nodes can be used when the flow must be branched based on the given conditions. Click here to learn more. "))),Object(a.b)("p",null,"After clicking +Create flow, you will be directed to a canvas with a start node from where you will have the flexibility to design a flow."),Object(a.b)("p",null,Object(a.b)("img",{parentName:"p",src:"https://i.imgur.com/uKrEbNH.jpg",alt:null})),Object(a.b)("h2",{id:"2-add-nodes"},"2. Add Nodes"),Object(a.b)("p",null,"Nodes can be added to this start node in two different ways:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Click on the black dot in the center of a node.")),Object(a.b)("p",null,Object(a.b)("img",{parentName:"p",src:"https://i.imgur.com/04ar7yF.jpg",alt:null})),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Click on any 4 of the icons on the left which represent each category of nodes.")),Object(a.b)("p",null,Object(a.b)("img",{parentName:"p",src:"https://i.imgur.com/vFdHzKo.png",alt:null})),Object(a.b)("h3",{id:"21-build-a-flow"},"2.1 Build a Flow"),Object(a.b)("p",null,"A flow is usually built using a series of smaller nodes. Each flow must have a minimum of two nodes configured."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("strong",{parentName:"p"},"Start Trigger"),": First node must always be a trigger (click ",Object(a.b)("a",{parentName:"p",href:"https://docs.yellow.ai/docs/platform_concepts/studio/journeys"},"here")," to learn more). You can configure how to trigger this flow. That is, by means of Intents, Entities, URL Events, or other flows.")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Add any of the following nodes one by one to continue this flow with a logic. "),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Prompts"),": These nodes expect user inputs- when the input is invalid, fallback messages are displayed. They are interactive/conversational nodes."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Messages"),": Use these nodes to display messages, files, images etc. "),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Actions"),": Background action like Database Insert, Search, or executing an API are performed with these nodes."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"Logic"),": Conditional branching nodes."))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"Connect all the nodes to complete the flow. Test it on the bot. "))),Object(a.b)("hr",null),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"What Next?")),Object(a.b)("p",null,"Learn more about the types of nodes in the further sections."))}b.isMDXComponent=!0},386:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),p=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},b=function(e){var t=p(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),d=r,m=b["".concat(s,".").concat(d)]||b[d]||u[d]||a;return n?o.a.createElement(m,i(i({ref:t},l),{},{components:n})):o.a.createElement(m,i({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<a;l++)s[l]=n[l];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);