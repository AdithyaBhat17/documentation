(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return o})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),c=(n(0),n(411)),b=n(415),r=n(416),l={title:"kafka",type:"output",status:"stable",categories:["Services"]},o={unversionedId:"components/outputs/kafka",id:"components/outputs/kafka",isDocsHomePage:!1,title:"kafka",description:"\x3c!--",source:"@site/docs/components/outputs/kafka.md",slug:"/components/outputs/kafka",permalink:"/docs/components/outputs/kafka",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/outputs/kafka.md",version:"current",sidebar:"docs",previous:{title:"inproc",permalink:"/docs/components/outputs/inproc"},next:{title:"mqtt",permalink:"/docs/components/outputs/mqtt"}},s=[{value:"Strict Ordering and Retries",id:"strict-ordering-and-retries",children:[]},{value:"Performance",id:"performance",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>addresses</code>",id:"addresses",children:[]},{value:"<code>tls</code>",id:"tls",children:[]},{value:"<code>tls.enabled</code>",id:"tlsenabled",children:[]},{value:"<code>tls.skip_cert_verify</code>",id:"tlsskip_cert_verify",children:[]},{value:"<code>tls.root_cas_file</code>",id:"tlsroot_cas_file",children:[]},{value:"<code>tls.client_certs</code>",id:"tlsclient_certs",children:[]},{value:"<code>tls.client_certs[].cert</code>",id:"tlsclient_certscert",children:[]},{value:"<code>tls.client_certs[].key</code>",id:"tlsclient_certskey",children:[]},{value:"<code>tls.client_certs[].cert_file</code>",id:"tlsclient_certscert_file",children:[]},{value:"<code>tls.client_certs[].key_file</code>",id:"tlsclient_certskey_file",children:[]},{value:"<code>sasl</code>",id:"sasl",children:[]},{value:"<code>sasl.mechanism</code>",id:"saslmechanism",children:[]},{value:"<code>sasl.user</code>",id:"sasluser",children:[]},{value:"<code>sasl.password</code>",id:"saslpassword",children:[]},{value:"<code>sasl.access_token</code>",id:"saslaccess_token",children:[]},{value:"<code>sasl.token_cache</code>",id:"sasltoken_cache",children:[]},{value:"<code>sasl.token_key</code>",id:"sasltoken_key",children:[]},{value:"<code>topic</code>",id:"topic",children:[]},{value:"<code>client_id</code>",id:"client_id",children:[]},{value:"<code>key</code>",id:"key",children:[]},{value:"<code>partitioner</code>",id:"partitioner",children:[]},{value:"<code>compression</code>",id:"compression",children:[]},{value:"<code>static_headers</code>",id:"static_headers",children:[]},{value:"<code>max_in_flight</code>",id:"max_in_flight",children:[]},{value:"<code>ack_replicas</code>",id:"ack_replicas",children:[]},{value:"<code>max_msg_bytes</code>",id:"max_msg_bytes",children:[]},{value:"<code>timeout</code>",id:"timeout",children:[]},{value:"<code>target_version</code>",id:"target_version",children:[]},{value:"<code>retry_as_batch</code>",id:"retry_as_batch",children:[]},{value:"<code>batching</code>",id:"batching",children:[]},{value:"<code>batching.count</code>",id:"batchingcount",children:[]},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",children:[]},{value:"<code>batching.period</code>",id:"batchingperiod",children:[]},{value:"<code>batching.check</code>",id:"batchingcheck",children:[]},{value:"<code>batching.processors</code>",id:"batchingprocessors",children:[]},{value:"<code>max_retries</code>",id:"max_retries",children:[]},{value:"<code>backoff</code>",id:"backoff",children:[]},{value:"<code>backoff.initial_interval</code>",id:"backoffinitial_interval",children:[]},{value:"<code>backoff.max_interval</code>",id:"backoffmax_interval",children:[]},{value:"<code>backoff.max_elapsed_time</code>",id:"backoffmax_elapsed_time",children:[]}]}],p={toc:s};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"The kafka output type writes a batch of messages to Kafka brokers and waits for acknowledgement before propagating it back to the input."),Object(c.b)(b.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(c.b)(r.a,{value:"common",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\noutput:\n  kafka:\n    addresses:\n      - localhost:9092\n    topic: benthos_stream\n    client_id: benthos_kafka_output\n    key: ""\n    partitioner: fnv1a_hash\n    compression: none\n    static_headers: {}\n    max_in_flight: 1\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'))),Object(c.b)(r.a,{value:"advanced",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\noutput:\n  kafka:\n    addresses:\n      - localhost:9092\n    tls:\n      enabled: false\n      skip_cert_verify: false\n      root_cas_file: ""\n      client_certs: []\n    sasl:\n      mechanism: ""\n      user: ""\n      password: ""\n      access_token: ""\n      token_cache: ""\n      token_key: ""\n    topic: benthos_stream\n    client_id: benthos_kafka_output\n    key: ""\n    partitioner: fnv1a_hash\n    compression: none\n    static_headers: {}\n    max_in_flight: 1\n    ack_replicas: false\n    max_msg_bytes: 1000000\n    timeout: 5s\n    target_version: 1.0.0\n    retry_as_batch: false\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n    max_retries: 0\n    backoff:\n      initial_interval: 3s\n      max_interval: 10s\n      max_elapsed_time: 30s\n')))),Object(c.b)("p",null,"The config field ",Object(c.b)("inlineCode",{parentName:"p"},"ack_replicas")," determines whether we wait for acknowledgement from all replicas or just a single broker."),Object(c.b)("p",null,"Both the ",Object(c.b)("inlineCode",{parentName:"p"},"key")," and ",Object(c.b)("inlineCode",{parentName:"p"},"topic")," fields can be dynamically set using function interpolations described ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here"),"."),Object(c.b)("h3",{id:"strict-ordering-and-retries"},"Strict Ordering and Retries"),Object(c.b)("p",null,"When strict ordering is required for messages written to topic partitions it is important to ensure that both the field ",Object(c.b)("inlineCode",{parentName:"p"},"max_in_flight")," is set to ",Object(c.b)("inlineCode",{parentName:"p"},"1")," and that the field ",Object(c.b)("inlineCode",{parentName:"p"},"retry_as_batch")," is set to ",Object(c.b)("inlineCode",{parentName:"p"},"true"),"."),Object(c.b)("p",null,"You must also ensure that failed batches are never rerouted back to the same output. This can be done by setting the field ",Object(c.b)("inlineCode",{parentName:"p"},"max_retries")," to ",Object(c.b)("inlineCode",{parentName:"p"},"0")," and ",Object(c.b)("inlineCode",{parentName:"p"},"backoff.max_elapsed_time")," to empty, which will apply back pressure indefinitely until the batch is sent successfully."),Object(c.b)("p",null,"However, this also means that manual intervention will eventually be required in cases where the batch cannot be sent due to configuration problems such as an incorrect ",Object(c.b)("inlineCode",{parentName:"p"},"max_msg_bytes")," estimate. A less strict but automated alternative would be to route failed batches to a dead letter queue using a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/outputs/try"}),Object(c.b)("inlineCode",{parentName:"a"},"try")," broker"),", but this would allow subsequent batches to be delivered in the meantime whilst those failed batches are dealt with."),Object(c.b)("h2",{id:"performance"},"Performance"),Object(c.b)("p",null,"This output benefits from sending multiple messages in flight in parallel for\nimproved performance. You can tune the max number of in flight messages with the\nfield ",Object(c.b)("inlineCode",{parentName:"p"},"max_in_flight"),"."),Object(c.b)("p",null,"This output benefits from sending messages as a batch for improved performance.\nBatches can be formed at both the input and output level. You can find out more\n",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"in this doc"),"."),Object(c.b)("h2",{id:"fields"},"Fields"),Object(c.b)("h3",{id:"addresses"},Object(c.b)("inlineCode",{parentName:"h3"},"addresses")),Object(c.b)("p",null,"A list of broker addresses to connect to. If an item of the list contains commas it will be expanded into multiple addresses."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"array"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'["localhost:9092"]'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\naddresses:\n  - localhost:9092\n\naddresses:\n  - localhost:9041,localhost:9042\n\naddresses:\n  - localhost:9041\n  - localhost:9042\n")),Object(c.b)("h3",{id:"tls"},Object(c.b)("inlineCode",{parentName:"h3"},"tls")),Object(c.b)("p",null,"Custom TLS settings can be used to override system defaults."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(c.b)("h3",{id:"tlsenabled"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.enabled")),Object(c.b)("p",null,"Whether custom TLS settings are enabled."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(c.b)("h3",{id:"tlsskip_cert_verify"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.skip_cert_verify")),Object(c.b)("p",null,"Whether to skip server side certificate verification."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(c.b)("h3",{id:"tlsroot_cas_file"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.root_cas_file")),Object(c.b)("p",null,"An optional path of a root certificate authority file to use. This is a file, often with a .pem extension, containing a certificate chain from the parent trusted root certificate, to possible intermediate signing certificates, to the host certificate."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nroot_cas_file: ./root_cas.pem\n")),Object(c.b)("h3",{id:"tlsclient_certs"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.client_certs")),Object(c.b)("p",null,"A list of client certificates to use. For each certificate either the fields ",Object(c.b)("inlineCode",{parentName:"p"},"cert")," and ",Object(c.b)("inlineCode",{parentName:"p"},"key"),", or ",Object(c.b)("inlineCode",{parentName:"p"},"cert_file")," and ",Object(c.b)("inlineCode",{parentName:"p"},"key_file")," should be specified, but not both."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"array"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nclient_certs:\n  - cert: foo\n    key: bar\n\nclient_certs:\n  - cert_file: ./example.pem\n    key_file: ./example.key\n")),Object(c.b)("h3",{id:"tlsclient_certscert"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].cert")),Object(c.b)("p",null,"A plain text certificate to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"tlsclient_certskey"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].key")),Object(c.b)("p",null,"A plain text certificate key to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"tlsclient_certscert_file"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].cert_file")),Object(c.b)("p",null,"The path to a certificate to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"tlsclient_certskey_file"},Object(c.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].key_file")),Object(c.b)("p",null,"The path of a certificate key to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"sasl"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl")),Object(c.b)("p",null,"Enables SASL authentication."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(c.b)("h3",{id:"saslmechanism"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.mechanism")),Object(c.b)("p",null,"The SASL authentication mechanism, if left empty SASL authentication is not used. Warning: SCRAM based methods within Benthos have not received a security audit."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Option"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Summary"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"PLAIN")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Plain text authentication.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"OAUTHBEARER")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"OAuth Bearer based authentication.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"SCRAM-SHA-256")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Authentication using the SCRAM-SHA-256 mechanism.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"SCRAM-SHA-512")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Authentication using the SCRAM-SHA-512 mechanism.")))),Object(c.b)("h3",{id:"sasluser"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.user")),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"PLAIN")," username. It is recommended that you use environment variables to populate this field."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nuser: ${USER}\n")),Object(c.b)("h3",{id:"saslpassword"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.password")),Object(c.b)("p",null,"A ",Object(c.b)("inlineCode",{parentName:"p"},"PLAIN")," password. It is recommended that you use environment variables to populate this field."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\npassword: ${PASSWORD}\n")),Object(c.b)("h3",{id:"saslaccess_token"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.access_token")),Object(c.b)("p",null,"A static ",Object(c.b)("inlineCode",{parentName:"p"},"OAUTHBEARER")," access token"),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"sasltoken_cache"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.token_cache")),Object(c.b)("p",null,"Instead of using a static ",Object(c.b)("inlineCode",{parentName:"p"},"access_token")," allows you to query a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/caches/about"}),Object(c.b)("inlineCode",{parentName:"a"},"cache"))," resource to fetch ",Object(c.b)("inlineCode",{parentName:"p"},"OAUTHBEARER")," tokens from"),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"sasltoken_key"},Object(c.b)("inlineCode",{parentName:"h3"},"sasl.token_key")),Object(c.b)("p",null,"Required when using a ",Object(c.b)("inlineCode",{parentName:"p"},"token_cache"),", the key to query the cache with for tokens."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"topic"},Object(c.b)("inlineCode",{parentName:"h3"},"topic")),Object(c.b)("p",null,"The topic to publish messages to.\nThis field supports ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"benthos_stream"'),"  "),Object(c.b)("h3",{id:"client_id"},Object(c.b)("inlineCode",{parentName:"h3"},"client_id")),Object(c.b)("p",null,"An identifier for the client connection."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"benthos_kafka_output"'),"  "),Object(c.b)("h3",{id:"key"},Object(c.b)("inlineCode",{parentName:"h3"},"key")),Object(c.b)("p",null,"The key to publish messages with.\nThis field supports ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("h3",{id:"partitioner"},Object(c.b)("inlineCode",{parentName:"h3"},"partitioner")),Object(c.b)("p",null,"The partitioning algorithm to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"fnv1a_hash"'),Object(c.b)("br",{parentName:"p"}),"\n","Options: ",Object(c.b)("inlineCode",{parentName:"p"},"fnv1a_hash"),", ",Object(c.b)("inlineCode",{parentName:"p"},"murmur2_hash"),", ",Object(c.b)("inlineCode",{parentName:"p"},"random"),", ",Object(c.b)("inlineCode",{parentName:"p"},"round_robin"),"."),Object(c.b)("h3",{id:"compression"},Object(c.b)("inlineCode",{parentName:"h3"},"compression")),Object(c.b)("p",null,"The compression algorithm to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"none"'),Object(c.b)("br",{parentName:"p"}),"\n","Options: ",Object(c.b)("inlineCode",{parentName:"p"},"none"),", ",Object(c.b)("inlineCode",{parentName:"p"},"snappy"),", ",Object(c.b)("inlineCode",{parentName:"p"},"lz4"),", ",Object(c.b)("inlineCode",{parentName:"p"},"gzip"),"."),Object(c.b)("h3",{id:"static_headers"},Object(c.b)("inlineCode",{parentName:"h3"},"static_headers")),Object(c.b)("p",null,"An optional map of static headers that should be added to messages in addition to metadata."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"object"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nstatic_headers:\n  first-static-header: value-1\n  second-static-header: value-2\n")),Object(c.b)("h3",{id:"max_in_flight"},Object(c.b)("inlineCode",{parentName:"h3"},"max_in_flight")),Object(c.b)("p",null,"The maximum number of parallel message batches to have in flight at any given time."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(c.b)("h3",{id:"ack_replicas"},Object(c.b)("inlineCode",{parentName:"h3"},"ack_replicas")),Object(c.b)("p",null,"Ensure that messages have been copied across all replicas before acknowledging receipt."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(c.b)("h3",{id:"max_msg_bytes"},Object(c.b)("inlineCode",{parentName:"h3"},"max_msg_bytes")),Object(c.b)("p",null,"The maximum size in bytes of messages sent to the target topic."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"1000000"),"  "),Object(c.b)("h3",{id:"timeout"},Object(c.b)("inlineCode",{parentName:"h3"},"timeout")),Object(c.b)("p",null,"The maximum period of time to wait for message sends before abandoning the request and retrying."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"5s"'),"  "),Object(c.b)("h3",{id:"target_version"},Object(c.b)("inlineCode",{parentName:"h3"},"target_version")),Object(c.b)("p",null,"The version of the Kafka protocol to use."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"1.0.0"'),"  "),Object(c.b)("h3",{id:"retry_as_batch"},Object(c.b)("inlineCode",{parentName:"h3"},"retry_as_batch")),Object(c.b)("p",null,"When enabled forces an entire batch of messages to be retried if any individual message fails on a send, otherwise only the individual messages that failed are retried. Disabling this helps to reduce message duplicates during intermittent errors, but also makes it impossible to guarantee strict ordering of messages."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(c.b)("h3",{id:"batching"},Object(c.b)("inlineCode",{parentName:"h3"},"batching")),Object(c.b)("p",null,"Allows you to configure a ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"batching policy"),"."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n')),Object(c.b)("h3",{id:"batchingcount"},Object(c.b)("inlineCode",{parentName:"h3"},"batching.count")),Object(c.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(c.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(c.b)("h3",{id:"batchingbyte_size"},Object(c.b)("inlineCode",{parentName:"h3"},"batching.byte_size")),Object(c.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(c.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(c.b)("h3",{id:"batchingperiod"},Object(c.b)("inlineCode",{parentName:"h3"},"batching.period")),Object(c.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(c.b)("h3",{id:"batchingcheck"},Object(c.b)("inlineCode",{parentName:"h3"},"batching.check")),Object(c.b)("p",null,"A ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(c.b)("h3",{id:"batchingprocessors"},Object(c.b)("inlineCode",{parentName:"h3"},"batching.processors")),Object(c.b)("p",null,"A list of ",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"array"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")),Object(c.b)("h3",{id:"max_retries"},Object(c.b)("inlineCode",{parentName:"h3"},"max_retries")),Object(c.b)("p",null,"The maximum number of retries before giving up on the request. If set to zero there is no discrete limit."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(c.b)("h3",{id:"backoff"},Object(c.b)("inlineCode",{parentName:"h3"},"backoff")),Object(c.b)("p",null,"Control time intervals between retry attempts."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(c.b)("h3",{id:"backoffinitial_interval"},Object(c.b)("inlineCode",{parentName:"h3"},"backoff.initial_interval")),Object(c.b)("p",null,"The initial period to wait between retry attempts."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"3s"'),"  "),Object(c.b)("h3",{id:"backoffmax_interval"},Object(c.b)("inlineCode",{parentName:"h3"},"backoff.max_interval")),Object(c.b)("p",null,"The maximum period to wait between retry attempts."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"10s"'),"  "),Object(c.b)("h3",{id:"backoffmax_elapsed_time"},Object(c.b)("inlineCode",{parentName:"h3"},"backoff.max_elapsed_time")),Object(c.b)("p",null,"The maximum period to wait before retry attempts are abandoned. If zero then no limit is used."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"30s"'),"  "))}d.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=i.a.createContext({}),s=function(e){var t=i.a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return i.a.createElement(o.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,b=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(b,".").concat(u)]||p[u]||d[u]||c;return n?i.a.createElement(m,r(r({ref:t},o),{},{components:n})):i.a.createElement(m,r({ref:t},o))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,b=new Array(c);b[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,b[1]=r;for(var o=2;o<c;o++)b[o]=n[o];return i.a.createElement.apply(null,b)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(i&&(i+=" "),i+=n);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}t.a=function(){for(var e,t,n=0,i="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(i&&(i+=" "),i+=t);return i}},413:function(e,t,n){"use strict";var a=n(0),i=n(414);t.a=function(){var e=Object(a.useContext)(i.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),i=Object(a.createContext)(void 0);t.a=i},415:function(e,t,n){"use strict";var a=n(0),i=n.n(a),c=n(413),b=n(412),r=n(56),l=n.n(r),o=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,p=e.values,d=e.groupId,u=e.className,m=Object(c.a)(),O=m.tabGroupChoices,h=m.setTabGroupChoices,j=Object(a.useState)(r),f=j[0],N=j[1],g=a.Children.toArray(e.children);if(null!=d){var y=O[d];null!=y&&y!==f&&p.some((function(e){return e.value===y}))&&N(y)}var _=function(e){N(e),null!=d&&h(d,e)},C=[];return i.a.createElement("div",null,i.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(b.a)("tabs",{"tabs--block":n},u)},p.map((function(e){var t=e.value,n=e.label;return i.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===t,className:Object(b.a)("tabs__item",l.a.tabItem,{"tabs__item--active":f===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case o:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(C,e.target,e)},onFocus:function(){return _(t)},onClick:function(){_(t)}},n)}))),t?Object(a.cloneElement)(g.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):i.a.createElement("div",{className:"margin-vert--md"},g.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},416:function(e,t,n){"use strict";var a=n(3),i=n(0),c=n.n(i);t.a=function(e){var t=e.children,n=e.hidden,i=e.className;return c.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:i}),t)}}}]);