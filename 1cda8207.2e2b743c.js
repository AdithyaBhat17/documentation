(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{115:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return u})),t.d(n,"default",(function(){return b}));var o=t(3),a=t(7),r=(t(0),t(411)),i=t(415),s=t(416),c={title:"Configuration",sidebar_label:"About",description:"Learn about Benthos configuration"},l={unversionedId:"configuration/about",id:"configuration/about",isDocsHomePage:!1,title:"Configuration",description:"Learn about Benthos configuration",source:"@site/docs/configuration/about.md",slug:"/configuration/about",permalink:"/docs/configuration/about",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/configuration/about.md",version:"current",sidebar_label:"About",sidebar:"docs",previous:{title:"What is Benthos for?",permalink:"/docs/about"},next:{title:"Resources",permalink:"/docs/configuration/resources"}},u=[{value:"Testing",id:"testing",children:[]},{value:"Concise Configuration",id:"concise-configuration",children:[]},{value:"Customising Your Configuration",id:"customising-your-configuration",children:[]},{value:"Reusing Configuration Snippets",id:"reusing-configuration-snippets",children:[{value:"Feature Toggles",id:"feature-toggles",children:[]}]},{value:"Enabling Discovery",id:"enabling-discovery",children:[]},{value:"Help With Debugging",id:"help-with-debugging",children:[{value:"Linting",id:"linting",children:[]},{value:"Echoing",id:"echoing",children:[]}]}],p={toc:u};function b(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Benthos pipelines are configured in a YAML file that consists of a number of root sections, arranged like so:"),Object(r.b)(i.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Full",value:"full"}],mdxType:"Tabs"},Object(r.b)(s.a,{value:"common",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'input:\n  type: kafka\n  kafka:\n    addresses: [ TODO ]\n    topics: [ foo, bar ]\n    consumer_group: foogroup\n\npipeline:\n  processors:\n  - type: bloblang\n    bloblang: |\n      root.message = this\n      root.meta.link_count = this.links.length()\n\noutput:\n  type: aws_s3\n  aws_s3:\n    bucket: TODO\n    path: \'${! meta("kafka_topic") }/${! json("message.id") }.json\'\n'))),Object(r.b)(s.a,{value:"full",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"http:\n  address: 0.0.0.0:4195\n  debug_endpoints: false\n\ninput:\n  type: kafka\n  kafka:\n    addresses: [ TODO ]\n    topics: [ foo, bar ]\n    consumer_group: foogroup\n\nbuffer:\n  type: none\n\npipeline:\n  processors:\n  - type: bloblang\n    bloblang: |\n      root.message = this\n      root.meta.link_count = this.links.length()\n\noutput:\n  type: aws_s3\n  aws_s3:\n    bucket: TODO\n    path: '${! meta(\"kafka_topic\") }/${! json(\"message.id\") }.json'\n\nresources:\n  inputs: {}\n  caches: {}\n  processors: {}\n  rate_limits: {}\n  outputs: {}\n\nlogger:\n  level: INFO\n  static_fields:\n    '@service': benthos\n\nmetrics:\n  type: prometheus\n\ntracer:\n  type: none\n\nshutdown_timeout: 20s\n")))),Object(r.b)("p",null,"Most sections represent a component type, which you can read about in more detail in ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/components/about"}),"this document"),"."),Object(r.b)("p",null,"These types are hierarchical. For example, an ",Object(r.b)("inlineCode",{parentName:"p"},"input")," can have a list of child ",Object(r.b)("inlineCode",{parentName:"p"},"processor")," types attached to it, which in turn can have their own ",Object(r.b)("inlineCode",{parentName:"p"},"condition")," or even more ",Object(r.b)("inlineCode",{parentName:"p"},"processor")," children."),Object(r.b)("p",null,"This is powerful but can potentially lead to large and cumbersome configuration files. This document outlines tooling provided by Benthos to help with writing and managing these more complex configuration files."),Object(r.b)("h3",{id:"testing"},"Testing"),Object(r.b)("p",null,"For guidance on how to write and run unit tests for your configuration files read ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/unit_testing"}),"this guide"),"."),Object(r.b)("h2",{id:"concise-configuration"},"Concise Configuration"),Object(r.b)("p",null,"It's often possible to make your configuration files more concise but less explicit by omitting the ",Object(r.b)("inlineCode",{parentName:"p"},"type")," field in components as well as any fields that are default. For example, the above configuration could be written as:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'input:\n  kafka:\n    addresses: [ TODO ]\n    topics: [ foo, bar ]\n    consumer_group: foogroup\n\npipeline:\n  processors:\n  - bloblang: |\n      root.document = this.without("links")\n      root.link_count = this.links.length()\n\noutput:\n  aws_s3:\n    bucket: TODO\n    path: \'${! meta("kafka_topic") }/${! json("message.id") }.json\'\n')),Object(r.b)("h2",{id:"customising-your-configuration"},"Customising Your Configuration"),Object(r.b)("p",null,"Sometimes it's useful to write a configuration where certain fields can be defined during deployment. For this purpose Benthos supports ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/interpolation"}),"environment variable interpolation"),", allowing you to set fields in your config with environment variables like so:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"input:\n  type: kafka\n  kafka:\n    addresses:\n    - ${KAFKA_BROKER:localhost:9092}\n    topics:\n    - ${KAFKA_TOPIC:default-topic}\n")),Object(r.b)("p",null,"This is very useful for sharing configuration files across different deployment environments."),Object(r.b)("h2",{id:"reusing-configuration-snippets"},"Reusing Configuration Snippets"),Object(r.b)("p",null,"Sometimes it's necessary to use a rather large component multiple times. Instead of copy/pasting the configuration or using YAML anchors you can define your component ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/resources"}),"as a resource"),"."),Object(r.b)("p",null,'In the following example we want to make an HTTP request with our payloads. Occasionally the payload might get rejected due to garbage within its contents, and so we catch these rejected requests, attempt to "cleanse" the contents and try to make the same HTTP request again. Since the HTTP request component is quite large (and likely to change over time) we make sure to avoid duplicating it by defining it as a resource ',Object(r.b)("inlineCode",{parentName:"p"},"get_foo"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - resource: get_foo\n    - catch:\n      - bloblang: |\n          root = this\n          root.content = this.content.strip_html()\n      - resource: get_foo\n\nresources:\n  processors:\n    get_foo:\n      http:\n        url: http://example.com/foo\n        verb: POST\n        headers:\n          SomeThing: "set-to-this"\n          SomeThingElse: "set-to-something-else"\n')),Object(r.b)("h3",{id:"feature-toggles"},"Feature Toggles"),Object(r.b)("p",null,"Resources can be imported separately to your config file with the cli flag ",Object(r.b)("inlineCode",{parentName:"p"},"-r")," or ",Object(r.b)("inlineCode",{parentName:"p"},"-resources"),", which is a useful way to switch out resources with common names based on your chosen environment. For example, with a main configuration file ",Object(r.b)("inlineCode",{parentName:"p"},"config.yaml"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"pipeline:\n  processors:\n    - resource: get_foo\n")),Object(r.b)("p",null,"And then two resource files, one stored at the path ",Object(r.b)("inlineCode",{parentName:"p"},"./staging/request.yaml"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'resources:\n  processors:\n    get_foo:\n      http:\n        url: http://example.com/foo\n        verb: POST\n        headers:\n          SomeThing: "set-to-this"\n          SomeThingElse: "set-to-something-else"\n')),Object(r.b)("p",null,"And another stored at the path ",Object(r.b)("inlineCode",{parentName:"p"},"./production/request.yaml"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),'resources:\n  processors:\n    get_foo:\n      http:\n        url: http://example.com/bar\n        verb: PUT\n        headers:\n          Desires: "are-empty"\n')),Object(r.b)("p",null,"We can select our chosen resource by changing which file we import, either running:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),"benthos -r ./staging/request.yaml -c ./config.yaml\n")),Object(r.b)("p",null,"Or:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),"benthos -r ./production/request.yaml -c ./config.yaml\n")),Object(r.b)("p",null,"These flags also support wildcards, which allows you to import an entire directory of resource files like ",Object(r.b)("inlineCode",{parentName:"p"},'benthos -r "./staging/*.yaml" -c ./config.yaml'),". You can find out more about configuration resources in the ",Object(r.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/configuration/resources"}),"resources document"),"."),Object(r.b)("h2",{id:"enabling-discovery"},"Enabling Discovery"),Object(r.b)("p",null,"The discoverability of configuration fields is a common headache with any configuration driven application. The classic solution is to provide curated documentation that is often hosted on a dedicated site."),Object(r.b)("p",null,"However, a user often only needs to get their hands on a short, runnable example config file for their use case. They just need to see the format and field names as the fields themselves are usually self explanatory. Forcing such a user to navigate a website, scrolling through paragraphs of text, seems inefficient when all they actually needed to see was something like:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-yaml"}),"input:\n  type: amqp_0_9\n  amqp_0_9:\n    url: amqp://guest:guest@localhost:5672/\n    consumer_tag: benthos-consumer\n    queue: benthos-queue\n    prefetch_count: 10\n    prefetch_size: 0\noutput:\n  type: stdout\n")),Object(r.b)("p",null,"In order to make this process easier Benthos is able to generate usable configuration examples for any types, and you can do this from the binary using the ",Object(r.b)("inlineCode",{parentName:"p"},"create")," subcommand."),Object(r.b)("p",null,"If, for example, we wanted to generate a config with a websocket input, a Kafka output and a Bloblang processor in the middle, we could do it with the following command:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-text"}),"benthos create websocket/bloblang/kafka\n")),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"If you need a gentle reminder as to which components Benthos offers you can see those as well with ",Object(r.b)("inlineCode",{parentName:"p"},"benthos list"),".")),Object(r.b)("p",null,"All of these generated configuration examples also include other useful config sections such as ",Object(r.b)("inlineCode",{parentName:"p"},"metrics"),", ",Object(r.b)("inlineCode",{parentName:"p"},"logging"),", etc with sensible defaults."),Object(r.b)("p",null,"For more information read the output from ",Object(r.b)("inlineCode",{parentName:"p"},"benthos create --help"),"."),Object(r.b)("h2",{id:"help-with-debugging"},"Help With Debugging"),Object(r.b)("p",null,"Once you have a config written you now move onto the next headache of proving that it works, and understanding why it doesn't. Benthos, like most good config driven services, performs validation on configs and tries to provide sensible error messages."),Object(r.b)("p",null,"However, with validation it can be hard to capture all problems, and the user usually understands their intentions better than the service. In order to help expose and diagnose config errors Benthos provides two mechanisms, linting and echoing."),Object(r.b)("h3",{id:"linting"},"Linting"),Object(r.b)("p",null,"If you attempt to run a config that has linting errors Benthos will print the errors and halt execution. If, however, you want to test your configs before deployment you can do so with the ",Object(r.b)("inlineCode",{parentName:"p"},"lint")," subcommand:"),Object(r.b)("p",null,"For example, imagine we have a config ",Object(r.b)("inlineCode",{parentName:"p"},"foo.yaml"),", where we intend to read from AMQP, but there is a typo in our config struct:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-text"}),"input:\n  type: amqp_0_9\n  amqq_0_9:\n    url: amqp://guest:guest@rabbitmqserver:5672/\n")),Object(r.b)("p",null,"We can catch this error before attempting to run the config:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),"$ benthos lint ./foo.yaml\n./foo.yaml: input: Key 'amqq_0_9' found but is ignored\n")),Object(r.b)("p",null,"For more information read the output from ",Object(r.b)("inlineCode",{parentName:"p"},"benthos lint --help"),"."),Object(r.b)("h3",{id:"echoing"},"Echoing"),Object(r.b)("p",null,"Echoing is where Benthos can print back your configuration ",Object(r.b)("em",{parentName:"p"},"after")," it has been parsed. It is done with the ",Object(r.b)("inlineCode",{parentName:"p"},"echo")," subcommand, which is able to show you a normalised version of your config, allowing you to see how it was interpreted:"),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-sh"}),"benthos -c ./your-config.yaml echo\n")),Object(r.b)("p",null,"You can check the output of the above command to see if certain sections are missing or fields are incorrect, which allows you to pinpoint typos in the config."))}b.isMDXComponent=!0},411:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var o=t(0),a=t.n(o);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),u=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=u(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=o,d=p["".concat(i,".").concat(m)]||p[m]||b[m]||r;return t?a.a.createElement(d,s(s({ref:n},l),{},{components:t})):a.a.createElement(d,s({ref:n},l))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<r;l++)i[l]=t[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},412:function(e,n,t){"use strict";function o(e){var n,t,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(n=0;n<e.length;n++)e[n]&&(t=o(e[n]))&&(a&&(a+=" "),a+=t);else for(n in e)e[n]&&(a&&(a+=" "),a+=n);return a}n.a=function(){for(var e,n,t=0,a="";t<arguments.length;)(e=arguments[t++])&&(n=o(e))&&(a&&(a+=" "),a+=n);return a}},413:function(e,n,t){"use strict";var o=t(0),a=t(414);n.a=function(){var e=Object(o.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,n,t){"use strict";var o=t(0),a=Object(o.createContext)(void 0);n.a=a},415:function(e,n,t){"use strict";var o=t(0),a=t.n(o),r=t(413),i=t(412),s=t(56),c=t.n(s),l=37,u=39;n.a=function(e){var n=e.lazy,t=e.block,s=e.defaultValue,p=e.values,b=e.groupId,m=e.className,d=Object(r.a)(),f=d.tabGroupChoices,h=d.setTabGroupChoices,g=Object(o.useState)(s),O=g[0],j=g[1],y=o.Children.toArray(e.children);if(null!=b){var v=f[b];null!=v&&v!==O&&p.some((function(e){return e.value===v}))&&j(v)}var w=function(e){j(e),null!=b&&h(b,e)},N=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":t},m)},p.map((function(e){var n=e.value,t=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===n,className:Object(i.a)("tabs__item",c.a.tabItem,{"tabs__item--active":O===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,n,t){switch(t.keyCode){case u:!function(e,n){var t=e.indexOf(n)+1;e[t]?e[t].focus():e[0].focus()}(e,n);break;case l:!function(e,n){var t=e.indexOf(n)-1;e[t]?e[t].focus():e[e.length-1].focus()}(e,n)}}(N,e.target,e)},onFocus:function(){return w(n)},onClick:function(){w(n)}},t)}))),n?Object(o.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,n){return Object(o.cloneElement)(e,{key:n,hidden:e.props.value!==O})}))))}},416:function(e,n,t){"use strict";var o=t(3),a=t(0),r=t.n(a);n.a=function(e){var n=e.children,t=e.hidden,a=e.className;return r.a.createElement("div",Object(o.a)({role:"tabpanel"},{hidden:t,className:a}),n)}}}]);