(window.webpackJsonp=window.webpackJsonp||[]).push([[273],{350:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(411)),i=n(415),c=n(416),b={title:"azure_table_storage",type:"output",status:"beta",categories:["Services","Azure"]},l={unversionedId:"components/outputs/azure_table_storage",id:"components/outputs/azure_table_storage",isDocsHomePage:!1,title:"azure_table_storage",description:"\x3c!--",source:"@site/docs/components/outputs/azure_table_storage.md",slug:"/components/outputs/azure_table_storage",permalink:"/docs/components/outputs/azure_table_storage",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/outputs/azure_table_storage.md",version:"current",sidebar:"docs",previous:{title:"azure_queue_storage",permalink:"/docs/components/outputs/azure_queue_storage"},next:{title:"broker",permalink:"/docs/components/outputs/broker"}},s=[{value:"Performance",id:"performance",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>storage_account</code>",id:"storage_account",children:[]},{value:"<code>storage_access_key</code>",id:"storage_access_key",children:[]},{value:"<code>storage_connection_string</code>",id:"storage_connection_string",children:[]},{value:"<code>table_name</code>",id:"table_name",children:[]},{value:"<code>partition_key</code>",id:"partition_key",children:[]},{value:"<code>row_key</code>",id:"row_key",children:[]},{value:"<code>properties</code>",id:"properties",children:[]},{value:"<code>insert_type</code>",id:"insert_type",children:[]},{value:"<code>max_in_flight</code>",id:"max_in_flight",children:[]},{value:"<code>timeout</code>",id:"timeout",children:[]},{value:"<code>batching</code>",id:"batching",children:[]},{value:"<code>batching.count</code>",id:"batchingcount",children:[]},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",children:[]},{value:"<code>batching.period</code>",id:"batchingperiod",children:[]},{value:"<code>batching.check</code>",id:"batchingcheck",children:[]},{value:"<code>batching.processors</code>",id:"batchingprocessors",children:[]}]}],p={toc:s};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"BETA: This component is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with the component is found."),Object(o.b)("p",null,"Stores message parts in an Azure Table Storage table."),Object(o.b)("p",null,"Introduced in version 3.36.0."),Object(o.b)(i.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(o.b)(c.a,{value:"common",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\noutput:\n  azure_table_storage:\n    storage_account: ""\n    storage_access_key: ""\n    storage_connection_string: ""\n    table_name: ""\n    partition_key: ""\n    row_key: ""\n    properties: {}\n    max_in_flight: 1\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'))),Object(o.b)(c.a,{value:"advanced",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\noutput:\n  azure_table_storage:\n    storage_account: ""\n    storage_access_key: ""\n    storage_connection_string: ""\n    table_name: ""\n    partition_key: ""\n    row_key: ""\n    properties: {}\n    insert_type: INSERT\n    max_in_flight: 1\n    timeout: 5s\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n')))),Object(o.b)("p",null,"Only one authentication method is required, ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," or ",Object(o.b)("inlineCode",{parentName:"p"},"storage_account")," and ",Object(o.b)("inlineCode",{parentName:"p"},"storage_access_key"),". If both are set then the ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is given priority."),Object(o.b)("p",null,"In order to set the ",Object(o.b)("inlineCode",{parentName:"p"},"table_name"),",  ",Object(o.b)("inlineCode",{parentName:"p"},"partition_key")," and ",Object(o.b)("inlineCode",{parentName:"p"},"row_key"),"\nyou can use function interpolations described ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here"),", which are\ncalculated per message of a batch."),Object(o.b)("p",null,"If the ",Object(o.b)("inlineCode",{parentName:"p"},"properties")," are not set in the config, all the ",Object(o.b)("inlineCode",{parentName:"p"},"json")," fields\nare marshaled and stored in the table, which will be created if it does not exist."),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"object")," and ",Object(o.b)("inlineCode",{parentName:"p"},"array")," fields are marshaled as strings. e.g.:"),Object(o.b)("p",null,"The JSON message:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "foo": 55,\n  "bar": {\n    "baz": "a",\n    "bez": "b"\n  },\n  "diz": ["a", "b"]\n}\n')),Object(o.b)("p",null,"Will store in the table the following properties:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'foo: \'55\'\nbar: \'{ "baz": "a", "bez": "b" }\'\ndiz: \'["a", "b"]\'\n')),Object(o.b)("p",null,"It's also possible to use function interpolations to get or transform the properties values, e.g.:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"properties:\n  device: '${! json(\"device\") }'\n  timestamp: '${! json(\"timestamp\") }'\n")),Object(o.b)("h2",{id:"performance"},"Performance"),Object(o.b)("p",null,"This output benefits from sending multiple messages in flight in parallel for\nimproved performance. You can tune the max number of in flight messages with the\nfield ",Object(o.b)("inlineCode",{parentName:"p"},"max_in_flight"),"."),Object(o.b)("p",null,"This output benefits from sending messages as a batch for improved performance.\nBatches can be formed at both the input and output level. You can find out more\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"in this doc"),"."),Object(o.b)("h2",{id:"fields"},"Fields"),Object(o.b)("h3",{id:"storage_account"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_account")),Object(o.b)("p",null,"The storage account to upload messages to. This field is ignored if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"storage_access_key"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_access_key")),Object(o.b)("p",null,"The storage account access key. This field is ignored if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"storage_connection_string"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_connection_string")),Object(o.b)("p",null,"A storage account connection string. This field is required if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_account")," and ",Object(o.b)("inlineCode",{parentName:"p"},"storage_access_key")," are not set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"table_name"},Object(o.b)("inlineCode",{parentName:"h3"},"table_name")),Object(o.b)("p",null,"The table to store messages into.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ntable_name: ${!meta("kafka_topic")}\n')),Object(o.b)("h3",{id:"partition_key"},Object(o.b)("inlineCode",{parentName:"h3"},"partition_key")),Object(o.b)("p",null,"The partition key.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\npartition_key: ${!json("date")}\n')),Object(o.b)("h3",{id:"row_key"},Object(o.b)("inlineCode",{parentName:"h3"},"row_key")),Object(o.b)("p",null,"The row key.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nrow_key: ${!json("device")}-${!uuid_v4()}\n')),Object(o.b)("h3",{id:"properties"},Object(o.b)("inlineCode",{parentName:"h3"},"properties")),Object(o.b)("p",null,"A map of properties to store into the table.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"object"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(o.b)("h3",{id:"insert_type"},Object(o.b)("inlineCode",{parentName:"h3"},"insert_type")),Object(o.b)("p",null,"Type of insert operation\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"INSERT"'),Object(o.b)("br",{parentName:"p"}),"\n","Options: ",Object(o.b)("inlineCode",{parentName:"p"},"INSERT"),", ",Object(o.b)("inlineCode",{parentName:"p"},"INSERT_MERGE"),", ",Object(o.b)("inlineCode",{parentName:"p"},"INSERT_REPLACE"),"."),Object(o.b)("h3",{id:"max_in_flight"},Object(o.b)("inlineCode",{parentName:"h3"},"max_in_flight")),Object(o.b)("p",null,"The maximum number of messages to have in flight at a given time. Increase this to improve throughput."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(o.b)("h3",{id:"timeout"},Object(o.b)("inlineCode",{parentName:"h3"},"timeout")),Object(o.b)("p",null,"The maximum period to wait on an upload before abandoning it and reattempting."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"5s"'),"  "),Object(o.b)("h3",{id:"batching"},Object(o.b)("inlineCode",{parentName:"h3"},"batching")),Object(o.b)("p",null,"Allows you to configure a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"batching policy"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n')),Object(o.b)("h3",{id:"batchingcount"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.count")),Object(o.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(o.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(o.b)("h3",{id:"batchingbyte_size"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.byte_size")),Object(o.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(o.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(o.b)("h3",{id:"batchingperiod"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.period")),Object(o.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(o.b)("h3",{id:"batchingcheck"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.check")),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(o.b)("h3",{id:"batchingprocessors"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.processors")),Object(o.b)("p",null,"A list of ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"array"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")))}u.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),s=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,m=p["".concat(i,".").concat(d)]||p[d]||u[d]||o;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},413:function(e,t,n){"use strict";var a=n(0),r=n(414);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},415:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(413),i=n(412),c=n(56),b=n.n(c),l=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,p=e.values,u=e.groupId,d=e.className,m=Object(o.a)(),O=m.tabGroupChoices,j=m.setTabGroupChoices,h=Object(a.useState)(c),g=h[0],f=h[1],N=a.Children.toArray(e.children);if(null!=u){var y=O[u];null!=y&&y!==g&&p.some((function(e){return e.value===y}))&&f(y)}var _=function(e){f(e),null!=u&&j(u,e)},v=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},d)},p.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":g===t,className:Object(i.a)("tabs__item",b.a.tabItem,{"tabs__item--active":g===t}),key:t,ref:function(e){return v.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(v,e.target,e)},onFocus:function(){return _(t)},onClick:function(){_(t)}},n)}))),t?Object(a.cloneElement)(N.filter((function(e){return e.props.value===g}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==g})}))))}},416:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);