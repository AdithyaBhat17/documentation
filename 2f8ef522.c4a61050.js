(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{107:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),i=n(7),o=(n(0),n(274)),r={title:"react-native Chatbot SDK",sidebar_label:"react-native Chatbot SDK"},c={unversionedId:"platform_concepts/channelConfiguration/react-native",id:"platform_concepts/channelConfiguration/react-native",isDocsHomePage:!1,title:"react-native Chatbot SDK",description:"Installation",source:"@site/docs/platform_concepts/channelConfiguration/react-native.md",slug:"/platform_concepts/channelConfiguration/react-native",permalink:"/docs/platform_concepts/channelConfiguration/react-native",version:"current",sidebar_label:"react-native Chatbot SDK",sidebar:"platform_concepts",previous:{title:"iOS Chatbot SDK",permalink:"/docs/platform_concepts/channelConfiguration/ios"},next:{title:"Chatbot SDK for cordova",permalink:"/docs/platform_concepts/channelConfiguration/cordova"}},l=[{value:"Installation",id:"installation",children:[{value:"npm",id:"npm",children:[]},{value:"yarn",id:"yarn",children:[]},{value:"Manual installation",id:"manual-installation",children:[]}]},{value:"Usage",id:"usage",children:[{value:"Set botId",id:"set-botid",children:[]}]},{value:"Present chatbot",id:"present-chatbot",children:[]},{value:"Other configurations",id:"other-configurations",children:[{value:"Speech to Text",id:"speech-to-text",children:[]},{value:"Payload",id:"payload",children:[]},{value:"History",id:"history",children:[]},{value:"Event from bot",id:"event-from-bot",children:[]}]},{value:"Close bot",id:"close-bot",children:[]},{value:"Close bot event",id:"close-bot-event",children:[]},{value:"Push Notifications",id:"push-notifications",children:[{value:"Authentication Token",id:"authentication-token",children:[]},{value:"Device Token",id:"device-token",children:[]}]},{value:"On-Prem Deployments",id:"on-prem-deployments",children:[]},{value:"Demo App",id:"demo-app",children:[]}],b={toc:l};function p(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"installation"},"Installation"),Object(o.b)("h3",{id:"npm"},"npm"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"$ npm install ymchat-react-native --save\n\n$ react-native link ymchat-react-native\n")),Object(o.b)("h3",{id:"yarn"},"yarn"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"yarn add ymchat-react-native\n")),Object(o.b)("h3",{id:"manual-installation"},"Manual installation"),Object(o.b)("h4",{id:"ios"},"iOS"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"In XCode, in the project navigator, right click ",Object(o.b)("inlineCode",{parentName:"li"},"Libraries")," \u279c ",Object(o.b)("inlineCode",{parentName:"li"},"Add Files to [your project's name]")),Object(o.b)("li",{parentName:"ol"},"Go to ",Object(o.b)("inlineCode",{parentName:"li"},"node_modules")," \u279c ",Object(o.b)("inlineCode",{parentName:"li"},"ymchat-react-native")," and add ",Object(o.b)("inlineCode",{parentName:"li"},"YMChat.xcodeproj")),Object(o.b)("li",{parentName:"ol"},"In XCode, in the project navigator, select your project. Add ",Object(o.b)("inlineCode",{parentName:"li"},"libYMChat.a")," to your project's ",Object(o.b)("inlineCode",{parentName:"li"},"Build Phases")," \u279c ",Object(o.b)("inlineCode",{parentName:"li"},"Link Binary With Libraries")),Object(o.b)("li",{parentName:"ol"},"Run your project (",Object(o.b)("inlineCode",{parentName:"li"},"Cmd+R"),")<")),Object(o.b)("h4",{id:"android"},"Android"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Open up ",Object(o.b)("inlineCode",{parentName:"li"},"android/app/src/main/java/[...]/MainActivity.java"))),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Add ",Object(o.b)("inlineCode",{parentName:"li"},"import com.reactlibrary.YMChatPackage;")," to the imports at the top of the file"),Object(o.b)("li",{parentName:"ul"},"Add ",Object(o.b)("inlineCode",{parentName:"li"},"new YMChatPackage()")," to the list returned by the ",Object(o.b)("inlineCode",{parentName:"li"},"getPackages()")," method")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},"Append the following lines to ",Object(o.b)("inlineCode",{parentName:"li"},"android/settings.gradle"),":",Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"include ':ymchat-react-native'\nproject(':ymchat-react-native').projectDir = new File(rootProject.projectDir,   '../node_modules/ymchat-react-native/android')\n"))),Object(o.b)("li",{parentName:"ol"},"Insert the following lines inside the dependencies block in ",Object(o.b)("inlineCode",{parentName:"li"},"android/app/build.gradle"),":",Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"  compile project(':ymchat-react-native')\n"))),Object(o.b)("li",{parentName:"ol"},"Add following key in your ",Object(o.b)("inlineCode",{parentName:"li"},"strings.xml")," file, this will override default file provider used by SDK.\nOverriding the file provider path will avoid conflict with other app using YM CHATBOT SDK. You can use your application id and suffix it with ",Object(o.b)("inlineCode",{parentName:"li"},".fileprovider"),"\nExample - applicationId : ",Object(o.b)("inlineCode",{parentName:"li"},"com.abc.xyz")," then  application_id_for_provider = ",Object(o.b)("inlineCode",{parentName:"li"},"com.abc.xyz.fileprovider"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),' <string name="application_id_for_provider">your.application.id.fileprovider</string>\n')))),Object(o.b)("h2",{id:"usage"},"Usage"),Object(o.b)("p",null,"Import YMChat in App.js"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { YMChat } from 'ymchat-react-native';\n")),Object(o.b)("h3",{id:"set-botid"},"Set botId"),Object(o.b)("p",null,"This is the first and ",Object(o.b)("strong",{parentName:"p"},"compulsary")," step."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'YMChat.setBotId("x1234567890");\n')),Object(o.b)("h2",{id:"present-chatbot"},"Present chatbot"),Object(o.b)("p",null,"Chat bot can be presented by calling ",Object(o.b)("inlineCode",{parentName:"p"},"startChatbot()"),". This method will display full screen chat view"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"YMChat.startChatbot();\n")),Object(o.b)("h2",{id:"other-configurations"},"Other configurations"),Object(o.b)("h3",{id:"speech-to-text"},"Speech to Text"),Object(o.b)("p",null,"Speech to text can be enabled and disabled by calling setEnableSpeech(). Default value is ",Object(o.b)("inlineCode",{parentName:"p"},"false")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"YMChat.setEnableSpeech(true);\n")),Object(o.b)("h3",{id:"payload"},"Payload"),Object(o.b)("p",null,"Information can be passed from app to bot using payload."),Object(o.b)("p",null,"The payload dictionary should be JSON compatible else an error will be thrown"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'YMChat.setPayload({ "name": "Purush", "age": 21 });\n')),Object(o.b)("p",null,"If you are supporting Speech recognization, add following snippet to Info.plist of the host app"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{}),"<key>NSMicrophoneUsageDescription</key>  \n<string>Your microphone will be used to record your speech when you use the Voice feature.</string>\n<key>NSSpeechRecognitionUsageDescription</key>  \n<string>Speech recognition will be used to determine which words you speak into this device&apos;s microphone.</string>\n")),Object(o.b)("h3",{id:"history"},"History"),Object(o.b)("p",null,"Chat history can be enabled by calling ",Object(o.b)("inlineCode",{parentName:"p"},"setEnableHistory()"),' and setting "UserID" in the payload\nDefault value is ',Object(o.b)("inlineCode",{parentName:"p"},"false")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'YMChat.setPayload({ "UserId": "unique-id"}); //set unique id like email or UUID\nYMChat.setEnableHistory(true)\n')),Object(o.b)("h3",{id:"event-from-bot"},"Event from bot"),Object(o.b)("p",null,"Bot can send events to the host app. Import ",Object(o.b)("inlineCode",{parentName:"p"},"YMChatEvents")," from ",Object(o.b)("inlineCode",{parentName:"p"},"ymchat-react-native")),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { YMChat, YMChatEvents } from 'ymchat-react-native';\n..\n..\nYMChatEvents.addListener('YMChatEvent', (event) => {\n   console.log(event.code, event.data); // you get access to all incoming bot events.\n});\n")),Object(o.b)("h2",{id:"close-bot"},"Close bot"),Object(o.b)("p",null,"Bot canbe closed by tapping on cross button at top, and they can be progrmatically closed using ",Object(o.b)("inlineCode",{parentName:"p"},"closeBot()")," function"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"YMChat.shared.closeBot();\n")),Object(o.b)("h2",{id:"close-bot-event"},"Close bot event"),Object(o.b)("p",null,"Bot close event is separetly sent and it can be handled in following way."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"import { YMChat, YMChatEvents } from 'ymchat-react-native';\n..\n..\nYMChatEvents.addListener('YMBotCloseEvent', () => {\n   console.log(\"Bot closed\");\n});\n\n")),Object(o.b)("h2",{id:"push-notifications"},"Push Notifications"),Object(o.b)("p",null,"ymchat-react-native supports firebase notifications. Push notifications needs ",Object(o.b)("inlineCode",{parentName:"p"},"authentication token")," and ",Object(o.b)("inlineCode",{parentName:"p"},"device token")),Object(o.b)("h3",{id:"authentication-token"},"Authentication Token"),Object(o.b)("p",null,"Authentication token can be set using ",Object(o.b)("inlineCode",{parentName:"p"},"setAuthenticationToken")," method. Auth token can be a unique identifier like email or UUID"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'YMChat.setAuthenticationToken("token");\n')),Object(o.b)("h3",{id:"device-token"},"Device Token"),Object(o.b)("p",null,"Device token can be set using ",Object(o.b)("inlineCode",{parentName:"p"},"setDeviceToken")," method. Pass ",Object(o.b)("inlineCode",{parentName:"p"},"fcmToken")," as a parameter to this method."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'YMChat.setDeviceToken("token");\n')),Object(o.b)("p",null,"It is recommended to set authentication token and device token before ",Object(o.b)("inlineCode",{parentName:"p"},"startChatbot()")),Object(o.b)("p",null,"Note: Firebase service account key is required to send notifications. You can share the service account key with us. More info ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://developers.google.com/assistant/engagement/notifications#get_a_service_account_key"}),"here")),Object(o.b)("h2",{id:"on-prem-deployments"},"On-Prem Deployments"),Object(o.b)("p",null,"ymchat-react-native supports bots with on-prem deployments. For the bot to work, pass the on-prem URL to ",Object(o.b)("inlineCode",{parentName:"p"},"setCustomURL()")," method."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"YMChat.setCustomURL('https://your-on-prem-url.com');\n")),Object(o.b)("h2",{id:"demo-app"},"Demo App"),Object(o.b)("p",null,"A demo app can be used as a reference to better understand how this SDK can be integrated in the app\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/yellowmessenger/ymchat-react-native-demo"}),"https://github.com/yellowmessenger/ymchat-react-native-demo")))}p.isMDXComponent=!0},274:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var b=i.a.createContext({}),p=function(e){var t=i.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=p(e.components);return i.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),s=p(n),u=a,m=s["".concat(r,".").concat(u)]||s[u]||d[u]||o;return n?i.a.createElement(m,c(c({ref:t},b),{},{components:n})):i.a.createElement(m,c({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,r[1]=c;for(var b=2;b<o;b++)r[b]=n[b];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);