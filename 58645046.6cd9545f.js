(window.webpackJsonp=window.webpackJsonp||[]).push([[124],{197:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(411)),c=n(415),i=n(416),l={title:"metric",type:"processor",status:"stable",categories:["Utility"]},s={unversionedId:"components/processors/metric",id:"components/processors/metric",isDocsHomePage:!1,title:"metric",description:"\x3c!--",source:"@site/docs/components/processors/metric.md",slug:"/components/processors/metric",permalink:"/docs/components/processors/metric",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/processors/metric.md",version:"current",sidebar:"docs",previous:{title:"log",permalink:"/docs/components/processors/log"},next:{title:"noop",permalink:"/docs/components/processors/noop"}},b=[{value:"Examples",id:"examples",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>type</code>",id:"type",children:[]},{value:"<code>name</code>",id:"name",children:[]},{value:"<code>labels</code>",id:"labels",children:[]},{value:"<code>value</code>",id:"value",children:[]},{value:"<code>parts</code>",id:"parts",children:[]}]},{value:"Types",id:"types",children:[{value:"<code>counter</code>",id:"counter",children:[]},{value:"<code>counter_by</code>",id:"counter_by",children:[]},{value:"<code>gauge</code>",id:"gauge",children:[]},{value:"<code>timing</code>",id:"timing",children:[]}]}],p={toc:b};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Emit custom metrics by extracting values from messages."),Object(o.b)(c.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"common",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\nmetric:\n  type: counter\n  name: ""\n  labels: {}\n  value: ""\n'))),Object(o.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\nmetric:\n  type: counter\n  name: ""\n  labels: {}\n  value: ""\n  parts: []\n')))),Object(o.b)("p",null,"This processor works by evaluating an ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolated field ",Object(o.b)("inlineCode",{parentName:"a"},"value"))," for each message and updating a emitted metric according to the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#types"}),"type"),"."),Object(o.b)("p",null,"Custom metrics such as these are emitted along with Benthos internal metrics, where you can customize where metrics are sent, which metric names are emitted and rename them as/when appropriate. For more information check out the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/metrics/about"}),"metrics docs here"),"."),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)(c.a,{defaultValue:"Counter",values:[{label:"Counter",value:"Counter"},{label:"Gauge",value:"Gauge"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"Counter",mdxType:"TabItem"},Object(o.b)("p",null,"In this example we emit a counter metric called ",Object(o.b)("inlineCode",{parentName:"p"},"Foos"),", which increments for every message processed, and we label the metric with some metadata about where the message came from and a field from the document that states what type it is. We also configure our metrics to emit to CloudWatch, and explicitly only allow our custom metric and some internal Benthos metrics to emit."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - metric:\n        name: Foos\n        type: counter\n        labels:\n          topic: ${! meta("kafka_topic") }\n          parition: ${! meta("kafka_partition") }\n          type: ${! json("document.type").or("unknown") }\n\nmetrics:\n  cloudwatch:\n    namespace: ProdConsumer\n    region: eu-west-1\n    path_mapping: |\n      root = if ![\n        "Foos",\n        "input.received",\n        "output.sent"\n      ].contains(this) { deleted() }\n'))),Object(o.b)(i.a,{value:"Gauge",mdxType:"TabItem"},Object(o.b)("p",null,"In this example we emit a gauge metric called ",Object(o.b)("inlineCode",{parentName:"p"},"FooSize"),", which is given a value extracted from JSON messages at the path ",Object(o.b)("inlineCode",{parentName:"p"},"foo.size"),". We then also configure our Prometheus metric exporter to only emit this custom metric and nothing else. We also label the metric with some metadata."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - metric:\n        name: FooSize\n        type: gauge\n        labels:\n          topic: ${! meta("kafka_topic") }\n        value: ${! json("foo.size") }\n\nmetrics:\n  prometheus:\n    path_mapping: \'if this != "FooSize" { deleted() }\'\n')))),Object(o.b)("h2",{id:"fields"},"Fields"),Object(o.b)("h3",{id:"type"},Object(o.b)("inlineCode",{parentName:"h3"},"type")),Object(o.b)("p",null,"The metric ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#types"}),"type")," to create."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"counter"'),Object(o.b)("br",{parentName:"p"}),"\n","Options: ",Object(o.b)("inlineCode",{parentName:"p"},"counter"),", ",Object(o.b)("inlineCode",{parentName:"p"},"counter_by"),", ",Object(o.b)("inlineCode",{parentName:"p"},"gauge"),", ",Object(o.b)("inlineCode",{parentName:"p"},"timing"),"."),Object(o.b)("h3",{id:"name"},Object(o.b)("inlineCode",{parentName:"h3"},"name")),Object(o.b)("p",null,"The name of the metric to create, this must be unique across all Benthos components otherwise it will overwrite those other metrics."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"labels"},Object(o.b)("inlineCode",{parentName:"h3"},"labels")),Object(o.b)("p",null,"A map of label names and values that can be used to enrich metrics. Labels are not supported by some metric destinations, in which case the metrics series are combined.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"object"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nlabels:\n  topic: ${! meta("kafka_topic") }\n  type: ${! json("doc.type") }\n')),Object(o.b)("h3",{id:"value"},Object(o.b)("inlineCode",{parentName:"h3"},"value")),Object(o.b)("p",null,"For some metric types specifies a value to set, increment.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"parts"},Object(o.b)("inlineCode",{parentName:"h3"},"parts")),Object(o.b)("p",null,"An optional array of message indexes of a batch that the processor should apply to.\nIf left empty all messages are processed. This field is only applicable when\nbatching messages ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"at the input level"),"."),Object(o.b)("p",null,"Indexes can be negative, and if so the part will be selected from the end\ncounting backwards starting from -1."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"array"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(o.b)("h2",{id:"types"},"Types"),Object(o.b)("h3",{id:"counter"},Object(o.b)("inlineCode",{parentName:"h3"},"counter")),Object(o.b)("p",null,"Increments a counter by exactly 1, the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"value")," are ignored\nby this type."),Object(o.b)("h3",{id:"counter_by"},Object(o.b)("inlineCode",{parentName:"h3"},"counter_by")),Object(o.b)("p",null,"If the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"value")," can be parsed as a positive integer value\nthen the counter is incremented by this value."),Object(o.b)("p",null,"For example, the following configuration will increment the value of the\n",Object(o.b)("inlineCode",{parentName:"p"},"count.custom.field")," metric by the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"field.some.value"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'metric:\n  type: counter_by\n  name: CountCustomField\n  value: ${!json("field.some.value")}\n')),Object(o.b)("h3",{id:"gauge"},Object(o.b)("inlineCode",{parentName:"h3"},"gauge")),Object(o.b)("p",null,"If the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"value")," can be parsed as a positive integer value\nthen the gauge is set to this value."),Object(o.b)("p",null,"For example, the following configuration will set the value of the\n",Object(o.b)("inlineCode",{parentName:"p"},"gauge.custom.field")," metric to the contents of ",Object(o.b)("inlineCode",{parentName:"p"},"field.some.value"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'metric:\n  type: gauge\n  path: GaugeCustomField\n  value: ${!json("field.some.value")}\n')),Object(o.b)("h3",{id:"timing"},Object(o.b)("inlineCode",{parentName:"h3"},"timing")),Object(o.b)("p",null,"Equivalent to ",Object(o.b)("inlineCode",{parentName:"p"},"gauge")," where instead the metric is a timing."))}u.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=b(n),m=a,d=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return n?r.a.createElement(d,i(i({ref:t},s),{},{components:n})):r.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},413:function(e,t,n){"use strict";var a=n(0),r=n(414);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},415:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(413),c=n(412),i=n(56),l=n.n(i),s=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,p=e.values,u=e.groupId,m=e.className,d=Object(o.a)(),f=d.tabGroupChoices,h=d.setTabGroupChoices,O=Object(a.useState)(i),j=O[0],g=O[1],y=a.Children.toArray(e.children);if(null!=u){var v=f[u];null!=v&&v!==j&&p.some((function(e){return e.value===v}))&&g(v)}var N=function(e){g(e),null!=u&&h(u,e)},C=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(c.a)("tabs__item",l.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(C,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(y.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},416:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);