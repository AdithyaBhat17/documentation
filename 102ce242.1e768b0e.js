(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{411:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),u=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=u(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=a,h=b["".concat(i,".").concat(d)]||b[d]||p[d]||o;return n?r.a.createElement(h,s(s({ref:t},c),{},{components:n})):r.a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),r=n(7),o=(n(0),n(411)),i={title:"Lambda",description:"Deploying Benthos as an AWS Lambda function"},s={unversionedId:"guides/serverless/lambda",id:"guides/serverless/lambda",isDocsHomePage:!1,title:"Lambda",description:"Deploying Benthos as an AWS Lambda function",source:"@site/docs/guides/serverless/lambda.md",slug:"/guides/serverless/lambda",permalink:"/docs/guides/serverless/lambda",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/guides/serverless/lambda.md",version:"current",sidebar:"docs",previous:{title:"Serverless",permalink:"/docs/guides/serverless/about"},next:{title:"Streams Mode",permalink:"/docs/guides/streams_mode/about"}},l=[{value:"Running with an output",id:"running-with-an-output",children:[]},{value:"Running without an output",id:"running-without-an-output",children:[]},{value:"Running a combination",id:"running-a-combination",children:[]},{value:"Upload to AWS",id:"upload-to-aws",children:[]},{value:"Invoke",id:"invoke",children:[]},{value:"Build",id:"build",children:[]}],c={toc:l};function u(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"benthos-lambda")," distribution is a version of Benthos specifically tailored\nfor deployment as an AWS Lambda function."),Object(o.b)("p",null,"It uses the same configuration format as a regular Benthos instance, except it\nis read from the environment variable ",Object(o.b)("inlineCode",{parentName:"p"},"BENTHOS_CONFIG")," (YAML format). Also, the\n",Object(o.b)("inlineCode",{parentName:"p"},"http"),", ",Object(o.b)("inlineCode",{parentName:"p"},"input")," and ",Object(o.b)("inlineCode",{parentName:"p"},"buffer")," sections are ignored as the service wide HTTP\nserver is not used, and messages are inserted via function invocations."),Object(o.b)("p",null,"If the ",Object(o.b)("inlineCode",{parentName:"p"},"output")," section is omitted in your config then the result of the\nprocessing pipeline is returned back to the caller, otherwise the resulting data\nis sent to the output destination."),Object(o.b)("h3",{id:"running-with-an-output"},"Running with an output"),Object(o.b)("p",null,"The flow of a Benthos lambda function with an output configured looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"                    benthos-lambda\n           +------------------------------+\n           |                              |\n       -------\x3e Processors ----\x3e Output -----\x3e Somewhere\ninvoke     |                              |        |\n       <-------------------------------------------/\n           |         <Ack/Noack>          |\n           |                              |\n           +------------------------------+\n")),Object(o.b)("p",null,"Where the call will block until the output target has confirmed receipt of the\nresulting payload. When the message is successfully propagated a JSON payload is\nreturned of the form ",Object(o.b)("inlineCode",{parentName:"p"},'{"message":"request successful"}'),", otherwise an error is\nreturned containing the reason for the failure."),Object(o.b)("h3",{id:"running-without-an-output"},"Running without an output"),Object(o.b)("p",null,"The flow when an output is not configured looks like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"               benthos-lambda\n           +--------------------+\n           |                    |\n       -------\x3e Processors --\\  |\ninvoke     |                 |  |\n       <---------------------/  |\n           |     <Result>       |\n           |                    |\n           +--------------------+\n")),Object(o.b)("p",null,"Where the function returns the result of processing directly back to the caller.\nThe format of the result differs depending on the number of batches and messages\nof a batch that resulted from the invocation:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Single message of a single batch: ",Object(o.b)("inlineCode",{parentName:"li"},"{}")," (JSON object)"),Object(o.b)("li",{parentName:"ul"},"Multiple messages of a single batch: ",Object(o.b)("inlineCode",{parentName:"li"},"[{},{}]")," (Array of JSON objects)"),Object(o.b)("li",{parentName:"ul"},"Multiple batches: ",Object(o.b)("inlineCode",{parentName:"li"},"[[{},{}],[{}]]")," (Array of arrays of JSON objects, batches\nof size one are a single object array in this case)")),Object(o.b)("h4",{id:"processing-errors"},"Processing Errors"),Object(o.b)("p",null,"The default behaviour of a Benthos lambda is that the handler will not return an\nerror unless the output fails. This means that errors that occur within your\nprocessors will not result in the handler failing, which will instead return the\nfinal state of the message."),Object(o.b)("p",null,"In the next major version release (V4) this will change and the handler will\nfail if messages have encountered an uncaught error during execution. However,\nin the meantime it is possible to configure your output to use the new\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/outputs/reject"}),Object(o.b)("inlineCode",{parentName:"a"},"reject")," output")," in order to trigger a handler error on\nprocessor errors:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"output:\n  switch:\n    cases:\n      - check: '!errored()'\n        output:\n          type: sync_response\n      - output:\n          reject: \"processing failed due to: ${! error() }\"\n")),Object(o.b)("h3",{id:"running-a-combination"},"Running a combination"),Object(o.b)("p",null,"It's possible to configure pipelines that send messages to third party\ndestinations and also return a result back to the caller. This is done by\nconfiguring an output block and including an output of the type\n",Object(o.b)("inlineCode",{parentName:"p"},"sync_response"),"."),Object(o.b)("p",null,"For example, if we wished for our lambda function to send a payload to Kafka\nand also return the same payload back to the caller we could use a\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/outputs/broker"}),"broker"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yml"}),"output:\n  broker:\n    pattern: fan_out\n    outputs:\n    - kafka:\n        addresses:\n        - todo:9092\n        client_id: benthos_serverless\n        topic: example_topic\n    - type: sync_response\n")),Object(o.b)("h2",{id:"upload-to-aws"},"Upload to AWS"),Object(o.b)("p",null,"Grab an archive labelled ",Object(o.b)("inlineCode",{parentName:"p"},"benthos-lambda")," from the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Jeffail/benthos/releases"}),"releases page"),"\npage and then create your function:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),'LAMBDA_ENV=`cat yourconfig.yaml | jq -csR {Variables:{BENTHOS_CONFIG:.}}`\naws lambda create-function \\\n  --runtime go1.x \\\n  --handler benthos-lambda \\\n  --role benthos-example-role \\\n  --zip-file fileb://benthos-lambda.zip \\\n  --environment "$LAMBDA_ENV" \\\n  --function-name benthos-example\n')),Object(o.b)("p",null,"There is also an example ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Jeffail/benthos/tree/master/resources/serverless/lambda/benthos-lambda-sam.yaml"}),"SAM template")," and\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/Jeffail/benthos/tree/master/resources/serverless/lambda/benthos-lambda.tf"}),"Terraform resource")," in the repo to copy from."),Object(o.b)("h2",{id:"invoke"},"Invoke"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),'aws lambda invoke \\\n  --function-name benthos-example \\\n  --payload \'{"your":"document"}\' \\\n  out.txt && cat out.txt && rm out.txt\n')),Object(o.b)("h2",{id:"build"},"Build"),Object(o.b)("p",null,"You can build and archive the function yourself with:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sh"}),"go build github.com/Jeffail/benthos/v3/cmd/serverless/benthos-lambda\nzip benthos-lambda.zip benthos-lambda\n")))}u.isMDXComponent=!0}}]);