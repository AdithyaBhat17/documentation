(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{299:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(411)),i=(n(415),n(416),{title:"archive",type:"processor",status:"stable",categories:["Parsing"]}),c={unversionedId:"components/processors/archive",id:"components/processors/archive",isDocsHomePage:!1,title:"archive",description:"\x3c!--",source:"@site/docs/components/processors/archive.md",slug:"/components/processors/archive",permalink:"/docs/components/processors/archive",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/processors/archive.md",version:"current",sidebar:"docs",previous:{title:"Processors",permalink:"/docs/components/processors/about"},next:{title:"avro",permalink:"/docs/components/processors/avro"}},s=[{value:"Fields",id:"fields",children:[{value:"<code>format</code>",id:"format",children:[]},{value:"<code>path</code>",id:"path",children:[]}]},{value:"Formats",id:"formats",children:[{value:"<code>tar</code>",id:"tar",children:[]},{value:"<code>zip</code>",id:"zip",children:[]},{value:"<code>binary</code>",id:"binary",children:[]},{value:"<code>lines</code>",id:"lines",children:[]},{value:"<code>json_array</code>",id:"json_array",children:[]}]},{value:"Examples",id:"examples",children:[]}],l={toc:s};function b(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Archives all the messages of a batch into a single message according to the\nselected archive ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#formats"}),"format"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Config fields, showing default values\narchive:\n  format: binary\n  path: ${!count("files")}-${!timestamp_unix_nano()}.txt\n')),Object(o.b)("p",null,"Some archive formats (such as tar, zip) treat each archive item (message part)\nas a file with a path. Since message parts only contain raw data a unique path\nmust be generated for each part. This can be done by using function\ninterpolations on the 'path' field as described\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here"),". For types that aren't file based\n(such as binary) the file field is ignored."),Object(o.b)("p",null,"The resulting archived message adopts the metadata of the ",Object(o.b)("em",{parentName:"p"},"first")," message part\nof the batch."),Object(o.b)("p",null,"The functionality of this processor depends on being applied across messages\nthat are batched. You can find out more about batching ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"in this doc"),"."),Object(o.b)("h2",{id:"fields"},"Fields"),Object(o.b)("h3",{id:"format"},Object(o.b)("inlineCode",{parentName:"h3"},"format")),Object(o.b)("p",null,"The archiving ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"#formats"}),"format")," to apply."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"binary"'),Object(o.b)("br",{parentName:"p"}),"\n","Options: ",Object(o.b)("inlineCode",{parentName:"p"},"tar"),", ",Object(o.b)("inlineCode",{parentName:"p"},"zip"),", ",Object(o.b)("inlineCode",{parentName:"p"},"binary"),", ",Object(o.b)("inlineCode",{parentName:"p"},"lines"),", ",Object(o.b)("inlineCode",{parentName:"p"},"json_array"),"."),Object(o.b)("h3",{id:"path"},Object(o.b)("inlineCode",{parentName:"h3"},"path")),Object(o.b)("p",null,"The path to set for each message in the archive (when applicable).\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"${!count(\\"files\\")}-${!timestamp_unix_nano()}.txt"'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\npath: ${!count("files")}-${!timestamp_unix_nano()}.txt\n\npath: ${!meta("kafka_key")}-${!json("id")}.json\n')),Object(o.b)("h2",{id:"formats"},"Formats"),Object(o.b)("h3",{id:"tar"},Object(o.b)("inlineCode",{parentName:"h3"},"tar")),Object(o.b)("p",null,"Archive messages to a unix standard tape archive."),Object(o.b)("h3",{id:"zip"},Object(o.b)("inlineCode",{parentName:"h3"},"zip")),Object(o.b)("p",null,"Archive messages to a zip file."),Object(o.b)("h3",{id:"binary"},Object(o.b)("inlineCode",{parentName:"h3"},"binary")),Object(o.b)("p",null,"Archive messages to a binary blob format consisting of:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Four bytes containing number of messages in the batch (in big endian)"),Object(o.b)("li",{parentName:"ul"},"For each message part:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"Four bytes containing the length of the message (in big endian)"),Object(o.b)("li",{parentName:"ul"},"The content of message")))),Object(o.b)("h3",{id:"lines"},Object(o.b)("inlineCode",{parentName:"h3"},"lines")),Object(o.b)("p",null,"Join the raw contents of each message and insert a line break between each one."),Object(o.b)("h3",{id:"json_array"},Object(o.b)("inlineCode",{parentName:"h3"},"json_array")),Object(o.b)("p",null,"Attempt to parse each message as a JSON document and append the result to an\narray, which becomes the contents of the resulting message."),Object(o.b)("h2",{id:"examples"},"Examples"),Object(o.b)("p",null,"If we had JSON messages in a batch each of the form:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{"doc":{"id":"foo","body":"hello world 1"}}\n')),Object(o.b)("p",null,"And we wished to tar archive them, setting their filenames to their respective\nunique IDs (with the extension ",Object(o.b)("inlineCode",{parentName:"p"},".json"),"), our config might look like\nthis:"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'archive:\n  format: tar\n  path: ${!json("doc.id")}.json\n')))}b.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),b=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=b(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=b(n),d=a,m=p["".concat(i,".").concat(d)]||p[d]||u[d]||o;return n?r.a.createElement(m,c(c({ref:t},l),{},{components:n})):r.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},413:function(e,t,n){"use strict";var a=n(0),r=n(414);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},415:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(413),i=n(412),c=n(56),s=n.n(c),l=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,p=e.values,u=e.groupId,d=e.className,m=Object(o.a)(),f=m.tabGroupChoices,h=m.setTabGroupChoices,O=Object(a.useState)(c),j=O[0],g=O[1],v=a.Children.toArray(e.children);if(null!=u){var y=f[u];null!=y&&y!==j&&p.some((function(e){return e.value===y}))&&g(y)}var N=function(e){g(e),null!=u&&h(u,e)},w=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},d)},p.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(i.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(v.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},416:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);