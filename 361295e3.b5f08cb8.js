(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{158:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(411)),i=(n(415),n(416),{title:"log",type:"processor",status:"stable",categories:["Utility"]}),c={unversionedId:"components/processors/log",id:"components/processors/log",isDocsHomePage:!1,title:"log",description:"\x3c!--",source:"@site/docs/components/processors/log.md",slug:"/components/processors/log",permalink:"/docs/components/processors/log",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/processors/log.md",version:"current",sidebar:"docs",previous:{title:"json_schema",permalink:"/docs/components/processors/json_schema"},next:{title:"metric",permalink:"/docs/components/processors/metric"}},l=[{value:"Structured Fields",id:"structured-fields",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>level</code>",id:"level",children:[]},{value:"<code>fields</code>",id:"fields-1",children:[]},{value:"<code>message</code>",id:"message",children:[]}]}],s={toc:l};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Prints a log event each time it processes a batch. Messages always remain\nunchanged. The log message can be set using function interpolations described\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here")," which allows you to log the\ncontents and metadata of messages."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'# Config fields, showing default values\nlog:\n  level: INFO\n  fields: {}\n  message: ""\n')),Object(o.b)("p",null,"In order to print a log message per message of a batch place it within a\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/components/processors/for_each"}),Object(o.b)("inlineCode",{parentName:"a"},"for_each"))," processor."),Object(o.b)("p",null,"For example, if we wished to create a debug log event for each message in a\npipeline in order to expose the JSON field ",Object(o.b)("inlineCode",{parentName:"p"},"foo.bar")," as well as the\nmetadata field ",Object(o.b)("inlineCode",{parentName:"p"},"kafka_partition")," we can achieve that with the\nfollowing config:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - for_each:\n      - log:\n          level: DEBUG\n          message: \'field: ${! json("foo.bar") }, part: ${! meta("kafka_partition") }\'\n')),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"level")," field determines the log level of the printed events and\ncan be any of the following values: TRACE, DEBUG, INFO, WARN, ERROR."),Object(o.b)("h3",{id:"structured-fields"},"Structured Fields"),Object(o.b)("p",null,"It's also possible to output a map of structured fields, this only works when\nthe service log is set to output as JSON. The field values are function\ninterpolated, meaning it's possible to output structured fields containing\nmessage contents and metadata, e.g.:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'pipeline:\n  processors:\n    - log:\n        level: DEBUG\n        message: "foo"\n        fields:\n          id: \'${! json("id") }\'\n          kafka_topic: \'${! meta("kafka_topic") }\'\n')),Object(o.b)("h2",{id:"fields"},"Fields"),Object(o.b)("h3",{id:"level"},Object(o.b)("inlineCode",{parentName:"h3"},"level")),Object(o.b)("p",null,"The log level to use."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'"INFO"'),Object(o.b)("br",{parentName:"p"}),"\n","Options: ",Object(o.b)("inlineCode",{parentName:"p"},"FATAL"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ERROR"),", ",Object(o.b)("inlineCode",{parentName:"p"},"WARN"),", ",Object(o.b)("inlineCode",{parentName:"p"},"INFO"),", ",Object(o.b)("inlineCode",{parentName:"p"},"DEBUG"),", ",Object(o.b)("inlineCode",{parentName:"p"},"TRACE"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ALL"),"."),Object(o.b)("h3",{id:"fields-1"},Object(o.b)("inlineCode",{parentName:"h3"},"fields")),Object(o.b)("p",null,"A map of fields to print along with the log message.\nThis field supports ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"object"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(o.b)("h3",{id:"message"},Object(o.b)("inlineCode",{parentName:"h3"},"message")),Object(o.b)("p",null,"The message to print.\nThis field supports ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "))}p.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(f,c(c({ref:t},s),{},{components:n})):a.a.createElement(f,c({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},413:function(e,t,n){"use strict";var r=n(0),a=n(414);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},415:function(e,t,n){"use strict";var r=n(0),a=n.n(r),o=n(413),i=n(412),c=n(56),l=n.n(c),s=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,u=e.values,b=e.groupId,d=e.className,f=Object(o.a)(),m=f.tabGroupChoices,O=f.setTabGroupChoices,g=Object(r.useState)(c),j=g[0],h=g[1],v=r.Children.toArray(e.children);if(null!=b){var y=m[b];null!=y&&y!==j&&u.some((function(e){return e.value===y}))&&h(y)}var N=function(e){h(e),null!=b&&O(b,e)},w=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(i.a)("tabs",{"tabs--block":n},d)},u.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(i.a)("tabs__item",l.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(r.cloneElement)(v.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},416:function(e,t,n){"use strict";var r=n(3),a=n(0),o=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return o.a.createElement("div",Object(r.a)({role:"tabpanel"},{hidden:n,className:a}),t)}}}]);