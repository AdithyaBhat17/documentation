(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{323:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(411)),c=n(415),i=n(416),b={title:"azure_queue_storage",type:"output",status:"beta",categories:["Services","Azure"]},s={unversionedId:"components/outputs/azure_queue_storage",id:"components/outputs/azure_queue_storage",isDocsHomePage:!1,title:"azure_queue_storage",description:"\x3c!--",source:"@site/docs/components/outputs/azure_queue_storage.md",slug:"/components/outputs/azure_queue_storage",permalink:"/docs/components/outputs/azure_queue_storage",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/outputs/azure_queue_storage.md",version:"current",sidebar:"docs",previous:{title:"azure_blob_storage",permalink:"/docs/components/outputs/azure_blob_storage"},next:{title:"azure_table_storage",permalink:"/docs/components/outputs/azure_table_storage"}},l=[{value:"Performance",id:"performance",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>storage_account</code>",id:"storage_account",children:[]},{value:"<code>storage_access_key</code>",id:"storage_access_key",children:[]},{value:"<code>storage_connection_string</code>",id:"storage_connection_string",children:[]},{value:"<code>queue_name</code>",id:"queue_name",children:[]},{value:"<code>ttl</code>",id:"ttl",children:[]},{value:"<code>max_in_flight</code>",id:"max_in_flight",children:[]},{value:"<code>batching</code>",id:"batching",children:[]},{value:"<code>batching.count</code>",id:"batchingcount",children:[]},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",children:[]},{value:"<code>batching.period</code>",id:"batchingperiod",children:[]},{value:"<code>batching.check</code>",id:"batchingcheck",children:[]},{value:"<code>batching.processors</code>",id:"batchingprocessors",children:[]}]}],u={toc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"BETA: This component is mostly stable but breaking changes could still be made outside of major version releases if a fundamental problem with the component is found."),Object(o.b)("p",null,"Sends messages to an Azure Queue Storage queue."),Object(o.b)("p",null,"Introduced in version 3.36.0."),Object(o.b)(c.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"common",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\noutput:\n  azure_queue_storage:\n    storage_account: ""\n    storage_access_key: ""\n    storage_connection_string: ""\n    queue_name: ""\n    max_in_flight: 1\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'))),Object(o.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\noutput:\n  azure_queue_storage:\n    storage_account: ""\n    storage_access_key: ""\n    storage_connection_string: ""\n    queue_name: ""\n    ttl: ""\n    max_in_flight: 1\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n')))),Object(o.b)("p",null,"Only one authentication method is required, ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," or ",Object(o.b)("inlineCode",{parentName:"p"},"storage_account")," and ",Object(o.b)("inlineCode",{parentName:"p"},"storage_access_key"),". If both are set then the ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is given priority."),Object(o.b)("p",null,"In order to set the ",Object(o.b)("inlineCode",{parentName:"p"},"queue_name")," you can use function interpolations described ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here"),", which are calculated per message of a batch."),Object(o.b)("h2",{id:"performance"},"Performance"),Object(o.b)("p",null,"This output benefits from sending multiple messages in flight in parallel for\nimproved performance. You can tune the max number of in flight messages with the\nfield ",Object(o.b)("inlineCode",{parentName:"p"},"max_in_flight"),"."),Object(o.b)("p",null,"This output benefits from sending messages as a batch for improved performance.\nBatches can be formed at both the input and output level. You can find out more\n",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"in this doc"),"."),Object(o.b)("h2",{id:"fields"},"Fields"),Object(o.b)("h3",{id:"storage_account"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_account")),Object(o.b)("p",null,"The storage account to upload messages to. This field is ignored if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"storage_access_key"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_access_key")),Object(o.b)("p",null,"The storage account access key. This field is ignored if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_connection_string")," is set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"storage_connection_string"},Object(o.b)("inlineCode",{parentName:"h3"},"storage_connection_string")),Object(o.b)("p",null,"A storage account connection string. This field is required if ",Object(o.b)("inlineCode",{parentName:"p"},"storage_account")," and ",Object(o.b)("inlineCode",{parentName:"p"},"storage_access_key")," are not set."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"queue_name"},Object(o.b)("inlineCode",{parentName:"h3"},"queue_name")),Object(o.b)("p",null,"The name of the target Queue Storage queue.\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("h3",{id:"ttl"},Object(o.b)("inlineCode",{parentName:"h3"},"ttl")),Object(o.b)("p",null,"The TTL of each individual message as a duration string. Defaults to 0, meaning no retention period is set\nThis field supports ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nttl: 60s\n\nttl: 5m\n\nttl: 36h\n")),Object(o.b)("h3",{id:"max_in_flight"},Object(o.b)("inlineCode",{parentName:"h3"},"max_in_flight")),Object(o.b)("p",null,"The maximum number of messages to have in flight at a given time. Increase this to improve throughput."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(o.b)("h3",{id:"batching"},Object(o.b)("inlineCode",{parentName:"h3"},"batching")),Object(o.b)("p",null,"Allows you to configure a ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"batching policy"),"."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n')),Object(o.b)("h3",{id:"batchingcount"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.count")),Object(o.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(o.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(o.b)("h3",{id:"batchingbyte_size"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.byte_size")),Object(o.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(o.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"number"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(o.b)("h3",{id:"batchingperiod"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.period")),Object(o.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(o.b)("h3",{id:"batchingcheck"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.check")),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"string"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(o.b)("h3",{id:"batchingprocessors"},Object(o.b)("inlineCode",{parentName:"h3"},"batching.processors")),Object(o.b)("p",null,"A list of ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(o.b)("p",null,"Type: ",Object(o.b)("inlineCode",{parentName:"p"},"array"),Object(o.b)("br",{parentName:"p"}),"\n","Default: ",Object(o.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")))}p.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),l=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||o;return n?r.a.createElement(m,i(i({ref:t},s),{},{components:n})):r.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var b in t)hasOwnProperty.call(t,b)&&(i[b]=t[b]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},413:function(e,t,n){"use strict";var a=n(0),r=n(414);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},415:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(413),c=n(412),i=n(56),b=n.n(i),s=37,l=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,u=e.values,p=e.groupId,d=e.className,m=Object(o.a)(),h=m.tabGroupChoices,g=m.setTabGroupChoices,f=Object(a.useState)(i),O=f[0],j=f[1],_=a.Children.toArray(e.children);if(null!=p){var y=h[p];null!=y&&y!==O&&u.some((function(e){return e.value===y}))&&j(y)}var v=function(e){j(e),null!=p&&g(p,e)},N=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},d)},u.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(c.a)("tabs__item",b.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return N.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case l:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(N,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},n)}))),t?Object(a.cloneElement)(_.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},_.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},416:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);