(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{144:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(3),c=n(7),i=(n(0),n(411)),o=n(415),r=n(416),b={title:"aws_s3",type:"output",status:"stable",categories:["Services","AWS"]},l={unversionedId:"components/outputs/aws_s3",id:"components/outputs/aws_s3",isDocsHomePage:!1,title:"aws_s3",description:"\x3c!--",source:"@site/docs/components/outputs/aws_s3.md",slug:"/components/outputs/aws_s3",permalink:"/docs/components/outputs/aws_s3",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/outputs/aws_s3.md",version:"current",sidebar:"docs",previous:{title:"aws_kinesis_firehose",permalink:"/docs/components/outputs/aws_kinesis_firehose"},next:{title:"aws_sns",permalink:"/docs/components/outputs/aws_sns"}},s=[{value:"Metadata",id:"metadata",children:[]},{value:"Tags",id:"tags",children:[]},{value:"Credentials",id:"credentials",children:[]},{value:"Batching",id:"batching",children:[]},{value:"Performance",id:"performance",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>bucket</code>",id:"bucket",children:[]},{value:"<code>path</code>",id:"path",children:[]},{value:"<code>tags</code>",id:"tags-1",children:[]},{value:"<code>content_type</code>",id:"content_type",children:[]},{value:"<code>content_encoding</code>",id:"content_encoding",children:[]},{value:"<code>storage_class</code>",id:"storage_class",children:[]},{value:"<code>kms_key_id</code>",id:"kms_key_id",children:[]},{value:"<code>force_path_style_urls</code>",id:"force_path_style_urls",children:[]},{value:"<code>max_in_flight</code>",id:"max_in_flight",children:[]},{value:"<code>timeout</code>",id:"timeout",children:[]},{value:"<code>batching</code>",id:"batching-1",children:[]},{value:"<code>batching.count</code>",id:"batchingcount",children:[]},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",children:[]},{value:"<code>batching.period</code>",id:"batchingperiod",children:[]},{value:"<code>batching.check</code>",id:"batchingcheck",children:[]},{value:"<code>batching.processors</code>",id:"batchingprocessors",children:[]},{value:"<code>region</code>",id:"region",children:[]},{value:"<code>endpoint</code>",id:"endpoint",children:[]},{value:"<code>credentials</code>",id:"credentials-1",children:[]},{value:"<code>credentials.profile</code>",id:"credentialsprofile",children:[]},{value:"<code>credentials.id</code>",id:"credentialsid",children:[]},{value:"<code>credentials.secret</code>",id:"credentialssecret",children:[]},{value:"<code>credentials.token</code>",id:"credentialstoken",children:[]},{value:"<code>credentials.role</code>",id:"credentialsrole",children:[]},{value:"<code>credentials.role_external_id</code>",id:"credentialsrole_external_id",children:[]}]}],p={toc:s};function d(e){var t=e.components,n=Object(c.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Sends message parts as objects to an Amazon S3 bucket. Each object is uploaded\nwith the path specified with the ",Object(i.b)("inlineCode",{parentName:"p"},"path")," field."),Object(i.b)("p",null,"Introduced in version 3.36.0."),Object(i.b)(o.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(i.b)(r.a,{value:"common",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\noutput:\n  aws_s3:\n    bucket: ""\n    path: ${!count("files")}-${!timestamp_unix_nano()}.txt\n    tags: {}\n    content_type: application/octet-stream\n    max_in_flight: 1\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n    region: eu-west-1\n'))),Object(i.b)(r.a,{value:"advanced",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\noutput:\n  aws_s3:\n    bucket: ""\n    path: ${!count("files")}-${!timestamp_unix_nano()}.txt\n    tags: {}\n    content_type: application/octet-stream\n    content_encoding: ""\n    storage_class: STANDARD\n    kms_key_id: ""\n    force_path_style_urls: false\n    max_in_flight: 1\n    timeout: 5s\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n    region: eu-west-1\n    endpoint: ""\n    credentials:\n      profile: ""\n      id: ""\n      secret: ""\n      token: ""\n      role: ""\n      role_external_id: ""\n')))),Object(i.b)("p",null,"In order to have a different path for each object you should use function\ninterpolations described ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"here"),", which are\ncalculated per message of a batch."),Object(i.b)("h3",{id:"metadata"},"Metadata"),Object(i.b)("p",null,"Metadata fields on messages will be sent as headers, in order to mutate these values (or remove them) check out the ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/metadata"}),"metadata docs"),"."),Object(i.b)("h3",{id:"tags"},"Tags"),Object(i.b)("p",null,"The tags field allows you to specify key/value pairs to attach to objects as tags, where the values support\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'output:\n    aws_s3:\n        bucket: TODO\n        path: ${!count("files")}-${!timestamp_unix_nano()}.tar.gz\n        tags:\n            Key1: Value1\n            Timestamp: ${!meta("Timestamp")}\n')),Object(i.b)("h3",{id:"credentials"},"Credentials"),Object(i.b)("p",null,"By default Benthos will use a shared credentials file when connecting to AWS\nservices. It's also possible to set them explicitly at the component level,\nallowing you to transfer data across accounts. You can find out more\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/aws"}),"in this document"),"."),Object(i.b)("h3",{id:"batching"},"Batching"),Object(i.b)("p",null,"It's common to want to upload messages to S3 as batched archives, the easiest\nway to do this is to batch your messages at the output level and join the batch\nof messages with an\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/archive"}),Object(i.b)("inlineCode",{parentName:"a"},"archive"))," and/or\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/compress"}),Object(i.b)("inlineCode",{parentName:"a"},"compress"))," processor."),Object(i.b)("p",null,"For example, if we wished to upload messages as a .tar.gz archive of documents\nwe could achieve that with the following config:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'output:\n  aws_s3:\n    bucket: TODO\n    path: ${!count("files")}-${!timestamp_unix_nano()}.tar.gz\n    batching:\n      count: 100\n      period: 10s\n      processors:\n        - archive:\n            format: tar\n        - compress:\n            algorithm: gzip\n')),Object(i.b)("p",null,"Alternatively, if we wished to upload JSON documents as a single large document\ncontaining an array of objects we can do that with:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'output:\n  aws_s3:\n    bucket: TODO\n    path: ${!count("files")}-${!timestamp_unix_nano()}.json\n    batching:\n      count: 100\n      processors:\n        - archive:\n            format: json_array\n')),Object(i.b)("h2",{id:"performance"},"Performance"),Object(i.b)("p",null,"This output benefits from sending multiple messages in flight in parallel for\nimproved performance. You can tune the max number of in flight messages with the\nfield ",Object(i.b)("inlineCode",{parentName:"p"},"max_in_flight"),"."),Object(i.b)("h2",{id:"fields"},"Fields"),Object(i.b)("h3",{id:"bucket"},Object(i.b)("inlineCode",{parentName:"h3"},"bucket")),Object(i.b)("p",null,"The bucket to upload messages to."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"path"},Object(i.b)("inlineCode",{parentName:"h3"},"path")),Object(i.b)("p",null,"The path of each message to upload.\nThis field supports ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"${!count(\\"files\\")}-${!timestamp_unix_nano()}.txt"'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\npath: ${!count("files")}-${!timestamp_unix_nano()}.txt\n\npath: ${!meta("kafka_key")}.json\n\npath: ${!json("doc.namespace")}/${!json("doc.id")}.json\n')),Object(i.b)("h3",{id:"tags-1"},Object(i.b)("inlineCode",{parentName:"h3"},"tags")),Object(i.b)("p",null,"Key/value pairs to store with the object as tags.\nThis field supports ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"object"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ntags:\n  Key1: Value1\n  Timestamp: ${!meta("Timestamp")}\n')),Object(i.b)("h3",{id:"content_type"},Object(i.b)("inlineCode",{parentName:"h3"},"content_type")),Object(i.b)("p",null,"The content type to set for each object.\nThis field supports ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"application/octet-stream"'),"  "),Object(i.b)("h3",{id:"content_encoding"},Object(i.b)("inlineCode",{parentName:"h3"},"content_encoding")),Object(i.b)("p",null,"An optional content encoding to set for each object.\nThis field supports ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"storage_class"},Object(i.b)("inlineCode",{parentName:"h3"},"storage_class")),Object(i.b)("p",null,"The storage class to set for each object.\nThis field supports ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#bloblang-queries"}),"interpolation functions"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"STANDARD"'),Object(i.b)("br",{parentName:"p"}),"\n","Options: ",Object(i.b)("inlineCode",{parentName:"p"},"STANDARD"),", ",Object(i.b)("inlineCode",{parentName:"p"},"REDUCED_REDUNDANCY"),", ",Object(i.b)("inlineCode",{parentName:"p"},"GLACIER"),", ",Object(i.b)("inlineCode",{parentName:"p"},"STANDARD_IA"),", ",Object(i.b)("inlineCode",{parentName:"p"},"ONEZONE_IA"),", ",Object(i.b)("inlineCode",{parentName:"p"},"INTELLIGENT_TIERING"),", ",Object(i.b)("inlineCode",{parentName:"p"},"DEEP_ARCHIVE"),"."),Object(i.b)("h3",{id:"kms_key_id"},Object(i.b)("inlineCode",{parentName:"h3"},"kms_key_id")),Object(i.b)("p",null,"An optional server side encryption key."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"force_path_style_urls"},Object(i.b)("inlineCode",{parentName:"h3"},"force_path_style_urls")),Object(i.b)("p",null,"Forces the client API to use path style URLs, which helps when connecting to custom endpoints."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"bool"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(i.b)("h3",{id:"max_in_flight"},Object(i.b)("inlineCode",{parentName:"h3"},"max_in_flight")),Object(i.b)("p",null,"The maximum number of messages to have in flight at a given time. Increase this to improve throughput."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"number"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(i.b)("h3",{id:"timeout"},Object(i.b)("inlineCode",{parentName:"h3"},"timeout")),Object(i.b)("p",null,"The maximum period to wait on an upload before abandoning it and reattempting."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"5s"'),"  "),Object(i.b)("h3",{id:"batching-1"},Object(i.b)("inlineCode",{parentName:"h3"},"batching")),Object(i.b)("p",null,"Allows you to configure a ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"batching policy"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n')),Object(i.b)("h3",{id:"batchingcount"},Object(i.b)("inlineCode",{parentName:"h3"},"batching.count")),Object(i.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(i.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"number"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(i.b)("h3",{id:"batchingbyte_size"},Object(i.b)("inlineCode",{parentName:"h3"},"batching.byte_size")),Object(i.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(i.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"number"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(i.b)("h3",{id:"batchingperiod"},Object(i.b)("inlineCode",{parentName:"h3"},"batching.period")),Object(i.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(i.b)("h3",{id:"batchingcheck"},Object(i.b)("inlineCode",{parentName:"h3"},"batching.check")),Object(i.b)("p",null,"A ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(i.b)("h3",{id:"batchingprocessors"},Object(i.b)("inlineCode",{parentName:"h3"},"batching.processors")),Object(i.b)("p",null,"A list of ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"array"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")),Object(i.b)("h3",{id:"region"},Object(i.b)("inlineCode",{parentName:"h3"},"region")),Object(i.b)("p",null,"The AWS region to target."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"eu-west-1"'),"  "),Object(i.b)("h3",{id:"endpoint"},Object(i.b)("inlineCode",{parentName:"h3"},"endpoint")),Object(i.b)("p",null,"Allows you to specify a custom endpoint for the AWS API."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentials-1"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials")),Object(i.b)("p",null,"Optional manual configuration of AWS credentials to use. More information can be found ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/aws"}),"in this document"),"."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(i.b)("h3",{id:"credentialsprofile"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.profile")),Object(i.b)("p",null,"A profile from ",Object(i.b)("inlineCode",{parentName:"p"},"~/.aws/credentials")," to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentialsid"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.id")),Object(i.b)("p",null,"The ID of credentials to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentialssecret"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.secret")),Object(i.b)("p",null,"The secret for the credentials being used."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentialstoken"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.token")),Object(i.b)("p",null,"The token for the credentials being used, required when using short term credentials."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentialsrole"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.role")),Object(i.b)("p",null,"A role ARN to assume."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"credentialsrole_external_id"},Object(i.b)("inlineCode",{parentName:"h3"},"credentials.role_external_id")),Object(i.b)("p",null,"An external ID to provide when assuming a role."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "))}d.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),c=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,c=function(e,t){if(null==e)return{};var n,a,c={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(c[n]=e[n]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(c[n]=e[n])}return c}var l=c.a.createContext({}),s=function(e){var t=c.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return c.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return c.a.createElement(c.a.Fragment,{},t)}},u=c.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||i;return n?c.a.createElement(m,r(r({ref:t},l),{},{components:n})):c.a.createElement(m,r({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var r={};for(var b in t)hasOwnProperty.call(t,b)&&(r[b]=t[b]);r.originalType=e,r.mdxType="string"==typeof e?e:a,o[1]=r;for(var l=2;l<i;l++)o[l]=n[l];return c.a.createElement.apply(null,o)}return c.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,c="";if("string"==typeof e||"number"==typeof e)c+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(c&&(c+=" "),c+=n);else for(t in e)e[t]&&(c&&(c+=" "),c+=t);return c}t.a=function(){for(var e,t,n=0,c="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(c&&(c+=" "),c+=t);return c}},413:function(e,t,n){"use strict";var a=n(0),c=n(414);t.a=function(){var e=Object(a.useContext)(c.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),c=Object(a.createContext)(void 0);t.a=c},415:function(e,t,n){"use strict";var a=n(0),c=n.n(a),i=n(413),o=n(412),r=n(56),b=n.n(r),l=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,r=e.defaultValue,p=e.values,d=e.groupId,u=e.className,m=Object(i.a)(),h=m.tabGroupChoices,O=m.setTabGroupChoices,j=Object(a.useState)(r),f=j[0],g=j[1],N=a.Children.toArray(e.children);if(null!=d){var y=h[d];null!=y&&y!==f&&p.some((function(e){return e.value===y}))&&g(y)}var v=function(e){g(e),null!=d&&O(d,e)},_=[];return c.a.createElement("div",null,c.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(o.a)("tabs",{"tabs--block":n},u)},p.map((function(e){var t=e.value,n=e.label;return c.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":f===t,className:Object(o.a)("tabs__item",b.a.tabItem,{"tabs__item--active":f===t}),key:t,ref:function(e){return _.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case l:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(_,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},n)}))),t?Object(a.cloneElement)(N.filter((function(e){return e.props.value===f}))[0],{className:"margin-vert--md"}):c.a.createElement("div",{className:"margin-vert--md"},N.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==f})}))))}},416:function(e,t,n){"use strict";var a=n(3),c=n(0),i=n.n(c);t.a=function(e){var t=e.children,n=e.hidden,c=e.className;return i.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:c}),t)}}}]);