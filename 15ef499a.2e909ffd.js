(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{446:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),p=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(n),u=a,m=s["".concat(l,".").concat(u)]||s[u]||d[u]||o;return n?r.a.createElement(m,i(i({ref:t},b),{},{components:n})):r.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var b=2;b<o;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},96:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),r=n(7),o=(n(0),n(446)),l=["components"],i={title:"Billdesk",sidebar_label:"Billdesk"},c={unversionedId:"platform_concepts/appConfiguration/billdesk",id:"platform_concepts/appConfiguration/billdesk",isDocsHomePage:!1,title:"Billdesk",description:"Scope of Integration",source:"@site/docs/platform_concepts/appConfiguration/billdesk.md",slug:"/platform_concepts/appConfiguration/billdesk",permalink:"/docs/platform_concepts/appConfiguration/billdesk",version:"current",sidebar_label:"Billdesk",sidebar:"platform_concepts",previous:{title:"Azure AD",permalink:"/docs/platform_concepts/appConfiguration/azure-ad"},next:{title:"Camspay Payment",permalink:"/docs/platform_concepts/appConfiguration/camspay"}},b=[{value:"Scope of Integration",id:"scope-of-integration",children:[]},{value:"Use-cases",id:"use-cases",children:[{value:"1. Generate UPI Intent",id:"1-generate-upi-intent",children:[]},{value:"2. Generate UPI Collect",id:"2-generate-upi-collect",children:[]}]},{value:"Configuration",id:"configuration",children:[]}],p={toc:b};function s(e){var t=e.components,n=Object(r.a)(e,l);return Object(o.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"scope-of-integration"},"Scope of Integration"),Object(o.b)("p",null,"Yellow.ai Integration with Billdesk Payment Gateway allows you to create UPI Intent for WA Pay, view payment status and Send UPI notification with the yellow.ai platform. "),Object(o.b)("h2",{id:"use-cases"},"Use-cases"),Object(o.b)("p",null,"Following are the use-cases which are currently accommodated in the Integration:"),Object(o.b)("h3",{id:"1-generate-upi-intent"},"1. Generate UPI Intent"),Object(o.b)("p",null,"Get the final amount from your cart total and call the Generate UPI Intent action node of integration, get the transaction Id and Intent URI for whatsapp pay api."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"}," Node Input Params:-")," "),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Field Name"),Object(o.b)("th",{parentName:"tr",align:null},"Sample Input"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Amount*"),Object(o.b)("td",{parentName:"tr",align:null},"200"),Object(o.b)("td",{parentName:"tr",align:null},"The amount for the request.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},"any varchar"),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"mailto:John@test.com"},"John@test.com")),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},"Some value"),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://cdn.yellowmessenger.com/kWOnZfYtuAMB1666156690035.png",alt:"alt_text",title:"image_tooltip"})),Object(o.b)("h5",{id:"note-to-use-in-appyms-bot-use-below-function"},"Note: To use in app.ym's bot use below function"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'app.executeIntegrationAction({\n    "integrationName": "billdesk",\n    "action": "Generate UPI Intent",\n    "dynamicParams": {\n        "amount": 100\n    }\n}).then((res)=>{\n    console.log("response from action node", res);\n    app.log(res, \'||Response from action node||\')\n}).catch((err)=>{\n    console.log("Error in action node",err);\n    app.log(err, \'||Error in action node||\')\n})\n')),Object(o.b)("h5",{id:"sample-success-response"},"Sample Success Response:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{\n  "objectid": "transaction",\n  "transactionid": "X7890477676443",\n  "orderid": "UPIODR00000004",\n  "mercid": "BDMERCID",\n  "transaction_date": "2022-03- 18T11:50:27+05:30",\n  "amount": "2.00",\n  "surcharge": "0.00",\n  "txn_process_type": "collect",\n  "bankid": "789",\n  "itemcode": "DIRECT",\n  "auth_status": "0002",\n  "transaction_error_code": "TRP0000",\n  "transaction_error_desc": "Transaction Pending",\n  "transaction_error_type": "pending",\n  "payment_method_type": "upi"\n')),Object(o.b)("h3",{id:"2-generate-upi-collect"},"2. Generate UPI Collect"),Object(o.b)("p",null,"The end customer will authorize the transaction via the UPI PSP mobile app. On successful authorisation, BillDesk will receive a callback from the acquirer, and in turn BillDesk will notify the merchant via webhook notification."),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"}," Node Input Params:-")," "),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Field Name"),Object(o.b)("th",{parentName:"tr",align:null},"Sample Input"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Amount*"),Object(o.b)("td",{parentName:"tr",align:null},"200"),Object(o.b)("td",{parentName:"tr",align:null},"The amount for the request.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"VPA*"),Object(o.b)("td",{parentName:"tr",align:null},"billdesk@upi"),Object(o.b)("td",{parentName:"tr",align:null},"UPI Id of customer")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},"any varchar"),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},Object(o.b)("a",{parentName:"td",href:"mailto:John@test.com"},"John@test.com")),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Additional Parameters"),Object(o.b)("td",{parentName:"tr",align:null},"Some value"),Object(o.b)("td",{parentName:"tr",align:null},"additional_info values that can be attached to the transaction.")))),Object(o.b)("h5",{id:"note-to-use-in-appyms-bot-use-below-function-1"},"Note: To use in app.ym's bot use below function"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'app.executeIntegrationAction({\n    "integrationName": "billdesk",\n    "action": "Generate UPI Collect",\n    "dynamicParams": {\n        "amount": 100,\n        "vpa":"billdesk@upi",\n        "additionalParameters4":"anything"\n        "additionalParameters5":"anything"\n        "additionalParameters6":"anything"\n    }\n}).then((res)=>{\n    console.log("response from action node", res);\n    app.log(res, \'||Response from action node||\')\n}).catch((err)=>{\n    console.log("Error in action node",err);\n    app.log(err, \'||Error in action node||\')\n})\n')),Object(o.b)("h5",{id:"sample-success-response-1"},"Sample Success Response:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'{\n  "objectid": "transaction",\n  "transactionid": "X7890477676443",\n  "orderid": "UPIODR00000004",\n  "mercid": "BDMERCID",\n  "transaction_date": "2022-03- 18T11:50:27+05:30",\n  "amount": "2.00",\n  "surcharge": "0.00",\n  "txn_process_type": "collect",\n  "bankid": "789",\n  "itemcode": "DIRECT",\n  "auth_status": "0002",\n  "transaction_error_code": "TRP0000",\n  "transaction_error_desc": "Transaction Pending",\n  "transaction_error_type": "pending",\n  "payment_method_type": "upi"\n')),Object(o.b)("h4",{id:"event-for-receving-payment-confirmation-on-bot"},"Event for receving payment confirmation on bot"),Object(o.b)("p",null,"Following are the events which are currently accommodated in the Integration:"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",{parentName:"tr",align:null},"Event"),Object(o.b)("th",{parentName:"tr",align:null},"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",{parentName:"tr",align:null},"Billdesk Payment Status"),Object(o.b)("td",{parentName:"tr",align:null},"In case of payments the status can be checked with these details.")))),Object(o.b)("p",null,"Please Activate the Billdesk Payment Status after configuring instamojo credentials at integration page."),Object(o.b)("h2",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Configuring the integration with Billdesk is straightforward. Follow the steps defined below to start integrating:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Get the KeyId, Client Id, Merchant Id, Public Key File and API Base URL from Billdesk Team.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Upload your Public Key file in some bucket or server like (AWS-S3, SFTP, etc) and Get the public CDN Url . Note:(CDN URL should be public readable).")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Now Go to Integration page and Enter the right value in Billdesk's form to connect the billdesk Integration."))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://cdn.yellowmessenger.com/NsZFcYu9H3md1666156528149.png",alt:"alt_text",title:"image_tooltip"})))}s.isMDXComponent=!0}}]);