(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{103:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return s}));var a=n(3),o=n(7),i=(n(0),n(273)),c={title:"iOS Chatbot SDK",sidebar_label:"iOS Chatbot SDK"},r={unversionedId:"platform_concepts/channelConfiguration/ios",id:"platform_concepts/channelConfiguration/ios",isDocsHomePage:!1,title:"iOS Chatbot SDK",description:"Installation",source:"@site/docs/platform_concepts/channelConfiguration/ios.md",slug:"/platform_concepts/channelConfiguration/ios",permalink:"/docs/platform_concepts/channelConfiguration/ios",version:"current",sidebar_label:"iOS Chatbot SDK",sidebar:"platform_concepts",previous:{title:"Android Chatbot SDK",permalink:"/docs/platform_concepts/channelConfiguration/android"},next:{title:"react-native Chatbot SDK",permalink:"/docs/platform_concepts/channelConfiguration/react-native"}},b=[{value:"Installation",id:"installation",children:[{value:"CocoaPods",id:"cocoapods",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"YMConfig",id:"ymconfig",children:[{value:"Start chatbot",id:"start-chatbot",children:[]},{value:"Bot Events",id:"bot-events",children:[]},{value:"Close bot",id:"close-bot",children:[]},{value:"Bot close event",id:"bot-close-event",children:[]}]},{value:"Custom Base URL",id:"custom-base-url",children:[]},{value:"Push Notifications",id:"push-notifications",children:[{value:"Logging",id:"logging",children:[]}]},{value:"Demo App",id:"demo-app",children:[]}],l={toc:b};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"installation"},"Installation"),Object(i.b)("h3",{id:"cocoapods"},"CocoaPods"),Object(i.b)("p",null,"To integrate YMChatbot into your Xcode project using CocoaPods, specify it in your ",Object(i.b)("inlineCode",{parentName:"p"},"Podfile"),":"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-ruby"}),"pod 'YMChat'\n")),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Supported iOS versions:")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"iOS 12, 13 and 14"))),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("h4",{id:"basic"},"Basic"),Object(i.b)("p",null,"Import the YMChat framework in Swift file"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"import YMChat\n")),Object(i.b)("p",null,"After the framework is imported the bot can be presented with few lines as below "),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'do {\n    let config = YMConfig(botId: "x1234567890")\n    YMChat.shared.config = config\n    try YMChat.shared.startChatbot(on: self)\n} catch {\n    print("Error occured while loading chatbot \\(error)")\n}\n')),Object(i.b)("h2",{id:"ymconfig"},"YMConfig"),Object(i.b)("p",null,"YMConfig can be used to set the bot id and other bot related settings. It is recommended to set all appropriate config ",Object(i.b)("strong",{parentName:"p"},"before")," starting the bot"),Object(i.b)("h4",{id:"initialize"},"Initialize"),Object(i.b)("p",null,"YMConfig requires botID to initialize. All other settings are optional and they can be changed after initialisation of YMConfig"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'let config = YMConfig(botId: "x1234567890")\n')),Object(i.b)("h4",{id:"speech-to-text"},"Speech to Text"),Object(i.b)("p",null,"Speech to text can be enabled by setting the enableSpeech flag. Default value is ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"config.enableSpeech = true\n")),Object(i.b)("p",null,"If you are adding Speech recognization, add following snippet to Info.plist of the host app"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<key>NSMicrophoneUsageDescription</key>  \n<string>Your microphone will be used to record your speech when you use the Voice feature.</string>\n<key>NSSpeechRecognitionUsageDescription</key>  \n<string>Speech recognition will be used to determine which words you speak into this device&apos;s microphone.</string>\n")),Object(i.b)("h4",{id:"payload"},"Payload"),Object(i.b)("p",null,"Additional information can be passed in the form of key value pair from app to bot using payload."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'config.payload = ["name": "ym.bot.name", "device-type": "mobile"]\n')),Object(i.b)("p",null,"Payload can be used to pass information from host app to bot. For passing data from bot to app refer bot ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#bot-events"}),"Bot Events")),Object(i.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"warning")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"The payload dictionary should be JSON compatible else an error will be thrown"))),Object(i.b)("h4",{id:"history"},"History"),Object(i.b)("p",null,"Chat history can be enabled by setting the ",Object(i.b)("inlineCode",{parentName:"p"},"enableHistory")," flag present in YMConfig and setting ",Object(i.b)("inlineCode",{parentName:"p"},"UserId")," in the payload. Default value is ",Object(i.b)("inlineCode",{parentName:"p"},"false")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'config.enableHistory = true\nconfig.payload = ["UserId": "unique-user-id"]\n')),Object(i.b)("h3",{id:"start-chatbot"},"Start chatbot"),Object(i.b)("p",null,"Chat bot can be presented by calling ",Object(i.b)("inlineCode",{parentName:"p"},"startChatbot()")," method and passing your view controller as an argument"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'do {\n    try YMChat.shared.startChatbot(on: self)\n} catch {\n    print("Error occured while loading chatbot \\(error)")\n}\n')),Object(i.b)("h3",{id:"bot-events"},"Bot Events"),Object(i.b)("p",null,"Bot events are used to pass information from bot to app. For passing events from app to bot refer ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"#payload"}),"Payload")),Object(i.b)("p",null,"Events from bot can be handled using delegate pattern."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"YMChat.shared.delegate = self\n")),Object(i.b)("p",null,"Once the delegate is assigned define the ",Object(i.b)("inlineCode",{parentName:"p"},"eventResponse(_:)")," function. The handler class should conform to ",Object(i.b)("inlineCode",{parentName:"p"},"YMChatDelegate")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'func onEventFromBot(_ response: YMBotEventResponse) {\n    print("Event received \\(response)")\n    if response.code == "code-from-bot" {\n        print("Even from a bot has been received", response.data)\n    }\n}\n')),Object(i.b)("h3",{id:"close-bot"},"Close bot"),Object(i.b)("p",null,"Bot can be programatically closed using ",Object(i.b)("inlineCode",{parentName:"p"},"closeBot()")," function"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"YMChat.shared.closeBot()\n")),Object(i.b)("h3",{id:"bot-close-event"},"Bot close event"),Object(i.b)("p",null,"Bot close event is separetly sent and it can be handled in following way. The handler class should conform to ",Object(i.b)("inlineCode",{parentName:"p"},"YMChatDelegate")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'func onBotClose() {\n    print("Bot closed")\n}\n')),Object(i.b)("h2",{id:"custom-base-url"},"Custom Base URL"),Object(i.b)("p",null,"For on-prem deployments a different URL can be set to ",Object(i.b)("inlineCode",{parentName:"p"},"customBaseUrl")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'config.customBaseUrl = "https://yourcustomurl.com"\n')),Object(i.b)("h2",{id:"push-notifications"},"Push Notifications"),Object(i.b)("p",null,"YMChat supports firebase notifications. Push notifications needs ",Object(i.b)("inlineCode",{parentName:"p"},"authentication token")," and ",Object(i.b)("inlineCode",{parentName:"p"},"device token")),Object(i.b)("h4",{id:"authentication-token"},"Authentication Token"),Object(i.b)("p",null,"A unique identifier like email or UUID can be assigneed to ",Object(i.b)("inlineCode",{parentName:"p"},"ymAuthenticationToken")," to uniquely identify a user."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'config.ymAuthenticationToken = "your-token"\n')),Object(i.b)("h4",{id:"device-token"},"Device Token"),Object(i.b)("p",null,"Assign your ",Object(i.b)("inlineCode",{parentName:"p"},"FCM token")," to device token"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),'config.deviceToken = "your-firebase-device-token"\n')),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(i.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(i.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"info")),Object(i.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(i.b)("p",{parentName:"div"},"It is recommended to set authentication token and device token before calling startChatbot()"))),Object(i.b)("p",null,"Note: Firebase service account key is required to send notifications. You can share the service account key with us. More info ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://developers.google.com/assistant/engagement/notifications#get_a_service_account_key"}),"here")),Object(i.b)("h3",{id:"logging"},"Logging"),Object(i.b)("p",null,"Logging can be enabled to understand the code flow and to fix bugs."),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"YMChat.shared.enableLogging = true\n")),Object(i.b)("h2",{id:"demo-app"},"Demo App"),Object(i.b)("p",null,"A demo has been created to better understand the integration of SDK in iOS app\n",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/yellowmessenger/YMChatbot-iOS-DemoApp"}),"https://github.com/yellowmessenger/YMChatbot-iOS-DemoApp")))}s.isMDXComponent=!0},273:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function b(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},u=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=b(e,["components","mdxType","originalType","parentName"]),p=s(n),u=a,m=p["".concat(c,".").concat(u)]||p[u]||d[u]||i;return n?o.a.createElement(m,r(r({ref:t},l),{},{components:n})):o.a.createElement(m,r({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,c=new Array(i);c[0]=u;var r={};for(var b in t)hasOwnProperty.call(t,b)&&(r[b]=t[b]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var l=2;l<i;l++)c[l]=n[l];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);