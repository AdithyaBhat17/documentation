(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{216:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return g}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=o.a.createContext({}),p=function(e){var t=o.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return o.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),s=p(n),b=a,g=s["".concat(i,".").concat(b)]||s[b]||d[b]||r;return n?o.a.createElement(g,l(l({ref:t},u),{},{components:n})):o.a.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<r;u++)i[u]=n[u];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(216)),i={title:"Android Chat SDK",sidebar_label:"Android Chat SDK"},l={unversionedId:"documentation/channel-configuration/android",id:"documentation/channel-configuration/android",isDocsHomePage:!1,title:"Android Chat SDK",description:"Yellow Messenger Webview SDK for Android",source:"@site/docs/documentation/channel-configuration/android.md",slug:"/documentation/channel-configuration/android",permalink:"/docs/documentation/channel-configuration/android",version:"current",sidebar_label:"Android Chat SDK",sidebar:"documentation",previous:{title:"Web Client",permalink:"/docs/documentation/channel-configuration/web"},next:{title:"iOS Chat SDK",permalink:"/docs/documentation/channel-configuration/ios"}},c=[{value:"Configuration",id:"configuration",children:[]},{value:"Features",id:"features",children:[]},{value:"Important",id:"important",children:[]},{value:"Note",id:"note",children:[]},{value:"Video Tutorial",id:"video-tutorial",children:[]},{value:"GitHub Repo",id:"github-repo",children:[]},{value:"Flutter Integration Library",id:"flutter-integration-library",children:[]}],u={toc:c};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null," Yellow Messenger Webview SDK for Android"),Object(r.b)("h3",{id:"configuration"},"Configuration"),Object(r.b)("p",null,"App level gradle file"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'allprojects {\n    repositories {\n        jcenter()\n        // Add these two lines \n        maven { url "https://jitpack.io" }\n        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }\n    }\n}\n\n...\n...\n...\n\ndependencies {\n    ...\n    ...\n       implementation \'com.github.yellowmessenger:webviewsdk:0.3.5\'\n\n\n}\n')),Object(r.b)("h4",{id:"android-application-class-example"},"Android Application class Example"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'import com.example.ymwebview.BotEventListener;\nimport com.example.ymwebview.YMBotPlugin;\nimport com.example.ymwebview.models.BotEventsModel;\n\npublic class MainActivity extends AppCompatActivity {\n    \n    @Override\n    public void onCreate() {\n        super.onCreate();\n        //Configuration data\n        HashMap<String, Object> configurations = new HashMap<>();\n        String configData;\n        //Payload attributes\n        HashMap<String, Object> payloadData = new HashMap<>();\n        //Important\n        payloadData.put("platform","Android-App");\n        \n        payloadData.put("UserId","<Some-Unique-Identifier>");\n        payloadData.put("access-token","");\n        payloadData.put("refresh-token","");\n        payloadData.put("mobile-number","");\n        payloadData.put("journey-slug","");\n        payloadData.put("user-state","");\n\n        //You can add other payload attributes in the same format.\n        \n        //Initialize the bot\n        YMBotPlugin pluginYM =  YMBotPlugin.getInstance();\n\n        //Setting Config data.\n        configurations.put("botID", botId); // Required.\n        configurations.put("enableSpeech", "false"); // optional: to enable support for speech recognition.\n        configurations.put("enableHistory", "true"); // optional: shows previous chat history.\n        configurations.put("actionBarColor", Integer.toString(actionBarColor)); // optional: customise actionBar color\n        configurations.put("statusBarColor", Integer.toString(statusBarColor)); // optional: customise statusBar color\n        configurations.put("hideCameraForUpload", "true"); // optional: Hide camera option during file upload.\n        configurations.put("disableCloseButton", "true"); // optional: disable close chatbot button.\n        configData = YMBotPlugin.mapToString(configurations);\n\n\n\n\n        pluginYM.init(configData, new BotEventListener() {\n            @Override\n            public void onSuccess(BotEventsModel botEvent) {\n                Log.d("EventListener", "Event Recieved: "+ botEvent.getCode());\n                switch (botEvent.getCode()){\n                    case "even-name-1" : break;\n                    case "even-name-2" : break;\n                    case "even-name-3" : break;\n                }\n            }\n\n            @Override\n            public void onFailure(String error) {\n            }\n        });\n        //Send Payload Data\n        pluginYM.setPayload(payloadData);\n        \n        //To start chabot call the pluginYm.startChatBot() method.\n         FloatingActionButton fab = findViewById(R.id.fab);\n        fab.setOnClickListener(view -> {\n           //Starting the bot activity\n           pluginYM.startChatBot(this);\n        });\n    }\n}\n')),Object(r.b)("h2",{id:"features"},"Features"),Object(r.b)("p",null,"The SDK takes in the botId as a input configuration when the plugin is initialised. to change the default BotId, use the following method."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'pluginYM.setBotId("<NEW-BOT-ID>");\n')),Object(r.b)("h2",{id:"important"},"Important"),Object(r.b)("p",null,"If facing problem in release build, add the following configuration in the app's proguard-rules.pro file."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"-keep public class com.example.ymwebview.** {\n   *;\n}\n")),Object(r.b)("h2",{id:"note"},"Note"),Object(r.b)("p",null,"If facing problem in release build, add the following configuration in the app's proguard-rules.pro file."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"-keep public class com.example.ymwebview.** {\n   *;\n}\n")),Object(r.b)("h2",{id:"video-tutorial"},"Video Tutorial"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},"(",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://drive.google.com/file/d/1KYDUy0I-yIDwSaew6Imb3xs0dGw0Jh-K/view?usp=sharing"}),"https://drive.google.com/file/d/1KYDUy0I-yIDwSaew6Imb3xs0dGw0Jh-K/view?usp=sharing"),")")),Object(r.b)("h2",{id:"github-repo"},"GitHub Repo"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/yellowmessenger/webviewsdk"}),"https://github.com/yellowmessenger/webviewsdk"))),Object(r.b)("h2",{id:"flutter-integration-library"},"Flutter Integration Library"),Object(r.b)("blockquote",null,Object(r.b)("p",{parentName:"blockquote"},Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"https://pub.dev/packages/ym_flutter_integration"}),"https://pub.dev/packages/ym_flutter_integration"))))}p.isMDXComponent=!0}}]);