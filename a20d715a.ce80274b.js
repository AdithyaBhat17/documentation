(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{240:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),o=(n(0),n(343)),l=["components"],i={title:"SFTP",sidebar_label:"SFTP"},c={unversionedId:"platform_concepts/appConfiguration/sftp",id:"platform_concepts/appConfiguration/sftp",isDocsHomePage:!1,title:"SFTP",description:"Scope of Integration",source:"@site/docs/platform_concepts/appConfiguration/sftp.md",slug:"/platform_concepts/appConfiguration/sftp",permalink:"/docs/platform_concepts/appConfiguration/sftp",version:"current",sidebar_label:"SFTP",sidebar:"platform_concepts",previous:{title:"Service Now",permalink:"/docs/platform_concepts/appConfiguration/service-now"},next:{title:"Shopify",permalink:"/docs/platform_concepts/appConfiguration/shopify"}},d=[{value:"Scope of Integration",id:"scope-of-integration",children:[]},{value:"Use-cases",id:"use-cases",children:[]},{value:"Sample Experience",id:"sample-experience",children:[]}],s={toc:d};function p(e){var t=e.components,n=Object(a.a)(e,l);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"scope-of-integration"},"Scope of Integration"),Object(o.b)("p",null,"Yellow.ai Integration with SFTP allows you to seamlessly connect your remote server with the yellow.ai platform. Using this integration, one can get remote files, make a directory, delete directory, upload files to remote server, check if file exists or not."),Object(o.b)("h2",{id:"use-cases"},"Use-cases"),Object(o.b)("p",null,"Following are the use-cases which are currently accommodated in the Integration:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP File Transfer"),":-\nFrom this method you can easily upload files to a remote server.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>Field Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>fileCdnUrl*\n   </td>\n   <td><code><em>https://cdn.pixabay.com/photo/2017/01/03/02/07/vine-1948358__340.png</em></code>\n   </td>\n   <td>Data source for data to copy to the remote server.\n   </td>\n  </tr>\n  <tr>\n   <td>remoteFilePath*\n   </td>\n   <td><code><em>/uploads/directoryPath/demo.png</em></code>\n   </td>\n   <td>Path to the remote file to be created on the server with file name.\n   </td>\n  </tr>\n  <tr>\n   <td>appendTimeInfilePath*\n   </td>\n   <td><code><em>True or false</em></code>\n   </td>\n   <td>If true then It will append timestamp in file name otherwise same name from remote file path.\n   </td>\n  </tr>\n  <tr>\n   <td>recursive\n   </td>\n   <td><code><em>true/false</em></code>\n   </td>\n   <td>If the recursive flag is set to true, the method will create any directories in the path which do not already exist. Recursive flag defaults to false\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:2},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Get File"),":\nRetrieve a file from a remote SFTP server")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:                 ")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>remoteFilePath*\n   </td>\n   <td><code><em>/Directory/filename.ext</em></code>\n   </td>\n   <td>Path to the remote file to download\n   </td>\n  </tr>\n  <tr>\n   <td>secureupload\n   </td>\n   <td><code><em>true/false</em></code>\n   </td>\n   <td>If true then It will give minio directory path otherwise it will give CDN url of files\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:3},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Make Directory"),":")),Object(o.b)("p",null,"Create a new directory. If the recursive flag is set to true, the method will create any directories in the path which do not already exist. Recursive flag defaults to false."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:                   ")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>remoteDirPath*\n   </td>\n   <td><code><em>/DirectoryPath</em></code>\n   </td>\n   <td>Path to directory with new dir name\n   </td>\n  </tr>\n  <tr>\n   <td>recursive\n   </td>\n   <td><code><em>true/false</em></code>\n   </td>\n   <td>If true then the method will create any directories in the path which do not already exist\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Delete Directory"),":")),Object(o.b)("p",null,"Remove a directory. If removing a directory and recursive flag is set to ",Object(o.b)("inlineCode",{parentName:"p"},"true"),", the specified directory and all sub-directories and files will be deleted. If set to false and the directory has sub-directories or files, the action will fail."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>remoteDirPath*\n   </td>\n   <td><code><em>/DirectoryPath</em></code>\n   </td>\n   <td>Path to directory \n   </td>\n  </tr>\n  <tr>\n   <td>recursive\n   </td>\n   <td><code><em>true/false</em></code>\n   </td>\n   <td>recursive flag is set to <code>true</code>, the specified directory and all sub-directories and files will be deleted.\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:5},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Delete Files"),":")),Object(o.b)("p",null,"Delete a file on the remote server. \\"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:                       ")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>remotefilePath*\n   </td>\n   <td><code><em>/DirectoryPath/filename.txt</em></code>\n   </td>\n   <td>string. Path to remote file to be deleted.\n   </td>\n  </tr>\n  <tr>\n   <td>noErrorOk*\n   </td>\n   <td><code><em>true/false</em></code>\n   </td>\n   <td>boolean. If true, no error is raised when you try to delete a non-existent file. Default is false.\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:6},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Data Append"),":\nAppend the ",Object(o.b)("inlineCode",{parentName:"li"},"input")," data to an existing remote file. There is no integrity checking performed apart from normal writeStream checks. This function simply opens a writeStream on the remote file in append mode and writes the data passed in to the file. \\")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>fileCdnUrl*\n   </td>\n   <td><code><em>https://www.w3.org/TR/PNG/iso_8859-1.txt</em></code>\n   </td>\n   <td> CDN url for Data to append to remote file\n   </td>\n  </tr>\n  <tr>\n   <td>remoteFilePath*\n   </td>\n   <td><code><em>/DirectoryPath/filename.txt</em></code>\n   </td>\n   <td>Path to remote file if files do not exist then It will auto create.\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP List"),":\nRetrieves a directory listing")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Node Input Params:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-html"},"<table>\n  <tr>\n   <td>\nField Name\n   </td>\n   <td>Sample Input\n   </td>\n   <td>Remarks\n   </td>\n  </tr>\n  <tr>\n   <td>remoteDir*\n   </td>\n   <td><code><em>/DirectoryPath</em></code>\n   </td>\n   <td> remote directory path\n   </td>\n  </tr>\n  <tr>\n   <td>pattern\n   </td>\n   <td><code><em>*</em></code>\n   </td>\n   <td>{string|RegExp} A pattern used to filter the items included in the returned array. Pattern can be a simple <em>glob</em>-style string or a regular expression. Defaults to <code>*</code>\n   </td>\n  </tr>\n</table>\n")),Object(o.b)("ol",{start:8},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Exists"),":")),Object(o.b)("p",null,"Tests to see if a remote file or directory exists. Returns type of remote object if it exists or false if it does not"),Object(o.b)("ol",{start:9},Object(o.b)("li",{parentName:"ol"},Object(o.b)("strong",{parentName:"li"},"SFTP Chmod"),":\nChange the mode (read, write or execute permissions) of a remote file or directory.")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"remotePath: string. Path to the remote file or directory"),Object(o.b)("li",{parentName:"ul"},"newmode: octal. New mode to set for the remote file or directory")),Object(o.b)("h1",{id:"configuration"},"Configuration"),Object(o.b)("p",null,"Configuring the integration with SFTP is straightforward. Follow the steps defined below to start integrating:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"To integrate SFTP with your bot on the platform:")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Go to Integration section"),Object(o.b)("li",{parentName:"ol"},"In Integration click on the connect for the SFTP."),Object(o.b)("li",{parentName:"ol"},"Enter Host, Port, username, Password.")),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://i.imgur.com/xepX9Ka.png",alt:null})),Object(o.b)("ol",{start:4},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Click on Save")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Once the integration is done successfully, You can find an Integration option available in addition to the existing nodes.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Store SFTP response in Object type variable in action-node."))),Object(o.b)("p",null,Object(o.b)("img",{parentName:"p",src:"https://i.imgur.com/KCWAcMf.png",alt:null})),Object(o.b)("p",null,"Following the above steps will connect your SFTP remote server  with the yellow.ai platform."),Object(o.b)("h1",{id:"references"},Object(o.b)("strong",{parentName:"h1"},"References:")),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",{parentName:"li",href:"https://www.npmjs.com/package/ssh2-sftp-client"},"https://www.npmjs.com/package/ssh2-sftp-client")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("a",{parentName:"li",href:"https://www.filestash.app/sftp-browser.html"},"https://www.filestash.app/sftp-browser.html"))),Object(o.b)("h2",{id:"sample-experience"},"Sample Experience"),Object(o.b)("p",null,"Below is a video that depicts how this integration works."))}p.isMDXComponent=!0},343:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=a.a.createContext({}),s=function(e){var t=a.a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,u=p["".concat(l,".").concat(m)]||p[m]||b[m]||o;return n?a.a.createElement(u,i(i({ref:t},d),{},{components:n})):a.a.createElement(u,i({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var d=2;d<o;d++)l[d]=n[d];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);