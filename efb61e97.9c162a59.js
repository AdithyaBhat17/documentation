(window.webpackJsonp=window.webpackJsonp||[]).push([[307],{384:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return d}));var a=n(3),o=n(7),r=(n(0),n(411)),s=n(415),c=n(416),p={title:"process_map",type:"processor",status:"deprecated"},i={unversionedId:"components/processors/process_map",id:"components/processors/process_map",isDocsHomePage:!1,title:"process_map",description:"\x3c!--",source:"@site/docs/components/processors/process_map.md",slug:"/components/processors/process_map",permalink:"/docs/components/processors/process_map",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/processors/process_map.md",version:"current",sidebar:"docs",previous:{title:"process_field",permalink:"/docs/components/processors/process_field"},next:{title:"sample",permalink:"/docs/components/processors/sample"}},l=[{value:"Alternatives",id:"alternatives",children:[{value:"Batch Ordering",id:"batch-ordering",children:[]},{value:"Error Handling",id:"error-handling",children:[]}]},{value:"Fields",id:"fields",children:[{value:"<code>conditions</code>",id:"conditions",children:[]},{value:"<code>premap</code>",id:"premap",children:[]},{value:"<code>premap_optional</code>",id:"premap_optional",children:[]},{value:"<code>processors</code>",id:"processors",children:[]},{value:"<code>postmap</code>",id:"postmap",children:[]},{value:"<code>postmap_optional</code>",id:"postmap_optional",children:[]},{value:"<code>parts</code>",id:"parts",children:[]}]},{value:"Examples",id:"examples",children:[]}],b={toc:l};function d(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-warning alert alert--danger"},Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"DEPRECATED")),Object(r.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"This component is deprecated and will be removed in the next major version release. Please consider moving onto ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#alternatives"}),"alternative components"),"."))),Object(r.b)("p",null,"A processor that extracts and maps fields identified via\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/field_paths"}),"dot path")," from the original payload into a new\nobject, applies a list of processors to the newly constructed object, and\nfinally maps the result back into the original payload."),Object(r.b)(s.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(r.b)(c.a,{value:"common",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Common config fields, showing default values\nprocess_map:\n  conditions: []\n  premap: {}\n  premap_optional: {}\n  processors: []\n  postmap: {}\n  postmap_optional: {}\n"))),Object(r.b)(c.a,{value:"advanced",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# All config fields, showing default values\nprocess_map:\n  conditions: []\n  premap: {}\n  premap_optional: {}\n  processors: []\n  postmap: {}\n  postmap_optional: {}\n  parts: []\n")))),Object(r.b)("h2",{id:"alternatives"},"Alternatives"),Object(r.b)("p",null,"All functionality of this processor has been superseded by the\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/branch"}),"branch")," processor."),Object(r.b)("p",null,"This processor is useful for performing processors on subsections of a payload.\nFor example, you could extract sections of a JSON object in order to construct\na reduced request object for an ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/http"}),Object(r.b)("inlineCode",{parentName:"a"},"http")),"\nprocessor, then map the result back into a field within the original object."),Object(r.b)("p",null,"The order of stages of this processor are as follows:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#conditions"}),"Conditions")," are tested (if specified) against each message,\nmessages that do not pass will not be processed."),Object(r.b)("li",{parentName:"ul"},"Messages that are flagged for processing are mapped according to the\n",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#premap"}),"premap")," fields, creating a new object. If the premap stage fails\n(targets are not found) the message will not be processed."),Object(r.b)("li",{parentName:"ul"},"Messages that are mapped are processed as a batch."),Object(r.b)("li",{parentName:"ul"},"After all child processors are applied to the mapped messages they are mapped\nback into the original messages they originated from following the\n",Object(r.b)("a",Object(a.a)({parentName:"li"},{href:"#postmap"}),"postmap")," fields. If the postmap stage fails the mapping is skipped\nand the message payload remains as it started.")),Object(r.b)("p",null,"If the premap is empty then the full payload is sent to the processors, if the\npostmap is empty then the processed result replaces the original contents\nentirely."),Object(r.b)("h3",{id:"batch-ordering"},"Batch Ordering"),Object(r.b)("p",null,"This processor supports batched messages, but the list of processors to apply\nmust NOT change the ordering (or count) of the messages (do not use a\n",Object(r.b)("inlineCode",{parentName:"p"},"group_by")," processor, for example)."),Object(r.b)("h3",{id:"error-handling"},"Error Handling"),Object(r.b)("p",null,"When premap, processing or postmap stages fail the underlying message will\nremain unchanged, the errors are logged, and the message is flagged as having\nfailed, allowing you to use\n",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/error_handling"}),"standard processor error handling patterns"),"\nfor recovery."),Object(r.b)("h2",{id:"fields"},"Fields"),Object(r.b)("h3",{id:"conditions"},Object(r.b)("inlineCode",{parentName:"h3"},"conditions")),Object(r.b)("p",null,"A list of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/conditions/about"}),"conditions")," to test against messages. If any condition fails then the message will not be mapped and processed."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nconditions:\n  - bloblang: document.urls.length() > 0\n")),Object(r.b)("h3",{id:"premap"},Object(r.b)("inlineCode",{parentName:"h3"},"premap")),Object(r.b)("p",null,"A map of source to destination ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/field_paths"}),"paths")," used to create a new object from the original. An empty (or dot ",Object(r.b)("inlineCode",{parentName:"p"},"."),") path indicates the root of the object. If a map source is not found then the message will not be processed, for optional sources use the field ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#premap_optional"}),Object(r.b)("inlineCode",{parentName:"a"},"premap_optional")),"."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\npremap:\n  .: field.from.document\n\npremap:\n  bar.baz: root.extra.baz\n  foo: root.body.foo\n")),Object(r.b)("h3",{id:"premap_optional"},Object(r.b)("inlineCode",{parentName:"h3"},"premap_optional")),Object(r.b)("p",null,"A map of optional source to destination ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/field_paths"}),"paths")," used to create a new object from the original."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(r.b)("h3",{id:"processors"},Object(r.b)("inlineCode",{parentName:"h3"},"processors")),Object(r.b)("p",null,"A list of processors to apply to mapped payloads."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("h3",{id:"postmap"},Object(r.b)("inlineCode",{parentName:"h3"},"postmap")),Object(r.b)("p",null,"A map of destination to source ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/field_paths"}),"paths")," used to map results from processing back into the original payload. An empty (or dot ",Object(r.b)("inlineCode",{parentName:"p"},"."),") path indicates the root of the object. If a source is not found then the mapping is abandoned, for optional sources use the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#postmap_optional"}),Object(r.b)("inlineCode",{parentName:"a"},"postmap_optional"))," field."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\npostmap:\n  results.foo: .\n")),Object(r.b)("h3",{id:"postmap_optional"},Object(r.b)("inlineCode",{parentName:"h3"},"postmap_optional")),Object(r.b)("p",null,"A map of optional destination to source ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/field_paths"}),"paths")," used to map results from processing back into the original payload."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"{}"),"  "),Object(r.b)("h3",{id:"parts"},Object(r.b)("inlineCode",{parentName:"h3"},"parts")),Object(r.b)("p",null,"An optional array of message indexes of a batch that the processor should apply to.\nIf left empty all messages are processed. This field is only applicable when\nbatching messages ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"at the input level"),"."),Object(r.b)("p",null,"Indexes can be negative, and if so the part will be selected from the end\ncounting backwards starting from -1."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("h2",{id:"examples"},"Examples"),Object(r.b)("p",null,"Given a message payload of:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "doc": {\n    "id": "foo",\n    "title": "foo bar baz",\n    "description": "here\'s a thing",\n    "content": "this is a body"\n  }\n}\n')),Object(r.b)("p",null,"We might wish to perform language detection on the ",Object(r.b)("inlineCode",{parentName:"p"},"doc.content")," field\nby sending it to a hypothetical HTTP service. We do not wish to overwrite the\noriginal document with the result, and instead want to place it within the path\n",Object(r.b)("inlineCode",{parentName:"p"},"doc.language"),", and so this is a good use case for ",Object(r.b)("inlineCode",{parentName:"p"},"process_map"),":"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"pipeline:\n  processors:\n    - process_map:\n        premap:\n          content: doc.content\n        processors:\n          - http:\n              url: http://localhost:1234\n        postmap:\n          doc.language: .\n")),Object(r.b)("p",null,"With the above config we would send our target HTTP service the payload\n",Object(r.b)("inlineCode",{parentName:"p"},'{"content":"this is a body"}'),", and whatever the service returns\nwill get mapped into our original document:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-json"}),'{\n  "doc": {\n    "id": "foo",\n    "title": "foo bar baz",\n    "description": "here\'s a thing",\n    "content": "this is a body",\n    "language": {\n      "code": "en",\n      "certainty": 0.2\n    }\n  }\n}\n')))}d.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=o.a.createContext({}),l=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=l(e.components);return o.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,i=p(e,["components","mdxType","originalType","parentName"]),b=l(n),m=a,u=b["".concat(s,".").concat(m)]||b[m]||d[m]||r;return n?o.a.createElement(u,c(c({ref:t},i),{},{components:n})):o.a.createElement(u,c({ref:t},i))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:a,s[1]=c;for(var i=2;i<r;i++)s[i]=n[i];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},413:function(e,t,n){"use strict";var a=n(0),o=n(414);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},415:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(413),s=n(412),c=n(56),p=n.n(c),i=37,l=39;t.a=function(e){var t=e.lazy,n=e.block,c=e.defaultValue,b=e.values,d=e.groupId,m=e.className,u=Object(r.a)(),f=u.tabGroupChoices,h=u.setTabGroupChoices,j=Object(a.useState)(c),O=j[0],g=j[1],y=a.Children.toArray(e.children);if(null!=d){var v=f[d];null!=v&&v!==O&&b.some((function(e){return e.value===v}))&&g(v)}var N=function(e){g(e),null!=d&&h(d,e)},w=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(s.a)("tabs",{"tabs--block":n},m)},b.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":O===t,className:Object(s.a)("tabs__item",p.a.tabItem,{"tabs__item--active":O===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case l:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case i:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(y.filter((function(e){return e.props.value===O}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==O})}))))}},416:function(e,t,n){"use strict";var a=n(3),o=n(0),r=n.n(o);t.a=function(e){var t=e.children,n=e.hidden,o=e.className;return r.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:o}),t)}}}]);