"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[86192],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return f}});var r=a(67294);function n(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,r)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){n(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function o(t,e){if(null==t)return{};var a,r,n=function(t,e){if(null==t)return{};var a,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)a=l[r],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(n[a]=t[a])}return n}var p=r.createContext({}),m=function(t){var e=r.useContext(p),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=m(t.components);return r.createElement(p.Provider,{value:e},t.children)},d="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var a=t.components,n=t.mdxType,l=t.originalType,p=t.parentName,s=o(t,["components","mdxType","originalType","parentName"]),d=m(a),c=n,f=d["".concat(p,".").concat(c)]||d[c]||u[c]||l;return a?r.createElement(f,i(i({ref:e},s),{},{components:a})):r.createElement(f,i({ref:e},s))}));function f(t,e){var a=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=a.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[d]="string"==typeof t?t:n,i[1]=o;for(var m=2;m<l;m++)i[m]=a[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}c.displayName="MDXCreateElement"},22665:function(t,e,a){a.r(e),a.d(e,{assets:function(){return s},contentTitle:function(){return p},default:function(){return c},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return d}});var r=a(87462),n=a(63366),l=(a(67294),a(3905)),i=["components"],o={title:"SFTP",sidebar_label:"SFTP"},p=void 0,m={unversionedId:"platform_concepts/appConfiguration/sftp",id:"platform_concepts/appConfiguration/sftp",title:"SFTP",description:"Scope of Integration",source:"@site/docs/platform_concepts/appConfiguration/sftp.md",sourceDirName:"platform_concepts/appConfiguration",slug:"/platform_concepts/appConfiguration/sftp",permalink:"/docs/platform_concepts/appConfiguration/sftp",draft:!1,tags:[],version:"current",frontMatter:{title:"SFTP",sidebar_label:"SFTP"},sidebar:"platform_concepts",previous:{title:"MS Outlook Calendar",permalink:"/docs/platform_concepts/appConfiguration/outlook-calendar"},next:{title:"Twilio Verify",permalink:"/docs/platform_concepts/appConfiguration/twilio-verify"}},s={},d=[{value:"Scope of Integration",id:"scope-of-integration",level:2},{value:"1. SFTP File Transfer",id:"1-sftp-file-transfer",level:3},{value:"2. SFTP Get File",id:"2-sftp-get-file",level:3},{value:"3. SFTP Make Directory",id:"3-sftp-make-directory",level:3},{value:"4. SFTP Delete Directory",id:"4-sftp-delete-directory",level:3},{value:"5. SFTP Delete Files",id:"5-sftp-delete-files",level:3},{value:"6. SFTP Data Append",id:"6-sftp-data-append",level:3},{value:"7. SFTP List",id:"7-sftp-list",level:3},{value:"8. SFTP Exists",id:"8-sftp-exists",level:3},{value:"9. SFTP Chmod",id:"9-sftp-chmod",level:3},{value:"Sample Experience",id:"sample-experience",level:2}],u={toc:d};function c(t){var e=t.components,a=(0,n.Z)(t,i);return(0,l.kt)("wrapper",(0,r.Z)({},u,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"scope-of-integration"},"Scope of Integration"),(0,l.kt)("p",null,"Yellow.ai Integration with SFTP allows you to seamlessly connect your remote server with the yellow.ai platform. Using this integration, one can get remote files, make a directory, delete directory, upload files to remote server, check if file exists or not."),(0,l.kt)("h1",{id:"use-cases"},"Use-cases"),(0,l.kt)("p",null,"Following are the use-cases which are currently accommodated in the Integration:"),(0,l.kt)("h3",{id:"1-sftp-file-transfer"},"1. SFTP File Transfer"),(0,l.kt)("p",null,"  From this method you can easily upload files to a remote server."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fileCdnUrl*"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://cdn.pixabay.com/photo/2017/01/03/02/07/vine-1948358__340.png"},"https://cdn.pixabay.com/photo/2017/01/03/02/07/vine-1948358__340.png")),(0,l.kt)("td",{parentName:"tr",align:null},"Data source for data to copy to the remote server.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteFilePath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/uploads/directoryPath/demo.png"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to the remote file to be created on the server with file name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"appendTimeInfilePath*"),(0,l.kt)("td",{parentName:"tr",align:null},"True or false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true then It will append timestamp in file name otherwise same name from remote file path.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recursive"),(0,l.kt)("td",{parentName:"tr",align:null},"true/false"),(0,l.kt)("td",{parentName:"tr",align:null},"If the recursive flag is set to true, the method will create any directories in the path which do not already exist. Recursive flag defaults to false")))),(0,l.kt)("h3",{id:"2-sftp-get-file"},"2. SFTP Get File"),(0,l.kt)("p",null,"Retrieve a file from a remote SFTP server"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteFilePath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/Directory/filename.ext"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to the remote file to download")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"secureupload"),(0,l.kt)("td",{parentName:"tr",align:null},"true/false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true then It will give minio directory path otherwise it will give CDN url of files")))),(0,l.kt)("h3",{id:"3-sftp-make-directory"},"3. SFTP Make Directory"),(0,l.kt)("p",null,"Create a new directory. If the recursive flag is set to true, the method will create any directories in the path which do not already exist. Recursive flag defaults to false."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteDirPath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/DirectoryPath"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to directory with new dir name")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recursive"),(0,l.kt)("td",{parentName:"tr",align:null},"true/false"),(0,l.kt)("td",{parentName:"tr",align:null},"If true then the method will create any directories in the path which do not already exist")))),(0,l.kt)("h3",{id:"4-sftp-delete-directory"},"4. SFTP Delete Directory"),(0,l.kt)("p",null,"Remove a directory. If removing a directory and recursive flag is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the specified directory and all sub-directories and files will be deleted. If set to false and the directory has sub-directories or files, the action will fail. "),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteDirPath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/DirectoryPath"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to directory")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"recursive"),(0,l.kt)("td",{parentName:"tr",align:null},"true/false"),(0,l.kt)("td",{parentName:"tr",align:null},"recursive flag is set to true, the specified directory and all sub-directories and files will be deleted.")))),(0,l.kt)("h3",{id:"5-sftp-delete-files"},"5. SFTP Delete Files"),(0,l.kt)("p",null,"Delete a file on the remote server."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remotefilePath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/DirectoryPath/filename.txt"),(0,l.kt)("td",{parentName:"tr",align:null},"string. Path to remote file to be deleted.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"noErrorOk*"),(0,l.kt)("td",{parentName:"tr",align:null},"true/false"),(0,l.kt)("td",{parentName:"tr",align:null},"boolean. If true, no error is raised when you try to delete a non-existent file. Default is false.")))),(0,l.kt)("h3",{id:"6-sftp-data-append"},"6. SFTP Data Append"),(0,l.kt)("p",null,"Append the ",(0,l.kt)("inlineCode",{parentName:"p"},"input")," data to an existing remote file. There is no integrity checking performed apart from normal writeStream checks. This function simply opens a writeStream on the remote file in append mode and writes the data passed in to the file."),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"}," Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"fileCdnUrl*"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://www.w3.org/TR/PNG/iso_8859-1.txt"},"https://www.w3.org/TR/PNG/iso_8859-1.txt")),(0,l.kt)("td",{parentName:"tr",align:null},"CDN url for Data to append to remote file")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteFilePath*"),(0,l.kt)("td",{parentName:"tr",align:null},"/DirectoryPath/filename.txt"),(0,l.kt)("td",{parentName:"tr",align:null},"Path to remote file if files do not exist then It will auto create.")))),(0,l.kt)("h3",{id:"7-sftp-list"},"7. SFTP List"),(0,l.kt)("p",null," Retrieves a directory listing"),(0,l.kt)("p",null,(0,l.kt)("em",{parentName:"p"},"Node Input Params:-"),"                        "),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample Input"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"remoteDir*"),(0,l.kt)("td",{parentName:"tr",align:null},"/DirectoryPath"),(0,l.kt)("td",{parentName:"tr",align:null},"remote directory path")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"pattern"),(0,l.kt)("td",{parentName:"tr",align:null},"*"),(0,l.kt)("td",{parentName:"tr",align:null},"{string")))),(0,l.kt)("h3",{id:"8-sftp-exists"},"8. SFTP Exists"),(0,l.kt)("p",null," Tests to see if a remote file or directory exists. Returns type of remote object if it exists or false if it does not"),(0,l.kt)("h3",{id:"9-sftp-chmod"},"9. SFTP Chmod"),(0,l.kt)("p",null,"Change the mode (read, write or execute permissions) of a remote file or directory."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"remotePath: string. Path to the remote file or directory"),(0,l.kt)("li",{parentName:"ul"},"newmode: octal. New mode to set for the remote file or directory")),(0,l.kt)("h1",{id:"configuration"},"Configuration"),(0,l.kt)("p",null,"Configuring the integration with SFTP is straightforward. Follow the steps defined below to start integrating:"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"To integrate SFTP with your bot on the platform:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Go to Integration section"),(0,l.kt)("li",{parentName:"ol"},"In Integration click on the connect for the SFTP."),(0,l.kt)("li",{parentName:"ol"},"Enter Host, Port, username, Password.")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://i.imgur.com/xepX9Ka.png",alt:"alt_text",title:"image_tooltip"})),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Click on Save")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Once the integration is done successfully, You can find an Integration option available in addition to the existing nodes.")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("p",{parentName:"li"},"Store SFTP response in Object type variable in action-node."))),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://i.imgur.com/KCWAcMf.png",alt:null})),(0,l.kt)("p",null,"Following the above steps will connect your SFTP remote server  with the yellow.ai platform."),(0,l.kt)("h1",{id:"references"},(0,l.kt)("strong",{parentName:"h1"},"References:")),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/ssh2-sftp-client"},"https://www.npmjs.com/package/ssh2-sftp-client")),(0,l.kt)("li",{parentName:"ol"},(0,l.kt)("a",{parentName:"li",href:"https://www.filestash.app/sftp-browser.html"},"https://www.filestash.app/sftp-browser.html"))),(0,l.kt)("h2",{id:"sample-experience"},"Sample Experience"),(0,l.kt)("p",null,"Below is a video that depicts how this integration works."))}c.isMDXComponent=!0}}]);