"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[9987],{3905:function(t,e,a){a.d(e,{Zo:function(){return m},kt:function(){return k}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function s(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var o=n.createContext({}),p=function(t){var e=n.useContext(o),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},m=function(t){var e=p(t.components);return n.createElement(o.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,o=t.parentName,m=s(t,["components","mdxType","originalType","parentName"]),u=p(a),c=r,k=u["".concat(o,".").concat(c)]||u[c]||d[c]||l;return a?n.createElement(k,i(i({ref:e},m),{},{components:a})):n.createElement(k,i({ref:e},m))}));function k(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=c;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=t,s[u]="string"==typeof t?t:r,i[1]=s;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},30134:function(t,e,a){a.r(e),a.d(e,{assets:function(){return m},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return u}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=["components"],s={title:"Live Chat Integration on app.yellow.ai",sidebar_label:"Live Chat"},o=void 0,p={unversionedId:"platform_concepts/appConfiguration/livechat-integration",id:"platform_concepts/appConfiguration/livechat-integration",title:"Live Chat Integration on app.yellow.ai",description:"This integration will allow the customers who are using bots on app.yellow.ai to use the updated live chat integration on cloud.yellow.ai.",source:"@site/docs/platform_concepts/appConfiguration/livechat-integration.md",sourceDirName:"platform_concepts/appConfiguration",slug:"/platform_concepts/appConfiguration/livechat-integration",permalink:"/docs/platform_concepts/appConfiguration/livechat-integration",draft:!1,tags:[],version:"current",frontMatter:{title:"Live Chat Integration on app.yellow.ai",sidebar_label:"Live Chat"},sidebar:"platform_concepts",previous:{title:"LeadSquared Whatsapp Connector",permalink:"/docs/platform_concepts/appConfiguration/leadSquared-wa-connector"},next:{title:"Locobuzz Live Chat",permalink:"/docs/platform_concepts/appConfiguration/locobuzz-livechat"}},m={},u=[{value:"1. Use cases",id:"1-use-cases",level:2},{value:"1.1 Amazon connect live agent",id:"11-amazon-connect-live-agent",level:3},{value:"1.2 Avaya Live Agent",id:"12-avaya-live-agent",level:3},{value:"1.3 Custom Live Agent",id:"13-custom-live-agent",level:3},{value:"1.4 Freshchat Live Agent",id:"14-freshchat-live-agent",level:3},{value:"1.5 Kapture CRM Live Agent",id:"15-kapture-crm-live-agent",level:3},{value:"1.6 Locobuzz Live Agent",id:"16-locobuzz-live-agent",level:3},{value:"1.7 Genesys Live Agent",id:"17-genesys-live-agent",level:3},{value:"1.8 Genesys Cloud Live Agent",id:"18-genesys-cloud-live-agent",level:3},{value:"1.9 Intercom Live Agent",id:"19-intercom-live-agent",level:3},{value:"1.10 Nice Incontact Live Agent",id:"110-nice-incontact-live-agent",level:3},{value:"1.11 Talishma Live Agent",id:"111-talishma-live-agent",level:3},{value:"2. Configuration",id:"2-configuration",level:2}],d={toc:u};function c(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This integration will allow the customers who are using bots on app.yellow.ai to use the updated live chat integration on cloud.yellow.ai. "),(0,l.kt)("h2",{id:"1-use-cases"},"1. Use cases"),(0,l.kt)("p",null,"The following are the use-cases of this integration:"),(0,l.kt)("h3",{id:"11-amazon-connect-live-agent"},"1.1 Amazon connect live agent"),(0,l.kt)("p",null,"To connect with an Amazon Connect Live Agent, use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n    app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n           amazonConnectLiveAgentCustomFields: {customFields: {test: \u201cyes\u201d}}\n    }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n    }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n    });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"amazonConnectLiveAgentCustomFields"),(0,l.kt)("td",{parentName:"tr",align:null},"{customFields: {test: \u201cyes\u201d}}"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom key: value pairs associated with the end user required to raise a ticket. You need to pass the value of this key as {}, in case no key: pairs are required.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the amazon connect create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("p",null," :::note\napiresponse represents the raw response from the amazon connect create ticket API\n::: "),(0,l.kt)("h3",{id:"12-avaya-live-agent"},"1.2 Avaya Live Agent"),(0,l.kt)("p",null,"To connect with an Avaya Live Agent, use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               }\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "message": "Agent is available and ticket is assigned to the agent",\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the avaya create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "Agent availability is false and hence not assigned to any agent.",\n   "ticketInfo": "{{apiresponse}}"\n}\n\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the avaya create ticket API")),(0,l.kt)("h3",{id:"13-custom-live-agent"},"1.3 Custom Live Agent"),(0,l.kt)("p",null,"To connect with a Custom Live Agent, use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n              category: "Sales",\n              priority: "MEDIUM",\n              customLiveAgentCustomFields: {customFields: {test: \u201cyes\u201d}}\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"category"),(0,l.kt)("td",{parentName:"tr",align:null},"Sales"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Category under which the ticket will be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"priority"),(0,l.kt)("td",{parentName:"tr",align:null},"MEDIUM"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Priority of the ticket to be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"customLiveAgentCustomFields"),(0,l.kt)("td",{parentName:"tr",align:null},"{customFields: {test: \u201cyes\u201d}}"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom key:value pairs associated with the end user required to raise a ticket. You need to pass the value of this key as {}, in case no key:pairs are required.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the custom live agent create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "Agent is unavailable to chat with the end user, hence transferring the control back to the bot.",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{title:"apiresponse represents the raw response from the custom live agent create ticket API",type:"note"}),(0,l.kt)("h3",{id:"14-freshchat-live-agent"},"1.4 Freshchat Live Agent"),(0,l.kt)("p",null,"  To connect to a Freshchat Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    app.raiseTicketForThirdPartyLiveChat({\n         issue: "Test Issue",\n        contact: {\n             phone: "9876543210",\n             name: "Raj",\n             email: "Test@email.com"\n             },\n             assignedGroupId: "test-group",\n             freshChatUserId: "3554-cbcbc-dchchc",\n             freshChatUniqueIdentifier: "testInfo"\n    }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n    }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n    });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"assignedGroupId"),(0,l.kt)("td",{parentName:"tr",align:null},"Sales"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Category under which the ticket will be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"priority"),(0,l.kt)("td",{parentName:"tr",align:null},"3554-cbcbc-dchchc"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Freshchat groupId to which the ticket needs to be assigned. The default value that needs to be passed for this is \u201c\u201d.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"freshChatUserId"),(0,l.kt)("td",{parentName:"tr",align:null},"test-group"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Freshchat userId of the user. This is passed if the same ticket needs to be re-opened for the same user.The default value that needs to be passed for this is \u201c\u201d.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"freshChatUniqueIdentifier"),(0,l.kt)("td",{parentName:"tr",align:null},"testInfo"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"A unique identifier that if passed will reflect as referenceId in the freshchat agent portal. The default value that needs to be passed for this is \u201c\u201d.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the freshchat live agent create ticket API")),(0,l.kt)("p",null,"Sample response in case of failure:-"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "Agent is unavailable to chat with the end user, hence transferring the control back to the bot.",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("p",null,"::: note\napiresponse represents the raw response from the freshchat live agent create ticket API\n:::"),(0,l.kt)("h3",{id:"15-kapture-crm-live-agent"},"1.5 Kapture CRM Live Agent"),(0,l.kt)("p",null,"  To connect to a Kapture CRM Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               }\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "assignedTo": true,\n   "success": true,\n   "message": "Agent is available and ticket is assigned to the agent",\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the kapture crm create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "Agent availability is false and hence not assigned to any agent.",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the kapture crm create ticket API")),(0,l.kt)("h3",{id:"16-locobuzz-live-agent"},"1.6 Locobuzz Live Agent"),(0,l.kt)("p",null,"  To connect to a Locobuzz Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n              category: "Sales",\n              priority: "MEDIUM",\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"category"),(0,l.kt)("td",{parentName:"tr",align:null},"Sales"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Category under which the ticket will be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"priority"),(0,l.kt)("td",{parentName:"tr",align:null},"MEDIUM"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Priority of the ticket to be created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sentiment"),(0,l.kt)("td",{parentName:"tr",align:null},"Happy"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"User sentiment. Default value to be passed for this key is \u201c\u201d.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the locobuzz live agent create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "Agent is unavailable to chat with the end user, hence transferring the control back to the bot.",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the locobuzz live agent create ticket API")),(0,l.kt)("h3",{id:"17-genesys-live-agent"},"1.7 Genesys Live Agent"),(0,l.kt)("p",null,"  To connect to a Genesys Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n           genesysCustomFields: {customFields: {test: \u201cyes\u201d}}\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"genesysCustomFields"),(0,l.kt)("td",{parentName:"tr",align:null},"{customFields: {test: \u201cyes\u201d}}"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom key:value pairs associated to the end user required to raise a ticket. You need to pass the value of this key as {}, in case no key:pairs are required.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the genesys create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from genesys create ticket API ")),(0,l.kt)("h3",{id:"18-genesys-cloud-live-agent"},"1.8 Genesys Cloud Live Agent"),(0,l.kt)("p",null,"  To connect to a Genesys Cloud Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n           genesysCloudCustomFields: {customFields: {test: \u201cyes\u201d}}\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"genesysCloudCustomFields"),(0,l.kt)("td",{parentName:"tr",align:null},"{customFields: {test: \u201cyes\u201d}}"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom key:value pairs associated to the end user required to raise a ticket. You need to pass the value of this key as {}, in case no key:pairs are required.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the genesys cloud create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from genesys cloud create ticket API ")),(0,l.kt)("h3",{id:"19-intercom-live-agent"},"1.9 Intercom Live Agent"),(0,l.kt)("p",null,"  To connect to an Intercom Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               },\n           intercomLiveAgentCustomFields: {customFields: {test: \u201cyes\u201d}}\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"intercomLiveAgentCustomFields"),(0,l.kt)("td",{parentName:"tr",align:null},"{customFields: {test: \u201cyes\u201d}}"),(0,l.kt)("td",{parentName:"tr",align:null},"Object"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom key:value pairs associated to the end user required to raise a ticket. You need to pass the value of this key as {}, in case no key:pairs are required.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'\n{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the intercom create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the intercom create ticket API")),(0,l.kt)("h3",{id:"110-nice-incontact-live-agent"},"1.10 Nice Incontact Live Agent"),(0,l.kt)("p",null,"  To connect to a Nice Incontact Live Agent, please use this code-snippet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               }\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the nice-incontact create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{title:"apiresponse represents the raw response from the nice-incontact create ticket API",type:"note"}),(0,l.kt)("h3",{id:"111-talishma-live-agent"},"1.11 Talishma Live Agent"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'      To connect to a Talishma Live Agent, please use this code-snippet\n\n      app.raiseTicketForThirdPartyLiveChat({\n             issue: "Test Issue",\n             contact: {\n                 phone: "9876543210",\n                 name: "Raj",\n                 email: "Test@email.com"\n               }\n   }).then((ticketData) => {\n       app.log(ticketData, "ticketData");\n       // Display appropriate message based on the ticketData\n   }).catch((error) => {\n       app.log(error, \'error\');\n       //Error handler\n   });\n')),(0,l.kt)("p",null,"This table consists of sample values, data types and descriptions for all the fields in the image."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field name"),(0,l.kt)("th",{parentName:"tr",align:null},"Sample value"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"issue"),(0,l.kt)("td",{parentName:"tr",align:null},"Test description"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"The subject/topic/reason why the ticket is created.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"phone"),(0,l.kt)("td",{parentName:"tr",align:null},"9876543210"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"email"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"mailto:test@gmail.com"},"test@gmail.com")),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Email address of the end user.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"Rajesh"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the end user.")))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of success")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "assignedTo": true,\n   "success": true,\n   "status": "ASSIGNED",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the talishma create ticket API")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Sample response in case of failure")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n   "success": false,\n   "assignedTo": false,\n   "agentNotAvailable": true,\n   "message": "TicketId is not created and transferring the control back to the bot",\n   "ticketInfo": "{{apiresponse}}"\n}\n')),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"apiresponse represents the raw response from the talishma create ticket API")),(0,l.kt)("h2",{id:"2-configuration"},"2. Configuration"),(0,l.kt)("p",null,"You can configure any of the above mentioned live agent integration(s) by following these steps:-"),(0,l.kt)("p",null,"To enable the integration in the yellow.ai Integrations Module,"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Login to app.yellow.ai, search for your bot in the ",(0,l.kt)("strong",{parentName:"li"},"Search Projects")," section and then click the bot.")),(0,l.kt)("img",{src:"https://i.imgur.com/LfusT2x.png",alt:"drawing",width:"100%"}),(0,l.kt)("ol",{start:2},(0,l.kt)("li",{parentName:"ol"},"Click the ",(0,l.kt)("strong",{parentName:"li"},"Growth icon")," on the left navigation bar.")),(0,l.kt)("img",{src:"https://i.imgur.com/f98YAw0.png",alt:"drawing",width:"100%"}),(0,l.kt)("ol",{start:3},(0,l.kt)("li",{parentName:"ol"},"Click  ",(0,l.kt)("strong",{parentName:"li"},"Data Explorer"),". You will be redirected to the cloud.yellow.ai\u2019s UI. ")),(0,l.kt)("img",{src:"https://i.imgur.com/brA6IQ6.png",alt:"drawing",width:"100%"}),(0,l.kt)("ol",{start:4},(0,l.kt)("li",{parentName:"ol"},"On the top left corner, click the drop-down and choose ",(0,l.kt)("strong",{parentName:"li"},"Integrations"),".")),(0,l.kt)("img",{src:"https://i.imgur.com/X1vVHwH.png",alt:"drawing",width:"100%"}),(0,l.kt)("ol",{start:5},(0,l.kt)("li",{parentName:"ol"},"Configure the required live chat integration")),(0,l.kt)("img",{src:"https://i.imgur.com/Fs2ANIf.png",alt:"drawing",width:"100%"}),(0,l.kt)("ol",{start:6},(0,l.kt)("li",{parentName:"ol"},".After entering the required values, click ",(0,l.kt)("strong",{parentName:"li"},"Connect")," and the integration will get enabled on yellow.ai.")))}c.isMDXComponent=!0}}]);