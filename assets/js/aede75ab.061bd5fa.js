"use strict";(self.webpackChunkbenthos=self.webpackChunkbenthos||[]).push([[4781],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,k=u["".concat(s,".").concat(g)]||u[g]||m[g]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=g;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},12576:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(87462),r=n(63366),l=(n(67294),n(3905)),i=["components"],o={title:"Custom Live Agent API Specification",sidebar_label:"Custom Live Agent"},s="Custom Live Agent API Specification",p={unversionedId:"platform_concepts/appConfiguration/customliveagent",id:"platform_concepts/appConfiguration/customliveagent",title:"Custom Live Agent API Specification",description:"This document elaborates on the integration approach for a custom live agent to integrate with Yellow. The following are the major use cases covered in this document:",source:"@site/docs/platform_concepts/appConfiguration/customliveagent.md",sourceDirName:"platform_concepts/appConfiguration",slug:"/platform_concepts/appConfiguration/customliveagent",permalink:"/docs/platform_concepts/appConfiguration/customliveagent",draft:!1,tags:[],version:"current",frontMatter:{title:"Custom Live Agent API Specification",sidebar_label:"Custom Live Agent"},sidebar:"platform_concepts",previous:{title:"CleverTap",permalink:"/docs/platform_concepts/appConfiguration/clevertap"},next:{title:"EPIC FHIR",permalink:"/docs/platform_concepts/appConfiguration/epic-fhir"}},d={},u=[{value:"1. Design principles",id:"1-design-principles",level:2},{value:"1.1 Workflow Diagram",id:"11-workflow-diagram",level:3},{value:"2. Business Use Cases",id:"2-business-use-cases",level:2},{value:"2.1 Initiate Conversations",id:"21-initiate-conversations",level:3},{value:"2.2 Enable conversation",id:"22-enable-conversation",level:3},{value:"3. API Specification",id:"3-api-specification",level:2},{value:"3.1 Create Ticket",id:"31-create-ticket",level:3},{value:"Body Parameters",id:"body-parameters",level:4},{value:"CURL",id:"curl",level:4},{value:"Response",id:"response",level:4},{value:"3.2 Send Message to Agent",id:"32-send-message-to-agent",level:3},{value:"Body Parameters",id:"body-parameters-1",level:4},{value:"CURL",id:"curl-1",level:4},{value:"Response",id:"response-1",level:4},{value:"3.3 Send User Media to Agent",id:"33-send-user-media-to-agent",level:3},{value:"Body Parameters",id:"body-parameters-2",level:4},{value:"CURL",id:"curl-2",level:4},{value:"Response",id:"response-2",level:4},{value:"4. Webhook",id:"4-webhook",level:2},{value:"4.1 Text message sent by the agent",id:"41-text-message-sent-by-the-agent",level:3},{value:"4.2 Media message sent by the Agent",id:"42-media-message-sent-by-the-agent",level:3},{value:"4.3 Ticket assignment to the agent",id:"43-ticket-assignment-to-the-agent",level:3},{value:"4.4 Closure of ticket",id:"44-closure-of-ticket",level:3},{value:"4.5 Agent Logout during the conversation (After Working hours)",id:"45-agent-logout-during-the-conversation-after-working-hours",level:3},{value:"4.6. Agent Logged In but not active in the conversation",id:"46-agent-logged-in-but-not-active-in-the-conversation",level:3}],m={toc:u};function g(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"custom-live-agent-api-specification"},"Custom Live Agent API Specification"),(0,l.kt)("p",null,"This document elaborates on the integration approach for a custom live agent to integrate with Yellow. The following are the major use cases covered in this document: "),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"End Customer wants to talk to an agent"),(0,l.kt)("li",{parentName:"ol"},"End Customer sends Text/Image/Video/PDF ( or other media) to the Agent"),(0,l.kt)("li",{parentName:"ol"},"The interaction details updated to end customer through ticket ID & details"),(0,l.kt)("li",{parentName:"ol"},"Additional information about Agent Availability ( Queue Status, Typing status etc)"),(0,l.kt)("li",{parentName:"ol"},"Agent connection established"),(0,l.kt)("li",{parentName:"ol"},"Two-way communication between the end customer and agent"),(0,l.kt)("li",{parentName:"ol"},"Closure of the ticket")),(0,l.kt)("h2",{id:"1-design-principles"},"1. Design principles"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"The integration approach is defined to be channel agnostic, the 3rd party system should consider Yellow as the channel and Yellow will ensure that the end customer connects with an agent from any channel ( Web, WhatsApp etc.) "),(0,l.kt)("li",{parentName:"ol"},"Details of the end customer\u2019s channel will be transferred to the 3rd party system for proper reconciliation. "),(0,l.kt)("li",{parentName:"ol"},"The receiving system should be able to define custom parameters for their consumption and as needed for the business use case. ")),(0,l.kt)("h3",{id:"11-workflow-diagram"},"1.1 Workflow Diagram"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://i.imgur.com/FCyWNDp.png",alt:null})),(0,l.kt)("h2",{id:"2-business-use-cases"},"2. Business Use Cases"),(0,l.kt)("h3",{id:"21-initiate-conversations"},"2.1 Initiate Conversations"),(0,l.kt)("p",null,"An end customer who uses the bot, will encounter the following action while connecting with a live agent"),(0,l.kt)("ol",null,(0,l.kt)("li",{parentName:"ol"},"Bot gives an option to connect to a Live Agent."),(0,l.kt)("li",{parentName:"ol"},"Bot goes into a paused state once the agent gets connected."),(0,l.kt)("li",{parentName:"ol"},"When the bot is in paused state, the 2-way communication between the agent and end customer takes place. "),(0,l.kt)("li",{parentName:"ol"},"Once the agent ends the conversation, the bot takes over. ")),(0,l.kt)("p",null,"The following are the business use cases that should be supported by the third-party tool to enable this conversation:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"#"),(0,l.kt)("th",{parentName:"tr",align:null},"Use-case"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Send Message {text + media}"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Chat history will be present in the first message as a link")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Send typing event"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Create Ticket"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Response should contain ticketIDScenarios ( Ticket Lifecycle)  ",(0,l.kt)("br",null),"1. Request is in queue ",(0,l.kt)("br",null),"2. Ticket is created & OPEN ",(0,l.kt)("br",null),"3. Ticket is created & ASSIGNED",(0,l.kt)("br",null))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"User details {Channel ID, Sender ID, Unique ID}"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Transfer to a particular group"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null},"Department wise, as per business need")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Ability to pass custom parameter"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Is User Active"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"8"),(0,l.kt)("td",{parentName:"tr",align:null},"Custom Parameters"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Ability to pass custom parameters as per business need")))),(0,l.kt)("h3",{id:"22-enable-conversation"},"2.2 Enable conversation"),(0,l.kt)("p",null,"The following are the use cases & details required for a two-way communication between a third party system & Yellow."),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"For this, Yellow\u2019s webhook must be configured at third party systems end.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"S.no"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"),(0,l.kt)("th",{parentName:"tr",align:null},"Remarks"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"Event name/code specification"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"Agent message {text + media}"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"Agent assigned{along with agent details}"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Agent details like agent name, department should be received")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"4"),(0,l.kt)("td",{parentName:"tr",align:null},"Queue Positioning"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"5"),(0,l.kt)("td",{parentName:"tr",align:null},"Closed ticket"),(0,l.kt)("td",{parentName:"tr",align:null},"Yes"),(0,l.kt)("td",{parentName:"tr",align:null},"Closed ticket event")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"6"),(0,l.kt)("td",{parentName:"tr",align:null},"Updation of any ticket detail (e.g. transferred to another agent)"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"7"),(0,l.kt)("td",{parentName:"tr",align:null},"Is Agent active?"),(0,l.kt)("td",{parentName:"tr",align:null},"No"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"3-api-specification"},"3. API Specification"),(0,l.kt)("p",null,"The header that will be common across all the APIs which the third party needs to create is an auth token:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Authorization: {{token}}\nContent-type: application/json\n")),(0,l.kt)("h3",{id:"31-create-ticket"},"3.1 Create Ticket"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},"{{domainName}}/createTicket/{{companyName}}"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"METHOD"),(0,l.kt)("td",{parentName:"tr",align:null},"POST")))),(0,l.kt)("h4",{id:"body-parameters"},"Body Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Mandatory"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"senderId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of the user generated by Yellow.AI"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of every sent message"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Channel from where the message can be sent"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conversationId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of this conversation"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the user/customer"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userMobile"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Mobile number of the user, accepts 10 digit mobile number"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userEmail"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Email Id of the user"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conversationHistory"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"The URL of the conversation prior to connecting to the agent"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ticketPriority"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Priority of the ticket, possible values low/medium/high"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ticketCategory"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Category to which a ticket may belong"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ticketGroupId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"If we want the ticket to get assigned to a particular group of agents, we need to add this"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"customFields"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"Use this if any custom key value pairs need to be passed. The data type of the values can be string/number/boolean/object"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conversationHistoryJSON"),(0,l.kt)("td",{parentName:"tr",align:null},"array"),(0,l.kt)("td",{parentName:"tr",align:null},"The JSON of the conversation prior to connecting to the agent"),(0,l.kt)("td",{parentName:"tr",align:null},"N")))),(0,l.kt)("h4",{id:"curl"},"CURL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'curl --location --request POST \'{{domainName}}createTicket/{{companyName}}\' \\\n--header \'Authorization: Bearer {{token}}\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "body": {\n        "user": {\n            "userName": "Shubh",\n            "userMobile": "99999999",\n            "senderId": "11111111211111",\n            "userEmail": "test@gmail.com"\n        },\n        "ticket": {\n            "conversationHistory": "https://google.com",\n    "source": "web",\n            "ticketPriority": "medium",\n            "ticketCategory": "sales",\n            "conversationId": "efrfrfrfr",\n            "ticketGroupId":  "14343", \n            "customFields": {}\n           }\n        }\n}\'\n\n\n')),(0,l.kt)("p",null,"Click ",(0,l.kt)("a",{parentName:"p",href:"http://localtest.locobuzz.com/Webhook/RoyalEnfieldChatbot"},"here")," for {{domainName}}createTicket"),(0,l.kt)("h4",{id:"response"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"{\nstatus: success/failure\ndata: {ticketId: 25633, isAgentAvailable: true/false, isQueued: true/false }\nmessage: <Description of Error/ Success Message>\n} \n \n")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"If queuing is enabled, the createTicket API should respond isAgentAvailable flag as false and isQueued flag as true.")),(0,l.kt)("h3",{id:"32-send-message-to-agent"},"3.2 Send Message to Agent"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},"{{domainName}}sendMessage/{{companyName}}"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"METHOD"),(0,l.kt)("td",{parentName:"tr",align:null},"POST")))),(0,l.kt)("h4",{id:"body-parameters-1"},"Body Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Mandatory"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"senderId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of the user generated by Yellow.ai"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the user"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userEmail"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Email Id of the user"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"message"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Message sent by the user"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of every sent message"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ticketId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Generated ticketId from API 1"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Channel in which the message can be sent"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conversationId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of this conversation"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageType"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of the message sent,the value will be ",(0,l.kt)("strong",{parentName:"td"},"text")),(0,l.kt)("td",{parentName:"tr",align:null},"Y")))),(0,l.kt)("h4",{id:"curl-1"},"CURL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --location --request POST '{{domainName}}sendMessage/{{companyName}}' \\\n--header 'Authorization: Bearer {{token}}' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"body\": {\n        \u201cuser\u201d:{\n         \u201csenderId\u201d: \u201c11111\u201d,\n         \u201cuserName\u201d: \u201cMahesh\u201d,\n        \u201cuserEmail\u201d: \u201ctest@gmail.com\u201d\n         }\n        \"ticket\": {\n           \u201cmessageType\u201d: \u201ctext\u201d,\n            \u201cmessage\u201d: \u201chello\u201d\n            \u201cmessageId\u201d: \u201cefefe-eefe-fefef-feefefe\u201d,\n            \u201cticketId\u201d: \u201c275333\u201d,\n             \u201csource\u201d: \u201cweb\u201d,\n            \u201cconversationId\u201d : \u201cyguyegdee\u201d\n           }\n        }\n}'\n\n")),(0,l.kt)("p",null,"Refer ",(0,l.kt)("a",{parentName:"p",href:"http://localtest.locobuzz.com/Webhook/RoyalEnfieldChatbot"},"here")," for {{domainName}}sendMessage/"),(0,l.kt)("h4",{id:"response-1"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"{\n\u201cstatus\u201d: \u201csuccess/failure\u201d\n\u201cdata\u201d: {ticketId: 25633}\n\u201cmessage\u201d: \u201c<Description of Error/ Success Message>\u201d\n}\n \n\n")),(0,l.kt)("h3",{id:"33-send-user-media-to-agent"},"3.3 Send User Media to Agent"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},"{{domainName}}sendMedia/{{companyName}}"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"METHOD"),(0,l.kt)("td",{parentName:"tr",align:null},"POST")))),(0,l.kt)("h4",{id:"body-parameters-2"},"Body Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Mandatory"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"senderId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of the user generated by Yellow.AI"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userName"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the user"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"userEmail"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Email Id of the user"),(0,l.kt)("td",{parentName:"tr",align:null},"N")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"mediaJson"),(0,l.kt)("td",{parentName:"tr",align:null},"object"),(0,l.kt)("td",{parentName:"tr",align:null},"Has two properties. The first property is \u201ctype\u201d, and its possible values are image/video/file. The second property is \u201curl\u201d which will have the url of the media"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of every sent message"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ticketId"),(0,l.kt)("td",{parentName:"tr",align:null},"number"),(0,l.kt)("td",{parentName:"tr",align:null},"Generated ticketId from API 1"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"source"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Channel in which the message is sent"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"conversationId"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Unique identifier of this conversation"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"messageType"),(0,l.kt)("td",{parentName:"tr",align:null},"string"),(0,l.kt)("td",{parentName:"tr",align:null},"Type of the message sent, the value will be media"),(0,l.kt)("td",{parentName:"tr",align:null},"Y")))),(0,l.kt)("h4",{id:"curl-2"},"CURL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"curl --location --request POST '{{domainName}}sendMedia/{{companyName}}' \\\n--header 'Authorization: Bearer {{token}}' \\\n--header 'Content-Type: application/json' \\\n--data-raw '{\n    \"body\": {\n        \u201cuser\u201d:{\n         \u201csenderId\u201d: \u201c11111\u201d,\n         \u201cuserName\u201d: \u201cMahesh\u201d,\n        \u201cuserEmail\u201d: \u201ctest@gmail.com\u201d\n         }\n        \"ticket\": {\n           \u201cmessageType\u201d: \u201cmedia\u201d,\n            \u201cmediaJson\u201d: {\u201ctype\u201d:\u201dimage/video/file\u201d,\u201curl\u201d: \u201chttps://image.com\u201d},\n            \u201cmessageId\u201d: \u201cefefe-eefe-fefef-feefefe\u201d,\n            \u201cticketId\u201d: \u201c275333\u201d,\n             \u201csource\u201d: \u201cweb\u201d,\n            \u201cconversationId\u201d : \u201cyguyegdee\u201d\n           }\n        }\n}'\n\n")),(0,l.kt)("p",null,"Click ",(0,l.kt)("a",{parentName:"p",href:"http://localtest.locobuzz.com/Webhook/RoyalEnfieldChatbot"},"here")," for {{domainName}}sendMedia/."),(0,l.kt)("h4",{id:"response-2"},"Response"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"{\n\u201cstatus\u201d: \u201csuccess/failure\u201d,\n\u201cdata\u201d: {ticketId: 25633}\n\u201cmessage\u201d: \u201c<Description of Error/ Success Message>\u201d\n}\n\n")),(0,l.kt)("h2",{id:"4-webhook"},"4. Webhook"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"URL"),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"th",href:"https://cloud.yellow.ai/integrations/genericIntegration/custom-live-agent"},"https://cloud.yellow.ai/integrations/genericIntegration/custom-live-agent")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Method"),(0,l.kt)("td",{parentName:"tr",align:null},"POST")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"x-auth-token"),(0,l.kt)("td",{parentName:"tr",align:null},"Will be provided by yellow")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Response Code"),(0,l.kt)("td",{parentName:"tr",align:null},"200")))),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"}," You need to append the region of your bot to the domain of the webhook url. r1/r2/r3/r4/r5 are the regions of your bot, you can also refer the following list for the same."),(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"r1 = MEA"),(0,l.kt)("li",{parentName:"ul"},"r2 = Jakarta"),(0,l.kt)("li",{parentName:"ul"},"r4= USA"),(0,l.kt)("li",{parentName:"ul"},"r5 = Europe"),(0,l.kt)("li",{parentName:"ul"},"r3 = Singapore")),(0,l.kt)("p",{parentName:"admonition"},"For example, if the domain is ",(0,l.kt)("a",{parentName:"p",href:"https://cloud.yellow.ai"},"https://cloud.yellow.ai"),", you need to change it to ",(0,l.kt)("a",{parentName:"p",href:"https://r1.cloud.yellow.ai"},"https://r1.cloud.yellow.ai")," if the region of the bot is r1. If the bot belongs to India, you can use origin domain itself.")),(0,l.kt)("h3",{id:"41-text-message-sent-by-the-agent"},"4.1 Text message sent by the agent"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Text message sent by the agent")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "payload-received-from-agent"\n"message": {\n"type": "text\u201d,\n"payLoad": {\n"content": "Hello"\n}\n}\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n\u201cstatus\u201d: \u201csuccess\u201d,\ndata: {"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "payload-received-from-agent"\n"message": {\n"type": "text\u201d,\n"payLoad": {\n"content": "Hello"\n}\n}\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n},\nmessage: <Description of Error/ Success Message>\n}\n\n\n')),(0,l.kt)("h3",{id:"42-media-message-sent-by-the-agent"},"4.2 Media message sent by the Agent"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Media message sent by the Agent ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "payload-received-from-agent"\n"message": {\n"type": "media",\n"payLoad": {\n"content": {\u201ctype\u201d: \u201cimage/video/file\u201d, \u201cmediaUrl\u201d: \u201chttps://www.google.com\u201d}\n}\n}\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\nstatus: success\ndata: {"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "payload-received-from-agent"\n"message": {\n"type": "media\u201d,\n"payLoad": {\n"content": {\u201ctype\u201d: \u201cimage/video/file\u201d, \u201cmediaUrl\u201d: \u201chttps://www.google.com\u201d}\n}\n}\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n},\nmessage: <Description of Error/ Success Message>\n}\n\n')),(0,l.kt)("h3",{id:"43-ticket-assignment-to-the-agent"},"4.3 Ticket assignment to the agent"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Ticket assignment to the agent ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "ticket-assigned"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\nstatus: success\ndata: {"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "ticket-assigned"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\nmessage: <Description of Error/ Success Message>\n}\n\n')),(0,l.kt)("h3",{id:"44-closure-of-ticket"},"4.4 Closure of ticket"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Closure of ticket")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "ticket-closed"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454,\n"ticketResolvedTime": 4545454\n}\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\nstatus: success\ndata: {\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "ticket-closed"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454,\n"ticketResolvedTime": 4545454}\nmessage: <Description of Error/ Success Message>\n}\n\n\n')),(0,l.kt)("h3",{id:"45-agent-logout-during-the-conversation-after-working-hours"},"4.5 Agent Logout during the conversation (After Working hours)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Agent Logout during the conversation (After Working hours)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "agent-logout"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454\n}\n\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\nstatus: success\ndata: {"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "agent-logout"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454}\nmessage: <Description of Error/ Success Message>\n}\n\n')),(0,l.kt)("h3",{id:"46-agent-logged-in-but-not-active-in-the-conversation"},"4.6. Agent Logged In but not active in the conversation"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Event")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Agent Logged In but not active in the conversation ")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Payload")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "agent-inactivity"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454,\n"inactivityDuration": 120,\n"inactivityReason": "Network issue"\n}\n\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Response")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\nstatus: success/failure\ndata: {"ticketId": 354545,\n"senderId": "efrf",\n"source": "erfr4rf4"\n"event": "agent-inactivity"\n"agentName": "gefgeuf",\n"agentId": "locobuzzagentId",\n"ticketAssignedTime": 3545454,\n"inactivityDuration": 120,\n"inactivityReason": "Network issue"}\nmessage: <Description of Error/ Success Message>\n}\n\n\n')))}g.isMDXComponent=!0}}]);