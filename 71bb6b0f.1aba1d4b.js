(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{237:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),o=n(7),r=(n(0),n(411)),c=n(415),i=n(416),s={title:"broker",type:"output",status:"stable",categories:["Utility"]},b={unversionedId:"components/outputs/broker",id:"components/outputs/broker",isDocsHomePage:!1,title:"broker",description:"\x3c!--",source:"@site/docs/components/outputs/broker.md",slug:"/components/outputs/broker",permalink:"/docs/components/outputs/broker",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/outputs/broker.md",version:"current",sidebar:"docs",previous:{title:"azure_table_storage",permalink:"/docs/components/outputs/azure_table_storage"},next:{title:"cache",permalink:"/docs/components/outputs/cache"}},l=[{value:"Fields",id:"fields",children:[{value:"<code>copies</code>",id:"copies",children:[]},{value:"<code>pattern</code>",id:"pattern",children:[]},{value:"<code>max_in_flight</code>",id:"max_in_flight",children:[]},{value:"<code>outputs</code>",id:"outputs",children:[]},{value:"<code>batching</code>",id:"batching",children:[]},{value:"<code>batching.count</code>",id:"batchingcount",children:[]},{value:"<code>batching.byte_size</code>",id:"batchingbyte_size",children:[]},{value:"<code>batching.period</code>",id:"batchingperiod",children:[]},{value:"<code>batching.check</code>",id:"batchingcheck",children:[]},{value:"<code>batching.processors</code>",id:"batchingprocessors",children:[]}]},{value:"Patterns",id:"patterns",children:[{value:"<code>fan_out</code>",id:"fan_out",children:[]},{value:"<code>fan_out_sequential</code>",id:"fan_out_sequential",children:[]},{value:"<code>round_robin</code>",id:"round_robin",children:[]},{value:"<code>greedy</code>",id:"greedy",children:[]}]}],u={toc:l};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Allows you to route messages to multiple child outputs using a range of\nbrokering ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"#patterns"}),"patterns"),"."),Object(r.b)(c.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(r.b)(i.a,{value:"common",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Common config fields, showing default values\noutput:\n  broker:\n    pattern: fan_out\n    max_in_flight: 1\n    outputs: []\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n'))),Object(r.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\noutput:\n  broker:\n    copies: 1\n    pattern: fan_out\n    max_in_flight: 1\n    outputs: []\n    batching:\n      count: 0\n      byte_size: 0\n      period: ""\n      check: ""\n      processors: []\n')))),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"Processors")," can be listed to apply across\nindividual outputs or all outputs:"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"output:\n  broker:\n    pattern: fan_out\n    outputs:\n      - resource: foo\n      - resource: bar\n        # Processors only applied to messages sent to bar.\n        processors:\n          - resource: bar_processor\n\n  # Processors applied to messages sent to all brokered outputs.\n  processors:\n    - resource: general_processor\n")),Object(r.b)("h2",{id:"fields"},"Fields"),Object(r.b)("h3",{id:"copies"},Object(r.b)("inlineCode",{parentName:"h3"},"copies")),Object(r.b)("p",null,"The number of copies of each configured output to spawn."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(r.b)("h3",{id:"pattern"},Object(r.b)("inlineCode",{parentName:"h3"},"pattern")),Object(r.b)("p",null,"The brokering pattern to use."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"string"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},'"fan_out"'),Object(r.b)("br",{parentName:"p"}),"\n","Options: ",Object(r.b)("inlineCode",{parentName:"p"},"fan_out"),", ",Object(r.b)("inlineCode",{parentName:"p"},"fan_out_sequential"),", ",Object(r.b)("inlineCode",{parentName:"p"},"round_robin"),", ",Object(r.b)("inlineCode",{parentName:"p"},"greedy"),", ",Object(r.b)("inlineCode",{parentName:"p"},"try"),"."),Object(r.b)("h3",{id:"max_in_flight"},Object(r.b)("inlineCode",{parentName:"h3"},"max_in_flight")),Object(r.b)("p",null,"The maximum number of messages to dispatch at any given time. Only relevant for ",Object(r.b)("inlineCode",{parentName:"p"},"fan_out"),", ",Object(r.b)("inlineCode",{parentName:"p"},"fan_out_sequential")," brokers."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"1"),"  "),Object(r.b)("h3",{id:"outputs"},Object(r.b)("inlineCode",{parentName:"h3"},"outputs")),Object(r.b)("p",null,"A list of child outputs to broker."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("h3",{id:"batching"},Object(r.b)("inlineCode",{parentName:"h3"},"batching")),Object(r.b)("p",null,"Allows you to configure a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/batching"}),"batching policy"),"."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\nbatching:\n  byte_size: 5000\n  count: 0\n  period: 1s\n\nbatching:\n  count: 10\n  period: 1s\n\nbatching:\n  check: this.contains("END BATCH")\n  count: 0\n  period: 1m\n')),Object(r.b)("h3",{id:"batchingcount"},Object(r.b)("inlineCode",{parentName:"h3"},"batching.count")),Object(r.b)("p",null,"A number of messages at which the batch should be flushed. If ",Object(r.b)("inlineCode",{parentName:"p"},"0")," disables count based batching."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(r.b)("h3",{id:"batchingbyte_size"},Object(r.b)("inlineCode",{parentName:"h3"},"batching.byte_size")),Object(r.b)("p",null,"An amount of bytes at which the batch should be flushed. If ",Object(r.b)("inlineCode",{parentName:"p"},"0")," disables size based batching."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"number"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"0"),"  "),Object(r.b)("h3",{id:"batchingperiod"},Object(r.b)("inlineCode",{parentName:"h3"},"batching.period")),Object(r.b)("p",null,"A period in which an incomplete batch should be flushed regardless of its size."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"string"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nperiod: 1s\n\nperiod: 1m\n\nperiod: 500ms\n")),Object(r.b)("h3",{id:"batchingcheck"},Object(r.b)("inlineCode",{parentName:"h3"},"batching.check")),Object(r.b)("p",null,"A ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/guides/bloblang/about/"}),"Bloblang query")," that should return a boolean value indicating whether a message should end a batch."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"string"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncheck: this.type == "end_of_transaction"\n')),Object(r.b)("h3",{id:"batchingprocessors"},Object(r.b)("inlineCode",{parentName:"h3"},"batching.processors")),Object(r.b)("p",null,"A list of ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/processors/about"}),"processors")," to apply to a batch as it is flushed. This allows you to aggregate and archive the batch however you see fit. Please note that all resulting messages are flushed as a single batch, therefore splitting the batch into smaller batches using these processors is a no-op."),Object(r.b)("p",null,"Type: ",Object(r.b)("inlineCode",{parentName:"p"},"array"),Object(r.b)("br",{parentName:"p"}),"\n","Default: ",Object(r.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nprocessors:\n  - archive:\n      format: lines\n\nprocessors:\n  - archive:\n      format: json_array\n\nprocessors:\n  - merge_json: {}\n")),Object(r.b)("h2",{id:"patterns"},"Patterns"),Object(r.b)("p",null,"The broker pattern determines the way in which messages are allocated and can be\nchosen from the following:"),Object(r.b)("h3",{id:"fan_out"},Object(r.b)("inlineCode",{parentName:"h3"},"fan_out")),Object(r.b)("p",null,"With the fan out pattern all outputs will be sent every message that passes\nthrough Benthos in parallel."),Object(r.b)("p",null,"If an output applies back pressure it will block all subsequent messages, and if\nan output fails to send a message it will be retried continuously until\ncompletion or service shut down."),Object(r.b)("p",null,"Sometimes it is useful to disable the back pressure or retries of certain fan\nout outputs and instead drop messages that have failed or were blocked. In this\ncase you can wrap outputs with a ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/components/outputs/drop_on"}),Object(r.b)("inlineCode",{parentName:"a"},"drop_on")," output"),"."),Object(r.b)("h3",{id:"fan_out_sequential"},Object(r.b)("inlineCode",{parentName:"h3"},"fan_out_sequential")),Object(r.b)("p",null,"Similar to the fan out pattern except outputs are written to sequentially,\nmeaning an output is only written to once the preceding output has confirmed\nreceipt of the same message."),Object(r.b)("h3",{id:"round_robin"},Object(r.b)("inlineCode",{parentName:"h3"},"round_robin")),Object(r.b)("p",null,"With the round robin pattern each message will be assigned a single output\nfollowing their order. If an output applies back pressure it will block all\nsubsequent messages. If an output fails to send a message then the message will\nbe re-attempted with the next input, and so on."),Object(r.b)("h3",{id:"greedy"},Object(r.b)("inlineCode",{parentName:"h3"},"greedy")),Object(r.b)("p",null,"The greedy pattern results in higher output throughput at the cost of\npotentially disproportionate message allocations to those outputs. Each message\nis sent to a single output, which is determined by allowing outputs to claim\nmessages as soon as they are able to process them. This results in certain\nfaster outputs potentially processing more messages at the cost of slower\noutputs."))}p.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var b=o.a.createContext({}),l=function(e){var t=o.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(b.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),u=l(n),d=a,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||r;return n?o.a.createElement(m,i(i({ref:t},b),{},{components:n})):o.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var b=2;b<r;b++)c[b]=n[b];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,o="";if("string"==typeof e||"number"==typeof e)o+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(o&&(o+=" "),o+=n);else for(t in e)e[t]&&(o&&(o+=" "),o+=t);return o}t.a=function(){for(var e,t,n=0,o="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(o&&(o+=" "),o+=t);return o}},413:function(e,t,n){"use strict";var a=n(0),o=n(414);t.a=function(){var e=Object(a.useContext)(o.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),o=Object(a.createContext)(void 0);t.a=o},415:function(e,t,n){"use strict";var a=n(0),o=n.n(a),r=n(413),c=n(412),i=n(56),s=n.n(i),b=37,l=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,u=e.values,p=e.groupId,d=e.className,m=Object(r.a)(),h=m.tabGroupChoices,f=m.setTabGroupChoices,O=Object(a.useState)(i),j=O[0],g=O[1],y=a.Children.toArray(e.children);if(null!=p){var v=h[p];null!=v&&v!==j&&u.some((function(e){return e.value===v}))&&g(v)}var N=function(e){g(e),null!=p&&f(p,e)},_=[];return o.a.createElement("div",null,o.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},d)},u.map((function(e){var t=e.value,n=e.label;return o.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(c.a)("tabs__item",s.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return _.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case l:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(_,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(y.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):o.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},416:function(e,t,n){"use strict";var a=n(3),o=n(0),r=n.n(o);t.a=function(e){var t=e.children,n=e.hidden,o=e.className;return r.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:o}),t)}}}]);