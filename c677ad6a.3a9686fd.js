(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{325:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return m}));var r=t(3),o=t(7),a=(t(0),t(386)),i=["components"],c={title:"Using Enviroment Variables in the API",sidebar_label:"Enviroment Variables for API"},l={unversionedId:"platform_concepts/studio/api-management/enviroment-variables",id:"platform_concepts/studio/api-management/enviroment-variables",isDocsHomePage:!1,title:"Using Enviroment Variables in the API",description:"Use different API endpoint for different deployment environment",source:"@site/docs/platform_concepts/studio/api-management/enviroment-variables.md",slug:"/platform_concepts/studio/api-management/enviroment-variables",permalink:"/docs/platform_concepts/studio/api-management/enviroment-variables",version:"current",sidebar_label:"Enviroment Variables for API",sidebar:"platform_concepts",previous:{title:"API Management",permalink:"/docs/platform_concepts/studio/api-management/receive-data"},next:{title:"How to send bearer token from one API result to another APIs header?",permalink:"/docs/platform_concepts/studio/api-management/bearer-token"}},p=[{value:"Use different API endpoint for different deployment environment",id:"use-different-api-endpoint-for-different-deployment-environment",children:[]}],s={toc:p};function m(e){var n=e.components,t=Object(o.a)(e,i);return Object(a.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"use-different-api-endpoint-for-different-deployment-environment"},"Use different API endpoint for different deployment environment"),Object(a.b)("p",null,"In many cases you might have different API endpoints for different deployment environments such as staging, production and sandbox."),Object(a.b)("p",null,"Let\u2019s see how to configure the same on the yellow.ai in this doc:"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Checkout Studio > Builder > API and open an API tab or create a new API.\nIn the API URL, replace the environment/slug with {{{env.placeholder}}} and keep the rest of the URL the same.\nFrom the right sidebar, click on ",Object(a.b)("inlineCode",{parentName:"li"},"Configure Environment"),".")),Object(a.b)("p",null,Object(a.b)("img",{parentName:"p",src:"https://i.imgur.com/reuB4e4.png",alt:null})),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"Add a placeholder for the API endpoint. For the course of this guide, we'll be using URL as an API placeholder.\nBelow that add API endpoints for all three deployment environments.")),Object(a.b)("img",{src:"https://i.imgur.com/8ieZhgh.png",alt:"drawing",width:"60%"}),Object(a.b)("ol",{start:3},Object(a.b)("li",{parentName:"ol"},"Lastly, before making an API call select an environment from the dropdown. Based on the environment variables you\u2019ve configured earlier, it\u2019ll replace {{{env.variables}}} placeholder with the value; here is it sandbox_infra.\nHence final URL end point would be ",Object(a.b)("a",{parentName:"li",href:"https://sandbox_infra.testapi.com"},"https://sandbox_infra.testapi.com")," for sandbox infra.")),Object(a.b)("p",null,Object(a.b)("img",{parentName:"p",src:"https://i.imgur.com/fP0xs3R.png",alt:null})),Object(a.b)("img",{src:"https://i.imgur.com/LB3IvCT.png",alt:"drawing",width:"60%"}))}m.isMDXComponent=!0},386:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return u}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=o.a.createContext({}),s=function(e){var n=o.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=s(e.components);return o.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},f=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),f=r,u=m["".concat(i,".").concat(f)]||m[f]||d[f]||a;return t?o.a.createElement(u,c(c({ref:n},p),{},{components:t})):o.a.createElement(u,c({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,i=new Array(a);i[0]=f;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}f.displayName="MDXCreateElement"}}]);