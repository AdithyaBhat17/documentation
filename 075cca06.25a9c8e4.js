(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{411:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),b=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=b(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=b(n),u=r,m=p["".concat(c,".").concat(u)]||p[u]||d[u]||i;return n?a.a.createElement(m,l(l({ref:t},s),{},{components:n})):a.a.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,c[1]=l;for(var s=2;s<i;s++)c[s]=n[s];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},413:function(e,t,n){"use strict";var r=n(0),a=n(414);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},415:function(e,t,n){"use strict";var r=n(0),a=n.n(r),i=n(413),c=n(412),l=n(56),o=n.n(l),s=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,l=e.defaultValue,p=e.values,d=e.groupId,u=e.className,m=Object(i.a)(),f=m.tabGroupChoices,O=m.setTabGroupChoices,j=Object(r.useState)(l),h=j[0],y=j[1],_=r.Children.toArray(e.children);if(null!=d){var N=f[d];null!=N&&N!==h&&p.some((function(e){return e.value===N}))&&y(N)}var v=function(e){y(e),null!=d&&O(d,e)},g=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},u)},p.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(c.a)("tabs__item",o.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return g.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(g,e.target,e)},onFocus:function(){return v(t)},onClick:function(){v(t)}},n)}))),t?Object(r.cloneElement)(_.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},_.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},416:function(e,t,n){"use strict";var r=n(3),a=n(0),i=n.n(a);t.a=function(e){var t=e.children,n=e.hidden,a=e.className;return i.a.createElement("div",Object(r.a)({role:"tabpanel"},{hidden:n,className:a}),t)}},85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return b})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),i=(n(0),n(411)),c=n(415),l=n(416),o={title:"redis_streams",type:"input",status:"stable",categories:["Services"]},s={unversionedId:"components/inputs/redis_streams",id:"components/inputs/redis_streams",isDocsHomePage:!1,title:"redis_streams",description:"\x3c!--",source:"@site/docs/components/inputs/redis_streams.md",slug:"/components/inputs/redis_streams",permalink:"/docs/components/inputs/redis_streams",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/inputs/redis_streams.md",version:"current",sidebar:"docs",previous:{title:"redis_pubsub",permalink:"/docs/components/inputs/redis_pubsub"},next:{title:"resource",permalink:"/docs/components/inputs/resource"}},b=[{value:"Fields",id:"fields",children:[{value:"<code>url</code>",id:"url",children:[]},{value:"<code>kind</code>",id:"kind",children:[]},{value:"<code>master</code>",id:"master",children:[]},{value:"<code>tls</code>",id:"tls",children:[]},{value:"<code>tls.enabled</code>",id:"tlsenabled",children:[]},{value:"<code>tls.skip_cert_verify</code>",id:"tlsskip_cert_verify",children:[]},{value:"<code>tls.root_cas_file</code>",id:"tlsroot_cas_file",children:[]},{value:"<code>tls.client_certs</code>",id:"tlsclient_certs",children:[]},{value:"<code>tls.client_certs[].cert</code>",id:"tlsclient_certscert",children:[]},{value:"<code>tls.client_certs[].key</code>",id:"tlsclient_certskey",children:[]},{value:"<code>tls.client_certs[].cert_file</code>",id:"tlsclient_certscert_file",children:[]},{value:"<code>tls.client_certs[].key_file</code>",id:"tlsclient_certskey_file",children:[]},{value:"<code>body_key</code>",id:"body_key",children:[]},{value:"<code>streams</code>",id:"streams",children:[]},{value:"<code>limit</code>",id:"limit",children:[]},{value:"<code>client_id</code>",id:"client_id",children:[]},{value:"<code>consumer_group</code>",id:"consumer_group",children:[]},{value:"<code>start_from_oldest</code>",id:"start_from_oldest",children:[]},{value:"<code>commit_period</code>",id:"commit_period",children:[]},{value:"<code>timeout</code>",id:"timeout",children:[]}]}],p={toc:b};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Pulls messages from Redis (v5.0+) streams with the XREADGROUP command. The\n",Object(i.b)("inlineCode",{parentName:"p"},"client_id")," should be unique for each consumer of a group."),Object(i.b)(c.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(i.b)(l.a,{value:"common",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Common config fields, showing default values\ninput:\n  redis_streams:\n    url: tcp://localhost:6379\n    body_key: body\n    streams:\n      - benthos_stream\n    limit: 10\n    client_id: benthos_consumer\n    consumer_group: benthos_group\n"))),Object(i.b)(l.a,{value:"advanced",mdxType:"TabItem"},Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),'# All config fields, showing default values\ninput:\n  redis_streams:\n    url: tcp://localhost:6379\n    kind: simple\n    master: ""\n    tls:\n      enabled: false\n      skip_cert_verify: false\n      root_cas_file: ""\n      client_certs: []\n    body_key: body\n    streams:\n      - benthos_stream\n    limit: 10\n    client_id: benthos_consumer\n    consumer_group: benthos_group\n    start_from_oldest: true\n    commit_period: 1s\n    timeout: 1s\n')))),Object(i.b)("p",null,"Redis stream entries are key/value pairs, as such it is necessary to specify the\nkey that contains the body of the message. All other keys/value pairs are saved\nas metadata fields."),Object(i.b)("h2",{id:"fields"},"Fields"),Object(i.b)("h3",{id:"url"},Object(i.b)("inlineCode",{parentName:"h3"},"url")),Object(i.b)("p",null,"The URL of the target Redis server. Database is optional and is supplied as the URL path. ",Object(i.b)("inlineCode",{parentName:"p"},"tcp")," scheme is the same as ",Object(i.b)("inlineCode",{parentName:"p"},"redis")),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"tcp://localhost:6379"'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nurl: :6397\n\nurl: localhost:6397\n\nurl: redis://localhost:6379\n\nurl: redis://localhost:6379/1\n\nurl: redis://localhost:6379/1,redis://localhost:6380/1\n")),Object(i.b)("h3",{id:"kind"},Object(i.b)("inlineCode",{parentName:"h3"},"kind")),Object(i.b)("p",null,"Specifies a simple, cluster-aware, or failover-aware redis client."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"simple"'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nkind: simple\n\nkind: cluster\n\nkind: failover\n")),Object(i.b)("h3",{id:"master"},Object(i.b)("inlineCode",{parentName:"h3"},"master")),Object(i.b)("p",null,"Name of the redis master when ",Object(i.b)("inlineCode",{parentName:"p"},"kind")," is ",Object(i.b)("inlineCode",{parentName:"p"},"failover")),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nmaster: mymaster\n")),Object(i.b)("h3",{id:"tls"},Object(i.b)("inlineCode",{parentName:"h3"},"tls")),Object(i.b)("p",null,"Custom TLS settings can be used to override system defaults."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"object"),"  "),Object(i.b)("h3",{id:"tlsenabled"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.enabled")),Object(i.b)("p",null,"Whether custom TLS settings are enabled."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"bool"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(i.b)("h3",{id:"tlsskip_cert_verify"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.skip_cert_verify")),Object(i.b)("p",null,"Whether to skip server side certificate verification."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"bool"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(i.b)("h3",{id:"tlsroot_cas_file"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.root_cas_file")),Object(i.b)("p",null,"An optional path of a root certificate authority file to use. This is a file, often with a .pem extension, containing a certificate chain from the parent trusted root certificate, to possible intermediate signing certificates, to the host certificate."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nroot_cas_file: ./root_cas.pem\n")),Object(i.b)("h3",{id:"tlsclient_certs"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.client_certs")),Object(i.b)("p",null,"A list of client certificates to use. For each certificate either the fields ",Object(i.b)("inlineCode",{parentName:"p"},"cert")," and ",Object(i.b)("inlineCode",{parentName:"p"},"key"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"cert_file")," and ",Object(i.b)("inlineCode",{parentName:"p"},"key_file")," should be specified, but not both."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"array"),"  "),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"# Examples\n\nclient_certs:\n  - cert: foo\n    key: bar\n\nclient_certs:\n  - cert_file: ./example.pem\n    key_file: ./example.key\n")),Object(i.b)("h3",{id:"tlsclient_certscert"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].cert")),Object(i.b)("p",null,"A plain text certificate to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"tlsclient_certskey"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].key")),Object(i.b)("p",null,"A plain text certificate key to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"tlsclient_certscert_file"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].cert_file")),Object(i.b)("p",null,"The path to a certificate to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"tlsclient_certskey_file"},Object(i.b)("inlineCode",{parentName:"h3"},"tls.client_certs[].key_file")),Object(i.b)("p",null,"The path of a certificate key to use."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'""'),"  "),Object(i.b)("h3",{id:"body_key"},Object(i.b)("inlineCode",{parentName:"h3"},"body_key")),Object(i.b)("p",null,"The field key to extract the raw message from. All other keys will be stored in the message as metadata."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"body"'),"  "),Object(i.b)("h3",{id:"streams"},Object(i.b)("inlineCode",{parentName:"h3"},"streams")),Object(i.b)("p",null,"A list of streams to consume from."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"array"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'["benthos_stream"]'),"  "),Object(i.b)("h3",{id:"limit"},Object(i.b)("inlineCode",{parentName:"h3"},"limit")),Object(i.b)("p",null,"The maximum number of messages to consume from a single request."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"number"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"10"),"  "),Object(i.b)("h3",{id:"client_id"},Object(i.b)("inlineCode",{parentName:"h3"},"client_id")),Object(i.b)("p",null,"An identifier for the client connection."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"benthos_consumer"'),"  "),Object(i.b)("h3",{id:"consumer_group"},Object(i.b)("inlineCode",{parentName:"h3"},"consumer_group")),Object(i.b)("p",null,"An identifier for the consumer group of the stream."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"benthos_group"'),"  "),Object(i.b)("h3",{id:"start_from_oldest"},Object(i.b)("inlineCode",{parentName:"h3"},"start_from_oldest")),Object(i.b)("p",null,"If an offset is not found for a stream, determines whether to consume from the oldest available offset, otherwise messages are consumed from the latest offset."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"bool"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"  "),Object(i.b)("h3",{id:"commit_period"},Object(i.b)("inlineCode",{parentName:"h3"},"commit_period")),Object(i.b)("p",null,"The period of time between each commit of the current offset. Offsets are always committed during shutdown."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"1s"'),"  "),Object(i.b)("h3",{id:"timeout"},Object(i.b)("inlineCode",{parentName:"h3"},"timeout")),Object(i.b)("p",null,"The length of time to poll for new messages before reattempting."),Object(i.b)("p",null,"Type: ",Object(i.b)("inlineCode",{parentName:"p"},"string"),Object(i.b)("br",{parentName:"p"}),"\n","Default: ",Object(i.b)("inlineCode",{parentName:"p"},'"1s"'),"  "))}d.isMDXComponent=!0}}]);