(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{138:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return u})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var i=n(3),a=n(7),o=(n(0),n(411)),u={title:"Dynamic Inputs and Outputs"},r={unversionedId:"configuration/dynamic_inputs_and_outputs",id:"configuration/dynamic_inputs_and_outputs",isDocsHomePage:!1,title:"Dynamic Inputs and Outputs",description:"It is possible to have sets of inputs and outputs in Benthos that can be added,",source:"@site/docs/configuration/dynamic_inputs_and_outputs.md",slug:"/configuration/dynamic_inputs_and_outputs",permalink:"/docs/configuration/dynamic_inputs_and_outputs",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/configuration/dynamic_inputs_and_outputs.md",version:"current",sidebar:"docs",previous:{title:"Unit Testing",permalink:"/docs/configuration/unit_testing"},next:{title:"Components",permalink:"/docs/components/about"}},p=[{value:"API",id:"api",children:[{value:"<code>/inputs</code>",id:"inputs",children:[]},{value:"<code>/inputs/{input_label}</code>",id:"inputsinput_label",children:[]},{value:"<code>/outputs</code>",id:"outputs",children:[]},{value:"<code>/outputs/{output_label}</code>",id:"outputsoutput_label",children:[]}]},{value:"Applications",id:"applications",children:[]}],c={toc:p};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"It is possible to have sets of inputs and outputs in Benthos that can be added,\nupdated and removed during runtime with the ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/components/inputs/dynamic"}),"dynamic fan in")," and\n",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"/docs/components/outputs/dynamic"}),"dynamic fan out")," types."),Object(o.b)("p",null,"Dynamic inputs and outputs are each identified by unique string labels, which\nare specified when adding them either in configuration or via the HTTP API. The\nlabels are useful when querying which types are active."),Object(o.b)("h2",{id:"api"},"API"),Object(o.b)("p",null,"The API for dynamic types (both inputs and outputs) is a collection of HTTP REST\nendpoints:"),Object(o.b)("h3",{id:"inputs"},Object(o.b)("inlineCode",{parentName:"h3"},"/inputs")),Object(o.b)("p",null,"Returns a JSON object that maps input labels to an object containing details\nabout the input, including uptime and configuration. If the input has terminated\nnaturally the uptime will be set to ",Object(o.b)("inlineCode",{parentName:"p"},"stopped"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "<string, input_label>": {\n    "uptime": "<string>",\n    "config": <object>\n  },\n  ...\n}\n')),Object(o.b)("h3",{id:"inputsinput_label"},Object(o.b)("inlineCode",{parentName:"h3"},"/inputs/{input_label}")),Object(o.b)("p",null,"GET returns the configuration of the input idenfified by ",Object(o.b)("inlineCode",{parentName:"p"},"input_label"),"."),Object(o.b)("p",null,"POST sets the input ",Object(o.b)("inlineCode",{parentName:"p"},"input_label")," to the body of the request parsed as a JSON\nconfiguration. If the input label already exists the previous input is first\nstopped and removed."),Object(o.b)("p",null,"DELETE stops and removes the input identified by ",Object(o.b)("inlineCode",{parentName:"p"},"input_label"),"."),Object(o.b)("h3",{id:"outputs"},Object(o.b)("inlineCode",{parentName:"h3"},"/outputs")),Object(o.b)("p",null,"Returns a JSON object that maps output labels to an object containing details\nabout the output, including uptime and configuration. If the output has\nterminated naturally the uptime will be set to ",Object(o.b)("inlineCode",{parentName:"p"},"stopped"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "<string, output_label>": {\n    "uptime": "<string>",\n    "config": <object>\n  },\n  ...\n}\n')),Object(o.b)("h3",{id:"outputsoutput_label"},Object(o.b)("inlineCode",{parentName:"h3"},"/outputs/{output_label}")),Object(o.b)("p",null,"GET returns the configuration of the output idenfified by ",Object(o.b)("inlineCode",{parentName:"p"},"output_label"),"."),Object(o.b)("p",null,"POST sets the output ",Object(o.b)("inlineCode",{parentName:"p"},"output_label")," to the body of the request parsed as a JSON\nconfiguration. If the output label already exists the previous output is first\nstopped and removed."),Object(o.b)("p",null,"DELETE stops and removes the output identified by ",Object(o.b)("inlineCode",{parentName:"p"},"output_label"),"."),Object(o.b)("p",null,"A custom prefix can be set for these endpoints in configuration."),Object(o.b)("h2",{id:"applications"},"Applications"),Object(o.b)("p",null,"Dynamic types are useful when a platforms data streams might need to change\nregularly and automatically. It is also useful for triggering batches of\nplatform data, e.g. a cron job can be created to send hourly curl requests that\nadds a dynamic input to read a file of sample data:"),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-sh"}),'curl http://localhost:4195/inputs/read_sample -d @- << EOF\n{\n    "file": {\n        "path": "/tmp/line_delim_sample_data.txt"\n    }\n}\nEOF\n')),Object(o.b)("p",null,"Some inputs have a finite lifetime, e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"s3")," without an SQS queue configured\nwill close once the whole bucket has been read. When a dynamic types lifetime\nends the ",Object(o.b)("inlineCode",{parentName:"p"},"uptime")," field of an input listing will be set to ",Object(o.b)("inlineCode",{parentName:"p"},"stopped"),". You can\nuse this to write tools that trigger new inputs (to move onto the next bucket,\nfor example)."))}l.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),l=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=l(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),s=l(n),b=i,m=s["".concat(u,".").concat(b)]||s[b]||d[b]||o;return n?a.a.createElement(m,r(r({ref:t},c),{},{components:n})):a.a.createElement(m,r({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,u=new Array(o);u[0]=b;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r.mdxType="string"==typeof e?e:i,u[1]=r;for(var c=2;c<o;c++)u[c]=n[c];return a.a.createElement.apply(null,u)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);