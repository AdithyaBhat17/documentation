(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{217:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return b})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return d}));var a=n(3),r=n(7),c=(n(0),n(411)),l=n(415),i=n(416),o={title:"file",type:"input",status:"stable",categories:["Local"]},b={unversionedId:"components/inputs/file",id:"components/inputs/file",isDocsHomePage:!1,title:"file",description:"\x3c!--",source:"@site/docs/components/inputs/file.md",slug:"/components/inputs/file",permalink:"/docs/components/inputs/file",editUrl:"https://github.com/Jeffail/benthos/edit/master/website/docs/components/inputs/file.md",version:"current",sidebar:"docs",previous:{title:"dynamic",permalink:"/docs/components/inputs/dynamic"},next:{title:"gcp_pubsub",permalink:"/docs/components/inputs/gcp_pubsub"}},s=[{value:"Metadata",id:"metadata",children:[]},{value:"Examples",id:"examples",children:[]},{value:"Fields",id:"fields",children:[{value:"<code>paths</code>",id:"paths",children:[]},{value:"<code>codec</code>",id:"codec",children:[]},{value:"<code>multipart</code>",id:"multipart",children:[]},{value:"<code>max_buffer</code>",id:"max_buffer",children:[]},{value:"<code>delete_on_finish</code>",id:"delete_on_finish",children:[]}]}],u={toc:s};function d(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Consumes data from files on disk, emitting messages according to a chosen codec."),Object(c.b)(l.a,{defaultValue:"common",values:[{label:"Common",value:"common"},{label:"Advanced",value:"advanced"}],mdxType:"Tabs"},Object(c.b)(i.a,{value:"common",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# Common config fields, showing default values\ninput:\n  file:\n    paths: []\n    codec: lines\n"))),Object(c.b)(i.a,{value:"advanced",mdxType:"TabItem"},Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"# All config fields, showing default values\ninput:\n  file:\n    paths: []\n    codec: lines\n    multipart: false\n    max_buffer: 1000000\n    delete_on_finish: false\n")))),Object(c.b)("h3",{id:"metadata"},"Metadata"),Object(c.b)("p",null,"This input adds the following metadata fields to each message:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-text"}),"- path\n")),Object(c.b)("p",null,"You can access these metadata fields using\n",Object(c.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/configuration/interpolation#metadata"}),"function interpolation"),"."),Object(c.b)("h2",{id:"examples"},"Examples"),Object(c.b)(l.a,{defaultValue:"Read a Bunch of CSVs",values:[{label:"Read a Bunch of CSVs",value:"Read a Bunch of CSVs"}],mdxType:"Tabs"},Object(c.b)(i.a,{value:"Read a Bunch of CSVs",mdxType:"TabItem"},Object(c.b)("p",null,"If we wished to consume a directory of CSV files as structured documents we can use a glob pattern and the ",Object(c.b)("inlineCode",{parentName:"p"},"csv")," codec:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),"input:\n  file:\n    paths: [ ./data/*.csv ]\n    codec: csv\n")))),Object(c.b)("h2",{id:"fields"},"Fields"),Object(c.b)("h3",{id:"paths"},Object(c.b)("inlineCode",{parentName:"h3"},"paths")),Object(c.b)("p",null,"A list of paths to consume sequentially. Glob patterns are supported."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"array"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"[]"),"  "),Object(c.b)("h3",{id:"codec"},Object(c.b)("inlineCode",{parentName:"h3"},"codec")),Object(c.b)("p",null,"The way in which the bytes of consumed files are converted into messages, codecs are useful for specifying how large files might be processed in small chunks rather than loading it all in memory. It's possible to consume lines using a custom delimiter with the ",Object(c.b)("inlineCode",{parentName:"p"},"delim:x")," codec, where x is the character sequence custom delimiter."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"string"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},'"lines"'),"  "),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Option"),Object(c.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Summary"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"auto")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"EXPERIMENTAL: Attempts to derive a codec for each file based on information such as the extension. For example, a .tar.gz file would be consumed with the tar-gzip codec. Defaults to all-bytes.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"all-bytes")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume the entire file as a single binary message.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"csv")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume structured rows as comma separated values, the first row must be a header row.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"csv-gzip")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume structured rows as comma separated values from a gzip compressed file, the first row must be a header row.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"delim:x")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume the file in segments divided by a custom delimiter.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"chunker:x")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume the file in chunks of a given number of bytes.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"lines")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Consume the file in segments divided by linebreaks.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"tar")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Parse the file as a tar archive, and consume each file of the archive as a message.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"tar-gzip")),Object(c.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"Parse the file as a gzip compressed tar archive, and consume each file of the archive as a message.")))),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-yaml"}),'# Examples\n\ncodec: lines\n\ncodec: "delim:\\t"\n\ncodec: delim:foobar\n')),Object(c.b)("h3",{id:"multipart"},Object(c.b)("inlineCode",{parentName:"h3"},"multipart")),Object(c.b)("p",null,"Consume multipart messages from the codec by interpretting empty lines as the end of the message. Multipart messages are processed as a batch within Benthos. Not all codecs are appropriate for multipart messages."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "),Object(c.b)("h3",{id:"max_buffer"},Object(c.b)("inlineCode",{parentName:"h3"},"max_buffer")),Object(c.b)("p",null,"The largest token size expected when consuming delimited files."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"number"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"1000000"),"  "),Object(c.b)("h3",{id:"delete_on_finish"},Object(c.b)("inlineCode",{parentName:"h3"},"delete_on_finish")),Object(c.b)("p",null,"Whether to delete consumed files from the disk once they are fully consumed."),Object(c.b)("p",null,"Type: ",Object(c.b)("inlineCode",{parentName:"p"},"bool"),Object(c.b)("br",{parentName:"p"}),"\n","Default: ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"  "))}d.isMDXComponent=!0},411:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,l=e.parentName,b=o(e,["components","mdxType","originalType","parentName"]),u=s(n),p=a,m=u["".concat(l,".").concat(p)]||u[p]||d[p]||c;return n?r.a.createElement(m,i(i({ref:t},b),{},{components:n})):r.a.createElement(m,i({ref:t},b))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,l=new Array(c);l[0]=p;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var b=2;b<c;b++)l[b]=n[b];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},412:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},413:function(e,t,n){"use strict";var a=n(0),r=n(414);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},414:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},415:function(e,t,n){"use strict";var a=n(0),r=n.n(a),c=n(413),l=n(412),i=n(56),o=n.n(i),b=37,s=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,u=e.values,d=e.groupId,p=e.className,m=Object(c.a)(),f=m.tabGroupChoices,O=m.setTabGroupChoices,j=Object(a.useState)(i),h=j[0],g=j[1],y=a.Children.toArray(e.children);if(null!=d){var v=f[d];null!=v&&v!==h&&u.some((function(e){return e.value===v}))&&g(v)}var N=function(e){g(e),null!=d&&O(d,e)},C=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},p)},u.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":h===t,className:Object(l.a)("tabs__item",o.a.tabItem,{"tabs__item--active":h===t}),key:t,ref:function(e){return C.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case s:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case b:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(C,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(a.cloneElement)(y.filter((function(e){return e.props.value===h}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},y.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==h})}))))}},416:function(e,t,n){"use strict";var a=n(3),r=n(0),c=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return c.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);